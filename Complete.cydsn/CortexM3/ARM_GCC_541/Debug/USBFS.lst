ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_Init, %function
  25              	USBFS_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS.c"
   1:Generated_Source\PSoC5/USBFS.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS.c **** * \file USBFS.c
   3:Generated_Source\PSoC5/USBFS.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS.c **** *
   5:Generated_Source\PSoC5/USBFS.c **** * \brief
   6:Generated_Source\PSoC5/USBFS.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBFS.c **** *
   8:Generated_Source\PSoC5/USBFS.c **** * Note:
   9:Generated_Source\PSoC5/USBFS.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBFS.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBFS.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBFS.c **** *
  13:Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBFS.c **** * \copyright
  15:Generated_Source\PSoC5/USBFS.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBFS.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBFS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBFS.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBFS.c **** 
  21:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_pvt.h"
  22:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_cydmac.h"
  23:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_hid.h"
  24:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_Dp.h"
  25:Generated_Source\PSoC5/USBFS.c **** 
  26:Generated_Source\PSoC5/USBFS.c **** 
  27:Generated_Source\PSoC5/USBFS.c **** /***************************************
  28:Generated_Source\PSoC5/USBFS.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBFS.c **** ***************************************/
  30:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 2


  31:Generated_Source\PSoC5/USBFS.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBFS.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBFS.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBFS.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBFS.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBFS.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBFS.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBFS.c **** * functions.
  39:Generated_Source\PSoC5/USBFS.c **** */
  40:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_initVar = 0u;
  41:Generated_Source\PSoC5/USBFS.c **** 
  42:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBFS.c ****         static void USBFS_InitEpDma(void);
  45:Generated_Source\PSoC5/USBFS.c **** 
  46:Generated_Source\PSoC5/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBFS.c ****         const uint8 USBFS_DmaChan[USBFS_MAX_EP] =
  48:Generated_Source\PSoC5/USBFS.c ****         {
  49:Generated_Source\PSoC5/USBFS.c ****             0u,
  50:Generated_Source\PSoC5/USBFS.c ****             0u,
  51:Generated_Source\PSoC5/USBFS.c ****             0u,
  52:Generated_Source\PSoC5/USBFS.c ****             0u,
  53:Generated_Source\PSoC5/USBFS.c ****             0u,
  54:Generated_Source\PSoC5/USBFS.c ****             0u,
  55:Generated_Source\PSoC5/USBFS.c ****             0u,
  56:Generated_Source\PSoC5/USBFS.c ****             0u,
  57:Generated_Source\PSoC5/USBFS.c ****             0u,
  58:Generated_Source\PSoC5/USBFS.c ****         };        
  59:Generated_Source\PSoC5/USBFS.c ****     #else
  60:Generated_Source\PSoC5/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaChan[USBFS_MAX_EP];
  62:Generated_Source\PSoC5/USBFS.c ****         
  63:Generated_Source\PSoC5/USBFS.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaTd[USBFS_MAX_EP];
  65:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBFS.c **** 
  68:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBFS.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpBurstCnt   [USBFS_MAX_EP];
  72:Generated_Source\PSoC5/USBFS.c ****     
  73:Generated_Source\PSoC5/USBFS.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpLastBurstEl[USBFS_MAX_EP];
  75:Generated_Source\PSoC5/USBFS.c **** 
  76:Generated_Source\PSoC5/USBFS.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpBurstCntBackup  [USBFS_MAX_EP];
  78:Generated_Source\PSoC5/USBFS.c ****     uint32 USBFS_DmaEpBufferAddrBackup[USBFS_MAX_EP];
  79:Generated_Source\PSoC5/USBFS.c ****      
  80:Generated_Source\PSoC5/USBFS.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBFS.c ****     const uint8 USBFS_DmaReqOut[USBFS_MAX_EP] =
  82:Generated_Source\PSoC5/USBFS.c ****     {
  83:Generated_Source\PSoC5/USBFS.c ****         0u,
  84:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep4_dma__TR_OUTPUT,
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 3


  88:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep5_dma__TR_OUTPUT,
  89:Generated_Source\PSoC5/USBFS.c ****         0u,
  90:Generated_Source\PSoC5/USBFS.c ****         0u,
  91:Generated_Source\PSoC5/USBFS.c ****         0u,
  92:Generated_Source\PSoC5/USBFS.c ****     };
  93:Generated_Source\PSoC5/USBFS.c **** 
  94:Generated_Source\PSoC5/USBFS.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBFS.c ****     const uint8 USBFS_DmaBurstEndOut[USBFS_MAX_EP] =
  96:Generated_Source\PSoC5/USBFS.c ****     {
  97:Generated_Source\PSoC5/USBFS.c ****         0u,
  98:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBFS.c ****     };
 107:Generated_Source\PSoC5/USBFS.c ****     
 108:Generated_Source\PSoC5/USBFS.c **** #else
 109:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBFS.c ****         static uint8 clearInDataRdyStatus = USBFS_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaNextTd[USBFS_MAX_EP];
 112:Generated_Source\PSoC5/USBFS.c ****         const uint8 USBFS_epX_TD_TERMOUT_EN[USBFS_MAX_EP] =
 113:Generated_Source\PSoC5/USBFS.c ****         {
 114:Generated_Source\PSoC5/USBFS.c ****             0u,
 115:Generated_Source\PSoC5/USBFS.c ****             0u,
 116:Generated_Source\PSoC5/USBFS.c ****             0u,
 117:Generated_Source\PSoC5/USBFS.c ****             0u,
 118:Generated_Source\PSoC5/USBFS.c ****             0u,
 119:Generated_Source\PSoC5/USBFS.c ****             0u,
 120:Generated_Source\PSoC5/USBFS.c ****             0u,
 121:Generated_Source\PSoC5/USBFS.c ****             0u,
 122:Generated_Source\PSoC5/USBFS.c ****             0u,
 123:Generated_Source\PSoC5/USBFS.c ****         };
 124:Generated_Source\PSoC5/USBFS.c **** 
 125:Generated_Source\PSoC5/USBFS.c ****         volatile uint16 USBFS_inLength[USBFS_MAX_EP];
 126:Generated_Source\PSoC5/USBFS.c ****         const uint8 *USBFS_inDataPointer[USBFS_MAX_EP];
 127:Generated_Source\PSoC5/USBFS.c ****         volatile uint8 USBFS_inBufFull[USBFS_MAX_EP];
 128:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBFS.c **** 
 132:Generated_Source\PSoC5/USBFS.c **** 
 133:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Start
 135:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBFS.c **** *
 137:Generated_Source\PSoC5/USBFS.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBFS.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBFS.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBFS.c **** *   operation.
 141:Generated_Source\PSoC5/USBFS.c **** *
 142:Generated_Source\PSoC5/USBFS.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBFS.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 4


 145:Generated_Source\PSoC5/USBFS.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBFS.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBFS.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBFS.c **** *
 149:Generated_Source\PSoC5/USBFS.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBFS.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBFS.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBFS.c **** *
 153:Generated_Source\PSoC5/USBFS.c **** *  \param device
 154:Generated_Source\PSoC5/USBFS.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBFS.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBFS.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBFS.c **** *   following list.
 163:Generated_Source\PSoC5/USBFS.c **** *
 164:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBFS.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBFS.c **** *
 167:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBFS.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBFS.c **** *
 170:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBFS.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBFS.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBFS.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 177:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_initVar
 178:Generated_Source\PSoC5/USBFS.c **** *
 179:Generated_Source\PSoC5/USBFS.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBFS.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBFS.c **** *
 182:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 183:Generated_Source\PSoC5/USBFS.c **** *  No.
 184:Generated_Source\PSoC5/USBFS.c **** *
 185:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBFS.c **** void USBFS_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBFS.c **** {
 188:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 189:Generated_Source\PSoC5/USBFS.c ****     {
 190:Generated_Source\PSoC5/USBFS.c ****         USBFS_Init();
 191:Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
 192:Generated_Source\PSoC5/USBFS.c ****     }
 193:Generated_Source\PSoC5/USBFS.c **** 
 194:Generated_Source\PSoC5/USBFS.c ****     USBFS_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBFS.c **** }
 196:Generated_Source\PSoC5/USBFS.c **** 
 197:Generated_Source\PSoC5/USBFS.c **** 
 198:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Init
 200:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 5


 202:Generated_Source\PSoC5/USBFS.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBFS.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBFS.c **** * USBFS_Init() because the USBFS_Start() routine calls
 205:Generated_Source\PSoC5/USBFS.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBFS.c **** *
 207:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 208:Generated_Source\PSoC5/USBFS.c **** *  No.
 209:Generated_Source\PSoC5/USBFS.c **** *
 210:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBFS.c **** void USBFS_Init(void) 
 212:Generated_Source\PSoC5/USBFS.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBFS.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBFS.c **** 
 217:Generated_Source\PSoC5/USBFS.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBFS.c ****     * USBFS_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBFS.c ****     */
 220:Generated_Source\PSoC5/USBFS.c **** 
 221:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= ~ (uint32) USBFS_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBFS.c **** 
 224:Generated_Source\PSoC5/USBFS.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBFS.c ****     USBFS_BUS_RST_CNT_REG = USBFS_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBFS.c **** 
 227:Generated_Source\PSoC5/USBFS.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBFS.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBFS.c ****     */
 230:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG = USBFS_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBFS.c **** 
 232:Generated_Source\PSoC5/USBFS.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG |= USBFS_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBFS.c **** 
 235:Generated_Source\PSoC5/USBFS.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBFS.c **** 
 240:Generated_Source\PSoC5/USBFS.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBFS.c **** 
 243:Generated_Source\PSoC5/USBFS.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_LVL_SEL_REG = USBFS_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBFS.c **** 
 246:Generated_Source\PSoC5/USBFS.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 6


 247:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG = USBFS_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBFS.c **** 
 249:Generated_Source\PSoC5/USBFS.c **** #else
 250:Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0746     		mov	r7, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USBFS.c **** 
 252:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBFS.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBFS.c **** 
 256:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG |= USBFS_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 484A     		ldr	r2, .L3
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG |= USBFS_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBFS.c **** 
 261:Generated_Source\PSoC5/USBFS.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0126     		movs	r6, #1
  57 001e 444B     		ldr	r3, .L3+4
  58 0020 1E70     		strb	r6, [r3]
 263:Generated_Source\PSoC5/USBFS.c **** 
 264:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0225     		movs	r5, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1D70     		strb	r5, [r3]
 265:Generated_Source\PSoC5/USBFS.c **** 
 266:Generated_Source\PSoC5/USBFS.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBFS.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR0_REG &= (uint8) ~USBFS_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USBFS.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 7


 271:Generated_Source\PSoC5/USBFS.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBFS.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBFS.c ****     */
 274:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG &= (uint8) ~(USBFS_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 3D4C     		ldr	r4, .L3+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USBFS.c ****                                                  USBFS_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBFS.c **** 
 277:Generated_Source\PSoC5/USBFS.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8) ~USBFS_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 3C4A     		ldr	r2, .L3+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBFS.c **** 
 280:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 3343     		orrs	r3, r3, r6
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USBFS.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 3046     		mov	r0, r6
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USBFS.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USBFS.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBFS.c ****     USBFS_DM_INP_DIS_REG &= (uint8) ~USBFS_DM_MASK;
  95              		.loc 1 287 0
  96 0062 364B     		ldr	r3, .L3+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG &= (uint8) ~USBFS_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USBFS.c **** 
 290:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 2B43     		orrs	r3, r3, r5
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 8


 108              		.loc 1 292 0
 109 007a 2846     		mov	r0, r5
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USBFS.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USBFS.c **** 
 296:Generated_Source\PSoC5/USBFS.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0023     		movs	r3, #0
 118 008a 2D4A     		ldr	r2, .L3+20
 119 008c 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0132     		adds	r2, r2, #1
 122 0090 1370     		strb	r3, [r2]
 299:Generated_Source\PSoC5/USBFS.c **** 
 300:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBFS.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBFS.c ****     {
 304:Generated_Source\PSoC5/USBFS.c ****         USBFS_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBFS.c **** 
 306:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBFS.c ****         USBFS_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBFS.c ****     }
 310:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBFS.c **** 
 312:Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 312 0
 124 0092 3846     		mov	r0, r7
 125 0094 FFF7FEFF 		bl	CyExitCriticalSection
 126              	.LVL6:
 313:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBFS.c **** 
 315:Generated_Source\PSoC5/USBFS.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBFS.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_HI_VECT_NUM,  USBFS_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_HI_VECT_NUM, &USBFS_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBFS.c **** 
 321:Generated_Source\PSoC5/USBFS.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_LO_VECT_NUM,  USBFS_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_LO_VECT_NUM, &USBFS_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBFS.c **** 
 325:Generated_Source\PSoC5/USBFS.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_MED_VECT_NUM,  USBFS_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_MED_VECT_NUM, &USBFS_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBFS.c **** 
 329:Generated_Source\PSoC5/USBFS.c **** #else
 330:Generated_Source\PSoC5/USBFS.c ****     /* Set bus reset interrupt. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 9


 331:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_BUS_RESET_VECT_NUM, USBFS_BUS_RESET_PRIOR);
 127              		.loc 1 331 0
 128 0098 0721     		movs	r1, #7
 129 009a 1720     		movs	r0, #23
 130 009c FFF7FEFF 		bl	CyIntSetPriority
 131              	.LVL7:
 332:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_BUS_RESET_VECT_NUM,   &USBFS_BUS_RESET_ISR);
 132              		.loc 1 332 0
 133 00a0 2849     		ldr	r1, .L3+24
 134 00a2 1720     		movs	r0, #23
 135 00a4 FFF7FEFF 		bl	CyIntSetVector
 136              	.LVL8:
 333:Generated_Source\PSoC5/USBFS.c **** 
 334:Generated_Source\PSoC5/USBFS.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_EP_0_VECT_NUM, USBFS_EP_0_PRIOR);
 137              		.loc 1 335 0
 138 00a8 0721     		movs	r1, #7
 139 00aa 1820     		movs	r0, #24
 140 00ac FFF7FEFF 		bl	CyIntSetPriority
 141              	.LVL9:
 336:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_EP_0_VECT_NUM,   &USBFS_EP_0_ISR);
 142              		.loc 1 336 0
 143 00b0 2549     		ldr	r1, .L3+28
 144 00b2 1820     		movs	r0, #24
 145 00b4 FFF7FEFF 		bl	CyIntSetVector
 146              	.LVL10:
 337:Generated_Source\PSoC5/USBFS.c **** 
 338:Generated_Source\PSoC5/USBFS.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_SOF_VECT_NUM,  USBFS_SOF_PRIOR);
 147              		.loc 1 340 0
 148 00b8 0721     		movs	r1, #7
 149 00ba 1520     		movs	r0, #21
 150 00bc FFF7FEFF 		bl	CyIntSetPriority
 151              	.LVL11:
 341:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_SOF_VECT_NUM, &USBFS_SOF_ISR);
 152              		.loc 1 341 0
 153 00c0 2249     		ldr	r1, .L3+32
 154 00c2 1520     		movs	r0, #21
 155 00c4 FFF7FEFF 		bl	CyIntSetVector
 156              	.LVL12:
 342:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBFS.c **** 
 344:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_1_VECT_NUM,  USBFS_EP_1_PRIOR);
 157              		.loc 1 346 0
 158 00c8 0721     		movs	r1, #7
 159 00ca 3046     		mov	r0, r6
 160 00cc FFF7FEFF 		bl	CyIntSetPriority
 161              	.LVL13:
 347:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_1_VECT_NUM,  &USBFS_EP_1_ISR);
 162              		.loc 1 347 0
 163 00d0 1F49     		ldr	r1, .L3+36
 164 00d2 3046     		mov	r0, r6
 165 00d4 FFF7FEFF 		bl	CyIntSetVector
 166              	.LVL14:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 10


 348:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBFS.c **** 
 350:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_2_VECT_NUM,  USBFS_EP_2_PRIOR);
 167              		.loc 1 352 0
 168 00d8 0721     		movs	r1, #7
 169 00da 2846     		mov	r0, r5
 170 00dc FFF7FEFF 		bl	CyIntSetPriority
 171              	.LVL15:
 353:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_2_VECT_NUM, &USBFS_EP_2_ISR);
 172              		.loc 1 353 0
 173 00e0 1C49     		ldr	r1, .L3+40
 174 00e2 2846     		mov	r0, r5
 175 00e4 FFF7FEFF 		bl	CyIntSetVector
 176              	.LVL16:
 354:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBFS.c **** 
 356:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_3_VECT_NUM,  USBFS_EP_3_PRIOR);
 177              		.loc 1 358 0
 178 00e8 0721     		movs	r1, #7
 179 00ea 0320     		movs	r0, #3
 180 00ec FFF7FEFF 		bl	CyIntSetPriority
 181              	.LVL17:
 359:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_3_VECT_NUM, &USBFS_EP_3_ISR);
 182              		.loc 1 359 0
 183 00f0 1949     		ldr	r1, .L3+44
 184 00f2 0320     		movs	r0, #3
 185 00f4 FFF7FEFF 		bl	CyIntSetVector
 186              	.LVL18:
 360:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBFS.c **** 
 362:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_4_VECT_NUM,  USBFS_EP_4_PRIOR);
 187              		.loc 1 364 0
 188 00f8 0721     		movs	r1, #7
 189 00fa 0420     		movs	r0, #4
 190 00fc FFF7FEFF 		bl	CyIntSetPriority
 191              	.LVL19:
 365:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_4_VECT_NUM, &USBFS_EP_4_ISR);
 192              		.loc 1 365 0
 193 0100 1649     		ldr	r1, .L3+48
 194 0102 0420     		movs	r0, #4
 195 0104 FFF7FEFF 		bl	CyIntSetVector
 196              	.LVL20:
 366:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBFS.c **** 
 368:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_5_VECT_NUM,  USBFS_EP_5_PRIOR);
 197              		.loc 1 370 0
 198 0108 0721     		movs	r1, #7
 199 010a 0520     		movs	r0, #5
 200 010c FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 11


 201              	.LVL21:
 371:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_5_VECT_NUM, &USBFS_EP_5_ISR);
 202              		.loc 1 371 0
 203 0110 1349     		ldr	r1, .L3+52
 204 0112 0520     		movs	r0, #5
 205 0114 FFF7FEFF 		bl	CyIntSetVector
 206              	.LVL22:
 372:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBFS.c **** 
 374:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_6_VECT_NUM,  USBFS_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_6_VECT_NUM, &USBFS_EP_6_ISR);
 378:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBFS.c **** 
 380:Generated_Source\PSoC5/USBFS.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_7_VECT_NUM,  USBFS_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_7_VECT_NUM, &USBFS_EP_7_ISR);
 384:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBFS.c **** 
 386:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_8_VECT_NUM,  USBFS_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_8_VECT_NUM, &USBFS_EP_8_ISR);
 390:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBFS.c **** 
 392:Generated_Source\PSoC5/USBFS.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_ARB_VECT_NUM,  USBFS_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_ARB_VECT_NUM, &USBFS_ARB_ISR);
 396:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBFS.c **** 
 399:Generated_Source\PSoC5/USBFS.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_DP_INTC_VECT_NUM,  USBFS_DP_INTC_PRIORITY);
 207              		.loc 1 401 0
 208 0118 0721     		movs	r1, #7
 209 011a 0C20     		movs	r0, #12
 210 011c FFF7FEFF 		bl	CyIntSetPriority
 211              	.LVL23:
 402:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_DP_INTC_VECT_NUM, &USBFS_DP_ISR);
 212              		.loc 1 402 0
 213 0120 1049     		ldr	r1, .L3+56
 214 0122 0C20     		movs	r0, #12
 215 0124 FFF7FEFF 		bl	CyIntSetVector
 216              	.LVL24:
 217 0128 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 218              	.LVL25:
 219              	.L4:
 220 012a 00BF     		.align	2
 221              	.L3:
 222 012c A5430040 		.word	1073759141
 223 0130 9D600040 		.word	1073766557
 224 0134 94430040 		.word	1073759124
 225 0138 12600040 		.word	1073766418
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 12


 226 013c F8510040 		.word	1073762808
 227 0140 84600040 		.word	1073766532
 228 0144 00000000 		.word	USBFS_BUS_RESET_ISR
 229 0148 00000000 		.word	USBFS_EP_0_ISR
 230 014c 00000000 		.word	USBFS_SOF_ISR
 231 0150 00000000 		.word	USBFS_EP_1_ISR
 232 0154 00000000 		.word	USBFS_EP_2_ISR
 233 0158 00000000 		.word	USBFS_EP_3_ISR
 234 015c 00000000 		.word	USBFS_EP_4_ISR
 235 0160 00000000 		.word	USBFS_EP_5_ISR
 236 0164 00000000 		.word	USBFS_DP_ISR
 237              		.cfi_endproc
 238              	.LFE1:
 239              		.size	USBFS_Init, .-USBFS_Init
 240              		.section	.text.USBFS_InitComponent,"ax",%progbits
 241              		.align	2
 242              		.global	USBFS_InitComponent
 243              		.thumb
 244              		.thumb_func
 245              		.type	USBFS_InitComponent, %function
 246              	USBFS_InitComponent:
 247              	.LFB2:
 403:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBFS.c **** 
 405:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBFS.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBFS.c ****     USBFS_InitEpDma();
 408:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBFS.c **** }
 410:Generated_Source\PSoC5/USBFS.c **** 
 411:Generated_Source\PSoC5/USBFS.c **** 
 412:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_InitComponent
 414:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBFS.c **** *
 416:Generated_Source\PSoC5/USBFS.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBFS.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBFS.c **** *
 419:Generated_Source\PSoC5/USBFS.c **** * \param device:
 420:Generated_Source\PSoC5/USBFS.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBFS.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBFS.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBFS.c **** *   field.
 424:Generated_Source\PSoC5/USBFS.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBFS.c **** *   following list.
 429:Generated_Source\PSoC5/USBFS.c **** *
 430:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBFS.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBFS.c **** *
 433:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBFS.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBFS.c **** *
 436:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBFS.c **** *                                      regulator depending on the power supply
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 13


 438:Generated_Source\PSoC5/USBFS.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBFS.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBFS.c **** *
 443:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 444:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_device
 445:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_transferState
 446:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configuration
 447:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceStatus
 448:Generated_Source\PSoC5/USBFS.c **** *
 449:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBFS.c **** *
 454:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBFS.c **** *
 456:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 457:Generated_Source\PSoC5/USBFS.c **** *  No.
 458:Generated_Source\PSoC5/USBFS.c **** *
 459:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBFS.c **** void USBFS_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBFS.c **** {
 248              		.loc 1 461 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL26:
 253 0000 10B5     		push	{r4, lr}
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 4, -8
 256              		.cfi_offset 14, -4
 257              	.LVL27:
 462:Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBFS.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBFS.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBFS.c ****     */
 466:Generated_Source\PSoC5/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBFS.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBFS.c **** 
 469:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 258              		.loc 1 469 0
 259 0002 0023     		movs	r3, #0
 260 0004 04E0     		b	.L6
 261              	.LVL28:
 262              	.L7:
 470:Generated_Source\PSoC5/USBFS.c ****     {
 471:Generated_Source\PSoC5/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 263              		.loc 1 471 0 discriminator 3
 264 0006 0124     		movs	r4, #1
 265 0008 264A     		ldr	r2, .L14
 266 000a D454     		strb	r4, [r2, r3]
 469:Generated_Source\PSoC5/USBFS.c ****     {
 267              		.loc 1 469 0 discriminator 3
 268 000c 2344     		add	r3, r3, r4
 269              	.LVL29:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 14


 270 000e DBB2     		uxtb	r3, r3
 271              	.LVL30:
 272              	.L6:
 469:Generated_Source\PSoC5/USBFS.c ****     {
 273              		.loc 1 469 0 is_stmt 0 discriminator 1
 274 0010 022B     		cmp	r3, #2
 275 0012 F8D9     		bls	.L7
 472:Generated_Source\PSoC5/USBFS.c ****     }
 473:Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBFS.c **** 
 475:Generated_Source\PSoC5/USBFS.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBFS.c ****     USBFS_device = device;
 276              		.loc 1 476 0 is_stmt 1
 277 0014 244B     		ldr	r3, .L14+4
 278              	.LVL31:
 279 0016 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBFS.c **** 
 478:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 280              		.loc 1 479 0
 281 0018 0023     		movs	r3, #0
 282 001a 244A     		ldr	r2, .L14+8
 283 001c 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 284              		.loc 1 480 0
 285 001e 244A     		ldr	r2, .L14+12
 286 0020 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 287              		.loc 1 481 0
 288 0022 244A     		ldr	r2, .L14+16
 289 0024 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 290              		.loc 1 482 0
 291 0026 244A     		ldr	r2, .L14+20
 292 0028 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 293              		.loc 1 483 0
 294 002a 244A     		ldr	r2, .L14+24
 295 002c 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 296              		.loc 1 484 0
 297 002e 244A     		ldr	r2, .L14+28
 298 0030 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 299              		.loc 1 485 0
 300 0032 244A     		ldr	r2, .L14+32
 301 0034 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBFS.c **** 
 487:Generated_Source\PSoC5/USBFS.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBFS.c **** #else
 493:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_BUS_RESET_VECT_NUM);
 302              		.loc 1 493 0
 303 0036 244B     		ldr	r3, .L14+36
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 15


 304 0038 4FF40002 		mov	r2, #8388608
 305 003c 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_EP_0_VECT_NUM);
 306              		.loc 1 494 0
 307 003e 4FF08072 		mov	r2, #16777216
 308 0042 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBFS.c **** 
 496:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
 309              		.loc 1 497 0
 310 0044 4FF40012 		mov	r2, #2097152
 311 0048 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBFS.c **** 
 500:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_1_VECT_NUM);
 312              		.loc 1 501 0
 313 004a 0222     		movs	r2, #2
 314 004c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBFS.c **** 
 504:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_2_VECT_NUM);
 315              		.loc 1 505 0
 316 004e 0422     		movs	r2, #4
 317 0050 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBFS.c **** 
 508:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_3_VECT_NUM);
 318              		.loc 1 509 0
 319 0052 0822     		movs	r2, #8
 320 0054 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBFS.c **** 
 512:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_4_VECT_NUM);
 321              		.loc 1 513 0
 322 0056 1022     		movs	r2, #16
 323 0058 1A60     		str	r2, [r3]
 514:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBFS.c **** 
 516:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_5_VECT_NUM);
 324              		.loc 1 517 0
 325 005a 2022     		movs	r2, #32
 326 005c 1A60     		str	r2, [r3]
 518:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBFS.c **** 
 520:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBFS.c **** 
 524:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 16


 528:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBFS.c **** 
 533:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBFS.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBFS.c ****     USBFS_ARB_INT_EN_REG = USBFS_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBFS.c **** 
 537:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBFS.c **** #endif   /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBFS.c **** 
 542:Generated_Source\PSoC5/USBFS.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBFS.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBFS.c ****     USBFS_ARB_CFG_REG = USBFS_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBFS.c **** 
 547:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBFS.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBFS.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBFS.c **** 
 551:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBFS.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBFS_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBFS.c **** 
 557:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBFS.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBFS.c ****         #else
 562:Generated_Source\PSoC5/USBFS.c ****             #if (USBFS_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBFS.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP_DMA_Done_isr_StartEx(&USBFS_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBFS.c ****             #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBFS.c **** 
 572:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBFS.c ****     switch(mode)
 327              		.loc 1 573 0
 328 005e 11B1     		cbz	r1, .L9
 329 0060 0129     		cmp	r1, #1
 330 0062 06D0     		beq	.L10
 331 0064 0BE0     		b	.L12
 332              	.L9:
 574:Generated_Source\PSoC5/USBFS.c ****     {
 575:Generated_Source\PSoC5/USBFS.c ****     case USBFS_3V_OPERATION:
 576:Generated_Source\PSoC5/USBFS.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG &= (uint8) ~USBFS_CR1_REG_ENABLE;
 333              		.loc 1 577 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 17


 334 0066 194A     		ldr	r2, .L14+40
 335 0068 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 336 006a 03F0FE03 		and	r3, r3, #254
 337 006e 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBFS.c ****         break;
 338              		.loc 1 578 0
 339 0070 0AE0     		b	.L11
 340              	.L10:
 579:Generated_Source\PSoC5/USBFS.c **** 
 580:Generated_Source\PSoC5/USBFS.c ****     case USBFS_5V_OPERATION:
 581:Generated_Source\PSoC5/USBFS.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG |= (uint8)  USBFS_CR1_REG_ENABLE;
 341              		.loc 1 582 0
 342 0072 164A     		ldr	r2, .L14+40
 343 0074 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 344 0076 43F00103 		orr	r3, r3, #1
 345 007a 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBFS.c ****         break;
 346              		.loc 1 583 0
 347 007c 04E0     		b	.L11
 348              	.L12:
 584:Generated_Source\PSoC5/USBFS.c **** 
 585:Generated_Source\PSoC5/USBFS.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_VDDD_MV < USBFS_3500MV)
 587:Generated_Source\PSoC5/USBFS.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG &= (uint8) ~USBFS_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBFS.c ****     #else
 590:Generated_Source\PSoC5/USBFS.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG |= (uint8)  USBFS_CR1_REG_ENABLE;
 349              		.loc 1 591 0
 350 007e 134A     		ldr	r2, .L14+40
 351 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 352 0082 43F00103 		orr	r3, r3, #1
 353 0086 1370     		strb	r3, [r2]
 354              	.L11:
 592:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_VDDD_MV < USBFS_3500MV) */
 593:Generated_Source\PSoC5/USBFS.c ****         break;
 594:Generated_Source\PSoC5/USBFS.c ****     }
 595:Generated_Source\PSoC5/USBFS.c **** 
 596:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBFS.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG &= (uint32) ~USBFS_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBFS.c **** 
 600:Generated_Source\PSoC5/USBFS.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CNT_REG = USBFS_CLEAR_REG;
 602:Generated_Source\PSoC5/USBFS.c **** 
 603:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBFS.c **** 
 606:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBFS.c ****         if (NULL != USBFS_GetBOSPtr())
 608:Generated_Source\PSoC5/USBFS.c ****         {
 609:Generated_Source\PSoC5/USBFS.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBFS.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBFS.c ****             */
 612:Generated_Source\PSoC5/USBFS.c ****             USBFS_LPM_CTRL_REG = (USBFS_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBFS.c ****                                              USBFS_LPM_CTRL_LPM_ACK_RESP);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 18


 614:Generated_Source\PSoC5/USBFS.c ****         }
 615:Generated_Source\PSoC5/USBFS.c ****         else
 616:Generated_Source\PSoC5/USBFS.c ****         {
 617:Generated_Source\PSoC5/USBFS.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBFS.c ****             USBFS_LPM_CTRL_REG &= (uint32) ~USBFS_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBFS.c ****         }
 620:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBFS.c **** 
 622:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBFS.c **** 
 625:Generated_Source\PSoC5/USBFS.c **** #else
 626:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 355              		.loc 1 627 0
 356 0088 0322     		movs	r2, #3
 357 008a 114B     		ldr	r3, .L14+44
 358 008c 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBFS.c **** 
 629:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 359              		.loc 1 630 0
 360 008e 8022     		movs	r2, #128
 361 0090 203B     		subs	r3, r3, #32
 362 0092 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBFS.c ****     CyDelayCycles(USBFS_WAIT_CR0_REG_STABILITY);
 363              		.loc 1 631 0
 364 0094 0120     		movs	r0, #1
 365              	.LVL32:
 366 0096 FFF7FEFF 		bl	CyDelayCycles
 367              	.LVL33:
 632:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBFS.c **** 
 634:Generated_Source\PSoC5/USBFS.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG = USBFS_USBIO_CR1_USBPUEN;
 368              		.loc 1 635 0
 369 009a 0422     		movs	r2, #4
 370 009c 0D4B     		ldr	r3, .L14+48
 371 009e 1A70     		strb	r2, [r3]
 372 00a0 10BD     		pop	{r4, pc}
 373              	.L15:
 374 00a2 00BF     		.align	2
 375              	.L14:
 376 00a4 00000000 		.word	USBFS_hidProtocol
 377 00a8 00000000 		.word	USBFS_device
 378 00ac 00000000 		.word	USBFS_transferState
 379 00b0 00000000 		.word	USBFS_configurationChanged
 380 00b4 00000000 		.word	USBFS_configuration
 381 00b8 00000000 		.word	USBFS_interfaceNumber
 382 00bc 00000000 		.word	USBFS_deviceAddress
 383 00c0 00000000 		.word	USBFS_deviceStatus
 384 00c4 00000000 		.word	USBFS_lastPacketSize
 385 00c8 00E100E0 		.word	-536813312
 386 00cc 09600040 		.word	1073766409
 387 00d0 28600040 		.word	1073766440
 388 00d4 12600040 		.word	1073766418
 389              		.cfi_endproc
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 19


 390              	.LFE2:
 391              		.size	USBFS_InitComponent, .-USBFS_InitComponent
 392              		.section	.text.USBFS_Start,"ax",%progbits
 393              		.align	2
 394              		.global	USBFS_Start
 395              		.thumb
 396              		.thumb_func
 397              		.type	USBFS_Start, %function
 398              	USBFS_Start:
 399              	.LFB0:
 187:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 400              		.loc 1 187 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              	.LVL34:
 405 0000 38B5     		push	{r3, r4, r5, lr}
 406              		.cfi_def_cfa_offset 16
 407              		.cfi_offset 3, -16
 408              		.cfi_offset 4, -12
 409              		.cfi_offset 5, -8
 410              		.cfi_offset 14, -4
 411 0002 0446     		mov	r4, r0
 412 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBFS.c ****     {
 413              		.loc 1 188 0
 414 0006 064B     		ldr	r3, .L19
 415 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 000a 23B9     		cbnz	r3, .L17
 190:Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
 417              		.loc 1 190 0
 418 000c FFF7FEFF 		bl	USBFS_Init
 419              	.LVL35:
 191:Generated_Source\PSoC5/USBFS.c ****     }
 420              		.loc 1 191 0
 421 0010 0122     		movs	r2, #1
 422 0012 034B     		ldr	r3, .L19
 423 0014 1A70     		strb	r2, [r3]
 424              	.L17:
 194:Generated_Source\PSoC5/USBFS.c **** }
 425              		.loc 1 194 0
 426 0016 2946     		mov	r1, r5
 427 0018 2046     		mov	r0, r4
 428 001a FFF7FEFF 		bl	USBFS_InitComponent
 429              	.LVL36:
 430 001e 38BD     		pop	{r3, r4, r5, pc}
 431              	.L20:
 432              		.align	2
 433              	.L19:
 434 0020 00000000 		.word	.LANCHOR0
 435              		.cfi_endproc
 436              	.LFE0:
 437              		.size	USBFS_Start, .-USBFS_Start
 438              		.section	.text.USBFS_ReInitComponent,"ax",%progbits
 439              		.align	2
 440              		.global	USBFS_ReInitComponent
 441              		.thumb
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 20


 442              		.thumb_func
 443              		.type	USBFS_ReInitComponent, %function
 444              	USBFS_ReInitComponent:
 445              	.LFB3:
 636:Generated_Source\PSoC5/USBFS.c **** }
 637:Generated_Source\PSoC5/USBFS.c **** 
 638:Generated_Source\PSoC5/USBFS.c **** 
 639:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReInitComponent
 641:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBFS.c **** *
 643:Generated_Source\PSoC5/USBFS.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBFS.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBFS.c **** *
 646:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 647:Generated_Source\PSoC5/USBFS.c **** *   USBFS_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBFS.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBFS.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBFS.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBFS.c **** *   USBFS_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBFS.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBFS.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBFS.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBFS.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBFS.c **** *   USBFS_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBFS.c **** *
 667:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 668:Generated_Source\PSoC5/USBFS.c **** *  No.
 669:Generated_Source\PSoC5/USBFS.c **** *
 670:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBFS.c **** void USBFS_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBFS.c **** {
 446              		.loc 1 672 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL37:
 673:Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBFS.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBFS.c ****     */
 676:Generated_Source\PSoC5/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBFS.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBFS.c **** 
 679:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 452              		.loc 1 679 0
 453 0000 0023     		movs	r3, #0
 454 0002 04E0     		b	.L22
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 21


 455              	.LVL38:
 456              	.L23:
 680:Generated_Source\PSoC5/USBFS.c ****     {
 681:Generated_Source\PSoC5/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 457              		.loc 1 681 0 discriminator 3
 458 0004 0121     		movs	r1, #1
 459 0006 0E4A     		ldr	r2, .L24
 460 0008 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC5/USBFS.c ****     {
 461              		.loc 1 679 0 discriminator 3
 462 000a 0B44     		add	r3, r3, r1
 463              	.LVL39:
 464 000c DBB2     		uxtb	r3, r3
 465              	.LVL40:
 466              	.L22:
 679:Generated_Source\PSoC5/USBFS.c ****     {
 467              		.loc 1 679 0 is_stmt 0 discriminator 1
 468 000e 022B     		cmp	r3, #2
 469 0010 F8D9     		bls	.L23
 682:Generated_Source\PSoC5/USBFS.c ****     }
 683:Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBFS.c **** 
 685:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 470              		.loc 1 686 0 is_stmt 1
 471 0012 0023     		movs	r3, #0
 472              	.LVL41:
 473 0014 0B4A     		ldr	r2, .L24+4
 474 0016 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 475              		.loc 1 687 0
 476 0018 0B4A     		ldr	r2, .L24+8
 477 001a 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 478              		.loc 1 688 0
 479 001c 0B4A     		ldr	r2, .L24+12
 480 001e 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 481              		.loc 1 689 0
 482 0020 0B4A     		ldr	r2, .L24+16
 483 0022 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 484              		.loc 1 690 0
 485 0024 0B4A     		ldr	r2, .L24+20
 486 0026 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 487              		.loc 1 691 0
 488 0028 0B4A     		ldr	r2, .L24+24
 489 002a 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 490              		.loc 1 692 0
 491 002c 0B4A     		ldr	r2, .L24+28
 492 002e 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBFS.c **** 
 694:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 22


 697:Generated_Source\PSoC5/USBFS.c **** #else
 698:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 493              		.loc 1 699 0
 494 0030 0322     		movs	r2, #3
 495 0032 0B4B     		ldr	r3, .L24+32
 496 0034 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBFS.c **** 
 702:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 497              		.loc 1 703 0
 498 0036 8022     		movs	r2, #128
 499 0038 203B     		subs	r3, r3, #32
 500 003a 1A70     		strb	r2, [r3]
 501 003c 7047     		bx	lr
 502              	.L25:
 503 003e 00BF     		.align	2
 504              	.L24:
 505 0040 00000000 		.word	USBFS_hidProtocol
 506 0044 00000000 		.word	USBFS_transferState
 507 0048 00000000 		.word	USBFS_configurationChanged
 508 004c 00000000 		.word	USBFS_configuration
 509 0050 00000000 		.word	USBFS_interfaceNumber
 510 0054 00000000 		.word	USBFS_deviceAddress
 511 0058 00000000 		.word	USBFS_deviceStatus
 512 005c 00000000 		.word	USBFS_lastPacketSize
 513 0060 28600040 		.word	1073766440
 514              		.cfi_endproc
 515              	.LFE3:
 516              		.size	USBFS_ReInitComponent, .-USBFS_ReInitComponent
 517              		.section	.text.USBFS_Stop,"ax",%progbits
 518              		.align	2
 519              		.global	USBFS_Stop
 520              		.thumb
 521              		.thumb_func
 522              		.type	USBFS_Stop, %function
 523              	USBFS_Stop:
 524              	.LFB4:
 704:Generated_Source\PSoC5/USBFS.c **** }
 705:Generated_Source\PSoC5/USBFS.c **** 
 706:Generated_Source\PSoC5/USBFS.c **** 
 707:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Stop
 709:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBFS.c **** *
 711:Generated_Source\PSoC5/USBFS.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBFS.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBFS.c **** *
 714:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 715:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configuration
 716:Generated_Source\PSoC5/USBFS.c **** *
 717:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBFS.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 23


 722:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceStatus
 723:Generated_Source\PSoC5/USBFS.c **** *
 724:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configurationChanged
 725:Generated_Source\PSoC5/USBFS.c **** *
 726:Generated_Source\PSoC5/USBFS.c **** *   USBFS_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBFS.c **** *
 728:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBFS.c **** void USBFS_Stop(void) 
 730:Generated_Source\PSoC5/USBFS.c **** {
 525              		.loc 1 730 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 08B5     		push	{r3, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 3, -8
 532              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBFS.c **** 
 733:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBFS.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBFS.c ****     USBFS_Stop_DMA(USBFS_MAX_EP);
 736:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBFS.c **** 
 738:Generated_Source\PSoC5/USBFS.c ****     enableInterrupts = CyEnterCriticalSection();
 533              		.loc 1 738 0
 534 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 535              	.LVL42:
 739:Generated_Source\PSoC5/USBFS.c **** 
 740:Generated_Source\PSoC5/USBFS.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG &= (uint8) ~USBFS_CR0_ENABLE;
 536              		.loc 1 741 0
 537 0006 244A     		ldr	r2, .L28
 538 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 539 000a 03F07F03 		and	r3, r3, #127
 540 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBFS.c **** 
 743:Generated_Source\PSoC5/USBFS.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8) ~ USBFS_USBIO_CR1_USBPUEN;
 541              		.loc 1 744 0
 542 0010 0A32     		adds	r2, r2, #10
 543 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 544 0014 03F0FB03 		and	r3, r3, #251
 545 0018 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBFS.c **** 
 746:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBFS.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBFS.c **** #else
 750:Generated_Source\PSoC5/USBFS.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG  &= (uint8) ~USBFS_PM_ACT_EN_FSUSB;
 546              		.loc 1 751 0
 547 001a A2F5E352 		sub	r2, r2, #7264
 548 001e 0D3A     		subs	r2, r2, #13
 549 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 550 0022 03F0FE03 		and	r3, r3, #254
 551 0026 1370     		strb	r3, [r2]
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 24


 752:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG &= (uint8) ~USBFS_PM_STBY_EN_FSUSB;
 552              		.loc 1 752 0
 553 0028 1032     		adds	r2, r2, #16
 554 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 555 002c 03F0FE03 		and	r3, r3, #254
 556 0030 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBFS.c **** 
 754:Generated_Source\PSoC5/USBFS.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBFS.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBFS.c ****     USBFS_DM_INP_DIS_REG |= (uint8) USBFS_DM_MASK;
 557              		.loc 1 756 0
 558 0032 1A4B     		ldr	r3, .L28+4
 559 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 560 0036 42F08002 		orr	r2, r2, #128
 561 003a 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG |= (uint8) USBFS_DP_MASK;
 562              		.loc 1 757 0
 563 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 564 003e 42F04002 		orr	r2, r2, #64
 565 0042 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBFS.c **** 
 759:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBFS.c **** 
 761:Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 566              		.loc 1 761 0
 567 0044 FFF7FEFF 		bl	CyExitCriticalSection
 568              	.LVL43:
 762:Generated_Source\PSoC5/USBFS.c **** 
 763:Generated_Source\PSoC5/USBFS.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBFS.c **** #else
 769:Generated_Source\PSoC5/USBFS.c **** 
 770:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_BUS_RESET_VECT_NUM);
 569              		.loc 1 770 0
 570 0048 154B     		ldr	r3, .L28+8
 571 004a 4FF40002 		mov	r2, #8388608
 572 004e 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_EP_0_VECT_NUM);
 573              		.loc 1 771 0
 574 0050 4FF08072 		mov	r2, #16777216
 575 0054 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBFS.c **** 
 773:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_SOF_VECT_NUM);
 576              		.loc 1 774 0
 577 0056 4FF40012 		mov	r2, #2097152
 578 005a 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBFS.c **** 
 777:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_1_VECT_NUM);
 579              		.loc 1 778 0
 580 005c 0222     		movs	r2, #2
 581 005e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 25


 779:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBFS.c **** 
 781:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_2_VECT_NUM);
 582              		.loc 1 782 0
 583 0060 0422     		movs	r2, #4
 584 0062 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBFS.c **** 
 785:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_3_VECT_NUM);
 585              		.loc 1 786 0
 586 0064 0822     		movs	r2, #8
 587 0066 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBFS.c **** 
 789:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_4_VECT_NUM);
 588              		.loc 1 790 0
 589 0068 1022     		movs	r2, #16
 590 006a 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBFS.c **** 
 793:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_5_VECT_NUM);
 591              		.loc 1 794 0
 592 006c 2022     		movs	r2, #32
 593 006e 1A60     		str	r2, [r3]
 795:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBFS.c **** 
 797:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBFS.c **** 
 801:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBFS.c **** 
 805:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBFS.c **** 
 809:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBFS.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBFS.c ****         (void) USBFS_Dp_ClearInterrupt();
 594              		.loc 1 811 0
 595 0070 FFF7FEFF 		bl	USBFS_Dp_ClearInterrupt
 596              	.LVL44:
 812:Generated_Source\PSoC5/USBFS.c ****         CyIntClearPending(USBFS_DP_INTC_VECT_NUM);
 597              		.loc 1 812 0
 598 0074 4FF48052 		mov	r2, #4096
 599 0078 0A4B     		ldr	r3, .L28+12
 600 007a 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBFS.c **** 
 815:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 26


 817:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 601              		.loc 1 818 0
 602 007c 0023     		movs	r3, #0
 603 007e 0A4A     		ldr	r2, .L28+16
 604 0080 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 605              		.loc 1 819 0
 606 0082 0A4A     		ldr	r2, .L28+20
 607 0084 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 608              		.loc 1 820 0
 609 0086 0A4A     		ldr	r2, .L28+24
 610 0088 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 611              		.loc 1 821 0
 612 008a 0A4A     		ldr	r2, .L28+28
 613 008c 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 614              		.loc 1 822 0
 615 008e 0A4A     		ldr	r2, .L28+32
 616 0090 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBFS.c **** 
 824:Generated_Source\PSoC5/USBFS.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBFS.c ****     USBFS_initVar = 0u;
 617              		.loc 1 825 0
 618 0092 0A4A     		ldr	r2, .L28+36
 619 0094 1370     		strb	r3, [r2]
 620 0096 08BD     		pop	{r3, pc}
 621              	.L29:
 622              		.align	2
 623              	.L28:
 624 0098 08600040 		.word	1073766408
 625 009c F8510040 		.word	1073762808
 626 00a0 80E100E0 		.word	-536813184
 627 00a4 80E200E0 		.word	-536812928
 628 00a8 00000000 		.word	USBFS_configurationChanged
 629 00ac 00000000 		.word	USBFS_configuration
 630 00b0 00000000 		.word	USBFS_interfaceNumber
 631 00b4 00000000 		.word	USBFS_deviceAddress
 632 00b8 00000000 		.word	USBFS_deviceStatus
 633 00bc 00000000 		.word	.LANCHOR0
 634              		.cfi_endproc
 635              	.LFE4:
 636              		.size	USBFS_Stop, .-USBFS_Stop
 637              		.section	.text.USBFS_CheckActivity,"ax",%progbits
 638              		.align	2
 639              		.global	USBFS_CheckActivity
 640              		.thumb
 641              		.thumb_func
 642              		.type	USBFS_CheckActivity, %function
 643              	USBFS_CheckActivity:
 644              	.LFB5:
 826:Generated_Source\PSoC5/USBFS.c **** }
 827:Generated_Source\PSoC5/USBFS.c **** 
 828:Generated_Source\PSoC5/USBFS.c **** 
 829:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 27


 830:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_CheckActivity
 831:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBFS.c **** *
 833:Generated_Source\PSoC5/USBFS.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBFS.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBFS.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBFS.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBFS.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBFS.c **** *
 839:Generated_Source\PSoC5/USBFS.c **** *
 840:Generated_Source\PSoC5/USBFS.c **** * \return
 841:Generated_Source\PSoC5/USBFS.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBFS.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBFS.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBFS.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBFS.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBFS.c **** *
 847:Generated_Source\PSoC5/USBFS.c **** *
 848:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBFS.c **** {
 645              		.loc 1 850 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBFS.c ****     uint8 cr1Reg = USBFS_CR1_REG;
 650              		.loc 1 851 0
 651 0000 064A     		ldr	r2, .L32
 652 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 653 0004 DBB2     		uxtb	r3, r3
 654              	.LVL45:
 852:Generated_Source\PSoC5/USBFS.c **** 
 853:Generated_Source\PSoC5/USBFS.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = (cr1Reg & (uint8) ~USBFS_CR1_BUS_ACTIVITY);
 655              		.loc 1 854 0
 656 0006 03F0FB01 		and	r1, r3, #251
 657 000a 1170     		strb	r1, [r2]
 658 000c 03F00403 		and	r3, r3, #4
 659              	.LVL46:
 855:Generated_Source\PSoC5/USBFS.c **** 
 856:Generated_Source\PSoC5/USBFS.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBFS.c ****     return ((0u != (cr1Reg & USBFS_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 660              		.loc 1 857 0
 661 0010 03F0FF00 		and	r0, r3, #255
 662 0014 03B1     		cbz	r3, .L31
 663 0016 0120     		movs	r0, #1
 664              	.L31:
 858:Generated_Source\PSoC5/USBFS.c **** }
 665              		.loc 1 858 0 discriminator 4
 666 0018 7047     		bx	lr
 667              	.L33:
 668 001a 00BF     		.align	2
 669              	.L32:
 670 001c 09600040 		.word	1073766409
 671              		.cfi_endproc
 672              	.LFE5:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 28


 673              		.size	USBFS_CheckActivity, .-USBFS_CheckActivity
 674              		.section	.text.USBFS_GetConfiguration,"ax",%progbits
 675              		.align	2
 676              		.global	USBFS_GetConfiguration
 677              		.thumb
 678              		.thumb_func
 679              		.type	USBFS_GetConfiguration, %function
 680              	USBFS_GetConfiguration:
 681              	.LFB6:
 859:Generated_Source\PSoC5/USBFS.c **** 
 860:Generated_Source\PSoC5/USBFS.c **** 
 861:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetConfiguration
 863:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBFS.c **** *
 865:Generated_Source\PSoC5/USBFS.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBFS.c **** *
 867:Generated_Source\PSoC5/USBFS.c **** * \return
 868:Generated_Source\PSoC5/USBFS.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBFS.c **** *  is not configured
 870:Generated_Source\PSoC5/USBFS.c **** *
 871:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBFS.c **** {
 682              		.loc 1 873 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_configuration);
 687              		.loc 1 874 0
 688 0000 014B     		ldr	r3, .L35
 689 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBFS.c **** }
 690              		.loc 1 875 0
 691 0004 7047     		bx	lr
 692              	.L36:
 693 0006 00BF     		.align	2
 694              	.L35:
 695 0008 00000000 		.word	USBFS_configuration
 696              		.cfi_endproc
 697              	.LFE6:
 698              		.size	USBFS_GetConfiguration, .-USBFS_GetConfiguration
 699              		.section	.text.USBFS_IsConfigurationChanged,"ax",%progbits
 700              		.align	2
 701              		.global	USBFS_IsConfigurationChanged
 702              		.thumb
 703              		.thumb_func
 704              		.type	USBFS_IsConfigurationChanged, %function
 705              	USBFS_IsConfigurationChanged:
 706              	.LFB7:
 876:Generated_Source\PSoC5/USBFS.c **** 
 877:Generated_Source\PSoC5/USBFS.c **** 
 878:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 29


 882:Generated_Source\PSoC5/USBFS.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBFS.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBFS.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBFS.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBFS.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBFS.c **** *
 888:Generated_Source\PSoC5/USBFS.c **** * \return
 889:Generated_Source\PSoC5/USBFS.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBFS.c **** *  returned.
 891:Generated_Source\PSoC5/USBFS.c **** *
 892:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 893:Generated_Source\PSoC5/USBFS.c **** *
 894:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBFS.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBFS.c **** *
 897:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBFS.c **** {
 707              		.loc 1 899 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL47:
 900:Generated_Source\PSoC5/USBFS.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBFS.c **** 
 902:Generated_Source\PSoC5/USBFS.c ****     if (USBFS_configurationChanged != 0u)
 713              		.loc 1 902 0
 714 0000 064B     		ldr	r3, .L40
 715 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 716 0004 13F0FF0F 		tst	r3, #255
 717 0008 05D0     		beq	.L39
 903:Generated_Source\PSoC5/USBFS.c ****     {
 904:Generated_Source\PSoC5/USBFS.c ****         res = USBFS_configurationChanged;
 718              		.loc 1 904 0
 719 000a 044B     		ldr	r3, .L40
 720 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 721 000e C0B2     		uxtb	r0, r0
 722              	.LVL48:
 905:Generated_Source\PSoC5/USBFS.c ****         USBFS_configurationChanged = 0u;
 723              		.loc 1 905 0
 724 0010 0022     		movs	r2, #0
 725 0012 1A70     		strb	r2, [r3]
 726 0014 7047     		bx	lr
 727              	.LVL49:
 728              	.L39:
 900:Generated_Source\PSoC5/USBFS.c ****     uint8 res = 0u;
 729              		.loc 1 900 0
 730 0016 0020     		movs	r0, #0
 731              	.LVL50:
 906:Generated_Source\PSoC5/USBFS.c ****     }
 907:Generated_Source\PSoC5/USBFS.c **** 
 908:Generated_Source\PSoC5/USBFS.c ****     return (res);
 909:Generated_Source\PSoC5/USBFS.c **** }
 732              		.loc 1 909 0
 733 0018 7047     		bx	lr
 734              	.L41:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 30


 735 001a 00BF     		.align	2
 736              	.L40:
 737 001c 00000000 		.word	USBFS_configurationChanged
 738              		.cfi_endproc
 739              	.LFE7:
 740              		.size	USBFS_IsConfigurationChanged, .-USBFS_IsConfigurationChanged
 741              		.section	.text.USBFS_GetInterfaceSetting,"ax",%progbits
 742              		.align	2
 743              		.global	USBFS_GetInterfaceSetting
 744              		.thumb
 745              		.thumb_func
 746              		.type	USBFS_GetInterfaceSetting, %function
 747              	USBFS_GetInterfaceSetting:
 748              	.LFB8:
 910:Generated_Source\PSoC5/USBFS.c **** 
 911:Generated_Source\PSoC5/USBFS.c **** 
 912:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBFS.c **** *
 916:Generated_Source\PSoC5/USBFS.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBFS.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBFS.c **** *  interface.
 919:Generated_Source\PSoC5/USBFS.c **** *
 920:Generated_Source\PSoC5/USBFS.c **** *  \param
 921:Generated_Source\PSoC5/USBFS.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBFS.c **** *
 923:Generated_Source\PSoC5/USBFS.c **** * \return
 924:Generated_Source\PSoC5/USBFS.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBFS.c **** *
 926:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBFS.c **** uint8  USBFS_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBFS.c ****                                                     
 929:Generated_Source\PSoC5/USBFS.c **** {
 749              		.loc 1 929 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754              	.LVL51:
 930:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_interfaceSetting[interfaceNumber]);
 755              		.loc 1 930 0
 756 0000 014B     		ldr	r3, .L43
 757 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 758              	.LVL52:
 931:Generated_Source\PSoC5/USBFS.c **** }
 759              		.loc 1 931 0
 760 0004 7047     		bx	lr
 761              	.L44:
 762 0006 00BF     		.align	2
 763              	.L43:
 764 0008 00000000 		.word	USBFS_interfaceSetting
 765              		.cfi_endproc
 766              	.LFE8:
 767              		.size	USBFS_GetInterfaceSetting, .-USBFS_GetInterfaceSetting
 768              		.section	.text.USBFS_GetEPState,"ax",%progbits
 769              		.align	2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 31


 770              		.global	USBFS_GetEPState
 771              		.thumb
 772              		.thumb_func
 773              		.type	USBFS_GetEPState, %function
 774              	USBFS_GetEPState:
 775              	.LFB9:
 932:Generated_Source\PSoC5/USBFS.c **** 
 933:Generated_Source\PSoC5/USBFS.c **** 
 934:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPState
 936:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBFS.c **** *
 938:Generated_Source\PSoC5/USBFS.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBFS.c **** *
 940:Generated_Source\PSoC5/USBFS.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBFS.c **** *
 942:Generated_Source\PSoC5/USBFS.c **** * \return
 943:Generated_Source\PSoC5/USBFS.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBFS.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBFS.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBFS.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBFS.c **** *
 948:Generated_Source\PSoC5/USBFS.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBFS.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBFS.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBFS.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBFS.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBFS.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBFS.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBFS.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBFS.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBFS.c **** *
 958:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBFS.c **** {
 776              		.loc 1 960 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 781              	.LVL53:
 961:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_EP[epNumber].apiEpState);
 782              		.loc 1 961 0
 783 0000 00EB4000 		add	r0, r0, r0, lsl #1
 784              	.LVL54:
 785 0004 8300     		lsls	r3, r0, #2
 786 0006 024A     		ldr	r2, .L46
 787 0008 1344     		add	r3, r3, r2
 788 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBFS.c **** }
 789              		.loc 1 962 0
 790 000c 7047     		bx	lr
 791              	.L47:
 792 000e 00BF     		.align	2
 793              	.L46:
 794 0010 00000000 		.word	USBFS_EP
 795              		.cfi_endproc
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 32


 796              	.LFE9:
 797              		.size	USBFS_GetEPState, .-USBFS_GetEPState
 798              		.section	.text.USBFS_GetEPCount,"ax",%progbits
 799              		.align	2
 800              		.global	USBFS_GetEPCount
 801              		.thumb
 802              		.thumb_func
 803              		.type	USBFS_GetEPCount, %function
 804              	USBFS_GetEPCount:
 805              	.LFB10:
 963:Generated_Source\PSoC5/USBFS.c **** 
 964:Generated_Source\PSoC5/USBFS.c **** 
 965:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPCount
 967:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBFS.c **** *
 969:Generated_Source\PSoC5/USBFS.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBFS.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBFS.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBFS.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBFS.c **** *
 974:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBFS.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBFS.c **** *
 977:Generated_Source\PSoC5/USBFS.c **** * \return
 978:Generated_Source\PSoC5/USBFS.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBFS.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBFS.c **** *
 981:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBFS.c **** {
 806              		.loc 1 983 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811              	.LVL55:
 984:Generated_Source\PSoC5/USBFS.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBFS.c **** 
 986:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 812              		.loc 1 986 0
 813 0000 431E     		subs	r3, r0, #1
 814 0002 DBB2     		uxtb	r3, r3
 815 0004 072B     		cmp	r3, #7
 816 0006 0BD8     		bhi	.L50
 987:Generated_Source\PSoC5/USBFS.c ****     {
 988:Generated_Source\PSoC5/USBFS.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBFS.c ****         cntr  = ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBFS_EPX_CNT0_MASK;
 817              		.loc 1 989 0
 818 0008 064B     		ldr	r3, .L51
 819 000a 0001     		lsls	r0, r0, #4
 820              	.LVL56:
 821 000c 1A18     		adds	r2, r3, r0
 822 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 823 0010 00F00F00 		and	r0, r0, #15
 824              	.LVL57:
 990:Generated_Source\PSoC5/USBFS.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 33


 825              		.loc 1 990 0
 826 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 827 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 828              	.LVL58:
 991:Generated_Source\PSoC5/USBFS.c ****         cntr -= USBFS_EPX_CNTX_CRC_COUNT;
 829              		.loc 1 991 0
 830 001a 0238     		subs	r0, r0, #2
 831              	.LVL59:
 832 001c 80B2     		uxth	r0, r0
 833              	.LVL60:
 834 001e 7047     		bx	lr
 835              	.LVL61:
 836              	.L50:
 984:Generated_Source\PSoC5/USBFS.c **** 
 837              		.loc 1 984 0
 838 0020 0020     		movs	r0, #0
 839              	.LVL62:
 992:Generated_Source\PSoC5/USBFS.c ****     }
 993:Generated_Source\PSoC5/USBFS.c **** 
 994:Generated_Source\PSoC5/USBFS.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBFS.c **** }
 840              		.loc 1 995 0
 841 0022 7047     		bx	lr
 842              	.L52:
 843              		.align	2
 844              	.L51:
 845 0024 FC5F0040 		.word	1073766396
 846              		.cfi_endproc
 847              	.LFE10:
 848              		.size	USBFS_GetEPCount, .-USBFS_GetEPCount
 849              		.section	.text.USBFS_LoadInEP,"ax",%progbits
 850              		.align	2
 851              		.global	USBFS_LoadInEP
 852              		.thumb
 853              		.thumb_func
 854              		.type	USBFS_LoadInEP, %function
 855              	USBFS_LoadInEP:
 856              	.LFB11:
 996:Generated_Source\PSoC5/USBFS.c **** 
 997:Generated_Source\PSoC5/USBFS.c **** 
 998:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEpDma
1002:Generated_Source\PSoC5/USBFS.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBFS.c ****     *
1004:Generated_Source\PSoC5/USBFS.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBFS.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBFS.c ****     *
1007:Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBFS.c ****     static void USBFS_InitEpDma(void)
1009:Generated_Source\PSoC5/USBFS.c ****     {
1010:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep1_dma_CHANNEL] = USBFS_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBFS.c **** 
1014:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 34


1015:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep2_dma_CHANNEL] = USBFS_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBFS.c **** 
1018:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep3_dma_CHANNEL] = USBFS_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBFS.c **** 
1022:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep4_dma_CHANNEL] = USBFS_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBFS.c **** 
1026:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep5_dma_CHANNEL] = USBFS_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBFS.c **** 
1030:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep6_dma_CHANNEL] = USBFS_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBFS.c **** 
1034:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep7_dma_CHANNEL] = USBFS_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBFS.c **** 
1038:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep8_dma_CHANNEL] = USBFS_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBFS.c **** 
1042:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBFS.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep1_dma_SetInterruptCallback(&USBFS_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBFS.c **** 
1048:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep2_dma_SetInterruptCallback(&USBFS_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBFS.c **** 
1052:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep3_dma_SetInterruptCallback(&USBFS_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBFS.c **** 
1056:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep4_dma_SetInterruptCallback(&USBFS_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBFS.c **** 
1060:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep5_dma_SetInterruptCallback(&USBFS_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBFS.c **** 
1064:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep6_dma_SetInterruptCallback(&USBFS_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBFS.c **** 
1068:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep7_dma_SetInterruptCallback(&USBFS_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 35


1072:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep8_dma_SetInterruptCallback(&USBFS_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBFS.c ****     }
1077:Generated_Source\PSoC5/USBFS.c **** #else
1078:Generated_Source\PSoC5/USBFS.c **** 
1079:Generated_Source\PSoC5/USBFS.c **** 
1080:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEP_DMA
1082:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBFS.c ****     *
1084:Generated_Source\PSoC5/USBFS.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_LoadInEP() or USBFS_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBFS.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBFS.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBFS.c ****     *
1089:Generated_Source\PSoC5/USBFS.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBFS.c ****     *
1091:Generated_Source\PSoC5/USBFS.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBFS.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBFS.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBFS.c ****     *
1095:Generated_Source\PSoC5/USBFS.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBFS.c ****     *
1097:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBFS.c ****     void USBFS_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBFS.c ****                                                                     
1100:Generated_Source\PSoC5/USBFS.c ****     {
1101:Generated_Source\PSoC5/USBFS.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBFS.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBFS.c **** 
1104:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBFS.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBFS.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBFS.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBFS.c ****     #else
1109:Generated_Source\PSoC5/USBFS.c ****         if ((USBFS_EP[epNumber].addr & USBFS_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBFS.c ****         {
1111:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBFS.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBFS.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBFS.c ****         }
1115:Generated_Source\PSoC5/USBFS.c ****         else
1116:Generated_Source\PSoC5/USBFS.c ****         {
1117:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBFS.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBFS.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBFS.c ****         }
1121:Generated_Source\PSoC5/USBFS.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBFS.c **** 
1123:Generated_Source\PSoC5/USBFS.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBFS.c ****         {
1125:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP1:
1127:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep1_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 36


1129:Generated_Source\PSoC5/USBFS.c ****             break;
1130:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBFS.c **** 
1132:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP2:
1134:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep2_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1136:Generated_Source\PSoC5/USBFS.c ****             break;
1137:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBFS.c **** 
1139:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP3:
1141:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep3_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1143:Generated_Source\PSoC5/USBFS.c ****             break;
1144:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBFS.c **** 
1146:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP4:
1148:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep4_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1150:Generated_Source\PSoC5/USBFS.c ****             break;
1151:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBFS.c **** 
1153:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP5:
1155:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep5_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1157:Generated_Source\PSoC5/USBFS.c ****             break;
1158:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBFS.c **** 
1160:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP6:
1162:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep6_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1164:Generated_Source\PSoC5/USBFS.c ****             break;
1165:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBFS.c **** 
1167:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP7:
1169:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep7_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1171:Generated_Source\PSoC5/USBFS.c ****             break;
1172:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBFS.c **** 
1174:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP8:
1176:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep8_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1178:Generated_Source\PSoC5/USBFS.c ****             break;
1179:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBFS.c **** 
1181:Generated_Source\PSoC5/USBFS.c ****         default:
1182:Generated_Source\PSoC5/USBFS.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBFS.c ****             break;
1184:Generated_Source\PSoC5/USBFS.c ****         }
1185:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 37


1186:Generated_Source\PSoC5/USBFS.c ****         if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1187:Generated_Source\PSoC5/USBFS.c ****         {
1188:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBFS.c **** 
1190:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBFS.c ****         }
1194:Generated_Source\PSoC5/USBFS.c ****     }
1195:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBFS.c **** 
1197:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_Stop_DMA
1199:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBFS.c ****     *  
1201:Generated_Source\PSoC5/USBFS.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBFS.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBFS.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBFS.c ****     *  to trigger DMA re-configuration when USBFS_LoadInEP() or 
1205:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBFS.c ****     *  
1207:Generated_Source\PSoC5/USBFS.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBFS.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBFS.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_MAX_EP argument.
1211:Generated_Source\PSoC5/USBFS.c ****     *
1212:Generated_Source\PSoC5/USBFS.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBFS.c ****     *  No.
1214:Generated_Source\PSoC5/USBFS.c ****     *
1215:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBFS.c ****     void USBFS_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBFS.c ****     {
1218:Generated_Source\PSoC5/USBFS.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBFS.c **** 
1220:Generated_Source\PSoC5/USBFS.c ****         i = (epNumber < USBFS_MAX_EP) ? epNumber : USBFS_EP1;
1221:Generated_Source\PSoC5/USBFS.c **** 
1222:Generated_Source\PSoC5/USBFS.c ****         do
1223:Generated_Source\PSoC5/USBFS.c ****         {
1224:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBFS.c ****             if (0u != USBFS_DmaChan[i])
1226:Generated_Source\PSoC5/USBFS.c ****             {
1227:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(USBFS_DmaChan[i]);
1228:Generated_Source\PSoC5/USBFS.c ****             }
1229:Generated_Source\PSoC5/USBFS.c ****         #else
1230:Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBFS.c ****             {
1232:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[i]);
1233:Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdFree(USBFS_DmaTd[i]);
1234:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBFS.c ****             }
1236:Generated_Source\PSoC5/USBFS.c **** 
1237:Generated_Source\PSoC5/USBFS.c ****             #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBFS.c ****                 if(USBFS_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBFS.c ****                 {
1240:Generated_Source\PSoC5/USBFS.c ****                     CyDmaTdFree(USBFS_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBFS.c ****                 }
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 38


1243:Generated_Source\PSoC5/USBFS.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBFS.c **** 
1245:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBFS.c ****             i++;
1247:Generated_Source\PSoC5/USBFS.c ****         }
1248:Generated_Source\PSoC5/USBFS.c ****         while ((i < USBFS_MAX_EP) && (epNumber == USBFS_MAX_EP));
1249:Generated_Source\PSoC5/USBFS.c ****     }
1250:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBFS.c **** 
1252:Generated_Source\PSoC5/USBFS.c **** 
1253:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_LoadNextInEP
1257:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBFS.c ****     *
1259:Generated_Source\PSoC5/USBFS.c ****     * Summary:
1260:Generated_Source\PSoC5/USBFS.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBFS.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBFS.c ****     *
1263:Generated_Source\PSoC5/USBFS.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBFS.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBFS.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBFS.c ****     *
1268:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBFS.c ****     void USBFS_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBFS.c ****     {
1271:Generated_Source\PSoC5/USBFS.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBFS.c **** 
1273:Generated_Source\PSoC5/USBFS.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBFS.c ****         {
1275:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_inLength[epNumber] - USBFS_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBFS.c ****                                             USBFS_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBFS.c ****             USBFS_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBFS.c ****         }
1286:Generated_Source\PSoC5/USBFS.c ****         else
1287:Generated_Source\PSoC5/USBFS.c ****         {
1288:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBFS.c ****                                    (USBFS_DMA_BYTES_PER_BURST - USBFS_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBFS.c ****         }
1298:Generated_Source\PSoC5/USBFS.c **** 
1299:Generated_Source\PSoC5/USBFS.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 39


1300:Generated_Source\PSoC5/USBFS.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_DmaChan[epNumber]].basic_status[1u] = USBFS_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBFS.c ****     }
1302:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBFS.c **** 
1305:Generated_Source\PSoC5/USBFS.c **** 
1306:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP
1308:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBFS.c **** *
1310:Generated_Source\PSoC5/USBFS.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBFS.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBFS.c **** *
1314:Generated_Source\PSoC5/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBFS.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBFS.c **** *
1318:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBFS.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBFS.c **** *
1322:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBFS.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBFS.c **** *
1328:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBFS.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBFS.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBFS.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBFS.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBFS.c **** *
1337:Generated_Source\PSoC5/USBFS.c **** *
1338:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1339:Generated_Source\PSoC5/USBFS.c **** *  No.
1340:Generated_Source\PSoC5/USBFS.c **** *
1341:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBFS.c ****                                                                         
1344:Generated_Source\PSoC5/USBFS.c **** {
 857              		.loc 1 1344 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862              	.LVL63:
1345:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 863              		.loc 1 1345 0
 864 0000 431E     		subs	r3, r0, #1
 865 0002 DBB2     		uxtb	r3, r3
 866 0004 072B     		cmp	r3, #7
 867 0006 3CD8     		bhi	.L62
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 40


1344:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 868              		.loc 1 1344 0
 869 0008 F0B4     		push	{r4, r5, r6, r7}
 870              		.cfi_def_cfa_offset 16
 871              		.cfi_offset 4, -16
 872              		.cfi_offset 5, -12
 873              		.cfi_offset 6, -8
 874              		.cfi_offset 7, -4
1346:Generated_Source\PSoC5/USBFS.c ****     {
1347:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBFS.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
 875              		.loc 1 1349 0
 876 000a 0746     		mov	r7, r0
 877 000c 00EB4004 		add	r4, r0, r0, lsl #1
 878 0010 A300     		lsls	r3, r4, #2
 879 0012 1C4C     		ldr	r4, .L63
 880 0014 2344     		add	r3, r3, r4
 881 0016 DB88     		ldrh	r3, [r3, #6]
 882 0018 9BB2     		uxth	r3, r3
 883 001a C3F50073 		rsb	r3, r3, #512
 884 001e 9A42     		cmp	r2, r3
 885 0020 08D9     		bls	.L55
1350:Generated_Source\PSoC5/USBFS.c ****         {
1351:Generated_Source\PSoC5/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
 886              		.loc 1 1351 0
 887 0022 00EB4002 		add	r2, r0, r0, lsl #1
 888              	.LVL64:
 889 0026 9300     		lsls	r3, r2, #2
 890 0028 2344     		add	r3, r3, r4
 891 002a DA88     		ldrh	r2, [r3, #6]
 892 002c 92B2     		uxth	r2, r2
 893 002e C2F50072 		rsb	r2, r2, #512
 894 0032 92B2     		uxth	r2, r2
 895              	.LVL65:
 896              	.L55:
1352:Generated_Source\PSoC5/USBFS.c ****         }
1353:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBFS.c **** 
1355:Generated_Source\PSoC5/USBFS.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBFS_EP[epNumber].epToggl
 897              		.loc 1 1356 0
 898 0034 00EB4004 		add	r4, r0, r0, lsl #1
 899 0038 A300     		lsls	r3, r4, #2
 900 003a 124C     		ldr	r4, .L63
 901 003c 2344     		add	r3, r3, r4
 902 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 903 0040 43EA1223 		orr	r3, r3, r2, lsr #8
 904 0044 104D     		ldr	r5, .L63+4
 905 0046 0401     		lsls	r4, r0, #4
 906 0048 2E19     		adds	r6, r5, r4
 907 004a 2B55     		strb	r3, [r5, r4]
1357:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 908              		.loc 1 1357 0
 909 004c D3B2     		uxtb	r3, r2
 910 004e 7370     		strb	r3, [r6, #1]
1358:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 41


1359:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBFS.c ****         if (NULL != pData)
 911              		.loc 1 1360 0
 912 0050 39B9     		cbnz	r1, .L59
 913              	.LBB2:
 914 0052 09E0     		b	.L57
 915              	.LVL66:
 916              	.L58:
1361:Generated_Source\PSoC5/USBFS.c ****         {
1362:Generated_Source\PSoC5/USBFS.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBFS.c ****             {
1366:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 917              		.loc 1 1366 0 discriminator 3
 918 0054 CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 919 0056 3D01     		lsls	r5, r7, #4
 920 0058 0C4C     		ldr	r4, .L63+8
 921 005a 6655     		strb	r6, [r4, r5]
1364:Generated_Source\PSoC5/USBFS.c ****             {
 922              		.loc 1 1364 0 discriminator 3
 923 005c 0133     		adds	r3, r3, #1
 924              	.LVL67:
 925 005e 9BB2     		uxth	r3, r3
 926              	.LVL68:
 927 0060 00E0     		b	.L56
 928              	.LVL69:
 929              	.L59:
 930              	.LBE2:
 931 0062 0023     		movs	r3, #0
 932              	.L56:
 933              	.LVL70:
 934              	.LBB3:
1364:Generated_Source\PSoC5/USBFS.c ****             {
 935              		.loc 1 1364 0 is_stmt 0 discriminator 1
 936 0064 9A42     		cmp	r2, r3
 937 0066 F5D8     		bhi	.L58
 938              	.LVL71:
 939              	.L57:
 940              	.LBE3:
1367:Generated_Source\PSoC5/USBFS.c ****             }
1368:Generated_Source\PSoC5/USBFS.c ****         }
1369:Generated_Source\PSoC5/USBFS.c **** 
1370:Generated_Source\PSoC5/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 941              		.loc 1 1371 0 is_stmt 1
 942 0068 4200     		lsls	r2, r0, #1
 943              	.LVL72:
 944 006a 0244     		add	r2, r2, r0
 945 006c 9300     		lsls	r3, r2, #2
 946 006e 054A     		ldr	r2, .L63
 947 0070 1344     		add	r3, r3, r2
 948 0072 0022     		movs	r2, #0
 949 0074 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USBFS.c **** 
1373:Generated_Source\PSoC5/USBFS.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 42


 950              		.loc 1 1374 0
 951 0076 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 952 0078 D2B2     		uxtb	r2, r2
 953 007a 0001     		lsls	r0, r0, #4
 954              	.LVL73:
 955 007c 044B     		ldr	r3, .L63+12
 956 007e 1A54     		strb	r2, [r3, r0]
1375:Generated_Source\PSoC5/USBFS.c **** 
1376:Generated_Source\PSoC5/USBFS.c ****     #else
1377:Generated_Source\PSoC5/USBFS.c **** 
1378:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBFS.c ****             {
1382:Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBFS.c ****             }
1384:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBFS.c **** 
1386:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBFS.c **** 
1390:Generated_Source\PSoC5/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBFS.c ****             {
1392:Generated_Source\PSoC5/USBFS.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBFS.c **** 
1395:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBFS.c **** 
1398:Generated_Source\PSoC5/USBFS.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1401:Generated_Source\PSoC5/USBFS.c **** 
1402:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBFS.c ****                 --length;
1404:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1405:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBFS.c **** 
1407:Generated_Source\PSoC5/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBFS.c **** 
1410:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBFS.c ****             #else
1413:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD
1416:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData), LO16((uint32)
1417:Generated_Source\PSoC5/USBFS.c **** 
1418:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBFS.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBFS.c **** 
1423:Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_ARB_EPX_CFG_DMA_REQ;
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 43


1425:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBFS.c **** 
1427:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBFS.c ****             }
1429:Generated_Source\PSoC5/USBFS.c ****             else
1430:Generated_Source\PSoC5/USBFS.c ****             {
1431:Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBFS.c ****             }
1434:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBFS.c **** 
1436:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBFS.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBFS.c ****             {
1439:Generated_Source\PSoC5/USBFS.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBFS.c **** 
1442:Generated_Source\PSoC5/USBFS.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBFS.c **** 
1445:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBFS.c **** 
1448:Generated_Source\PSoC5/USBFS.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1450:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.a
1451:Generated_Source\PSoC5/USBFS.c **** 
1452:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
1454:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBFS.c **** 
1456:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
1458:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBFS.c **** 
1460:Generated_Source\PSoC5/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBFS.c **** 
1463:Generated_Source\PSoC5/USBFS.c **** 
1464:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBFS.c **** 
1467:Generated_Source\PSoC5/USBFS.c ****             #else
1468:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBFS.c **** 
1470:Generated_Source\PSoC5/USBFS.c ****                 #if (USBFS_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBFS.c **** 
1474:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBFS.c ****                         (length > USBFS_DMA_BYTES_PER_BURST) ? USBFS_DMA_BYTES_PER_BURST : length,
1477:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1480:Generated_Source\PSoC5/USBFS.c **** 
1481:Generated_Source\PSoC5/USBFS.c ****                     /* The second TD will be executed only when the first one fails.
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 44


1482:Generated_Source\PSoC5/USBFS.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBFS.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBFS.c ****                     */
1485:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBFS.c **** 
1489:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaNextTd[epNumber], LO16((uint32) &clearInDataR
1491:Generated_Source\PSoC5/USBFS.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBFS.c ****                 #else
1493:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC
1496:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1498:Generated_Source\PSoC5/USBFS.c ****                 #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBFS.c **** 
1500:Generated_Source\PSoC5/USBFS.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBFS.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBFS.c ****             }
1507:Generated_Source\PSoC5/USBFS.c ****             else
1508:Generated_Source\PSoC5/USBFS.c ****             {
1509:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBFS.c **** 
1512:Generated_Source\PSoC5/USBFS.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBFS.c ****                 {
1514:Generated_Source\PSoC5/USBFS.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBFS.c **** 
1518:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1520:Generated_Source\PSoC5/USBFS.c **** 
1521:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1523:Generated_Source\PSoC5/USBFS.c **** 
1524:Generated_Source\PSoC5/USBFS.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1526:Generated_Source\PSoC5/USBFS.c **** 
1527:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1529:Generated_Source\PSoC5/USBFS.c ****                                                                           (USBFS_DmaEpLastBurstEl[e
1530:Generated_Source\PSoC5/USBFS.c ****                                                                           (USBFS_DMA_BYTES_PER_BURS
1531:Generated_Source\PSoC5/USBFS.c **** 
1532:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1534:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1535:Generated_Source\PSoC5/USBFS.c **** 
1536:Generated_Source\PSoC5/USBFS.c **** 
1537:Generated_Source\PSoC5/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 45


1539:Generated_Source\PSoC5/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
1540:Generated_Source\PSoC5/USBFS.c **** 
1541:Generated_Source\PSoC5/USBFS.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBFS.c **** 
1544:Generated_Source\PSoC5/USBFS.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
1546:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
1547:Generated_Source\PSoC5/USBFS.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBFS.c **** 
1549:Generated_Source\PSoC5/USBFS.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBFS.c **** 
1553:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBFS.c **** 
1557:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBFS.c ****                     {
1560:Generated_Source\PSoC5/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBFS.c ****                     }                   
1562:Generated_Source\PSoC5/USBFS.c **** 
1563:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
1565:Generated_Source\PSoC5/USBFS.c **** 
1566:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBFS.c **** 
1569:Generated_Source\PSoC5/USBFS.c ****                 #elif (USBFS_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBFS.c **** 
1573:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaTd[epNumber], (length > USBFS_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32)  USBFS_inDataPoin
1580:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1581:Generated_Source\PSoC5/USBFS.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBFS.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBFS.c **** 
1588:Generated_Source\PSoC5/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBFS.c **** 
1593:Generated_Source\PSoC5/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBFS.c ****                 }
1595:Generated_Source\PSoC5/USBFS.c ****                 else
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 46


1596:Generated_Source\PSoC5/USBFS.c ****                 {
1597:Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBFS.c ****                 }
1600:Generated_Source\PSoC5/USBFS.c ****             }
1601:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBFS.c ****     }
1604:Generated_Source\PSoC5/USBFS.c **** }
 957              		.loc 1 1604 0
 958 0080 F0BC     		pop	{r4, r5, r6, r7}
 959              		.cfi_restore 7
 960              		.cfi_restore 6
 961              		.cfi_restore 5
 962              		.cfi_restore 4
 963              		.cfi_def_cfa_offset 0
 964              	.L62:
 965 0082 7047     		bx	lr
 966              	.L64:
 967              		.align	2
 968              	.L63:
 969 0084 00000000 		.word	USBFS_EP
 970 0088 FC5F0040 		.word	1073766396
 971 008c 78600040 		.word	1073766520
 972 0090 FE5F0040 		.word	1073766398
 973              		.cfi_endproc
 974              	.LFE11:
 975              		.size	USBFS_LoadInEP, .-USBFS_LoadInEP
 976              		.section	.text.USBFS_EnableOutEP,"ax",%progbits
 977              		.align	2
 978              		.global	USBFS_EnableOutEP
 979              		.thumb
 980              		.thumb_func
 981              		.type	USBFS_EnableOutEP, %function
 982              	USBFS_EnableOutEP:
 983              	.LFB13:
1605:Generated_Source\PSoC5/USBFS.c **** 
1606:Generated_Source\PSoC5/USBFS.c **** 
1607:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP
1609:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBFS.c **** *
1611:Generated_Source\PSoC5/USBFS.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBFS.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBFS.c **** *
1615:Generated_Source\PSoC5/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBFS.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBFS.c **** *
1621:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBFS.c **** *   by checking EPstate:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 47


1626:Generated_Source\PSoC5/USBFS.c **** *
1627:Generated_Source\PSoC5/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBFS.c **** *
1629:Generated_Source\PSoC5/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBFS.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBFS.c **** *
1633:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBFS.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBFS.c **** *
1637:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBFS.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBFS.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBFS.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBFS.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBFS.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBFS.c **** *
1646:Generated_Source\PSoC5/USBFS.c **** * \return
1647:Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBFS.c **** *
1649:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1650:Generated_Source\PSoC5/USBFS.c **** *  No.
1651:Generated_Source\PSoC5/USBFS.c **** *
1652:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBFS.c ****                                                                         
1655:Generated_Source\PSoC5/USBFS.c **** {
1656:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1657:Generated_Source\PSoC5/USBFS.c ****     {
1658:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBFS.c **** 
1663:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBFS.c ****         {
1665:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBFS.c ****             {
1669:Generated_Source\PSoC5/USBFS.c ****                 pData[i] = (uint8) USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBFS.c ****             }
1671:Generated_Source\PSoC5/USBFS.c ****         }
1672:Generated_Source\PSoC5/USBFS.c **** 
1673:Generated_Source\PSoC5/USBFS.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBFS.c ****         USBFS_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBFS.c ****     #else
1676:Generated_Source\PSoC5/USBFS.c **** 
1677:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBFS.c ****             {
1681:Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBFS.c ****             }
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 48


1683:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBFS.c **** 
1685:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBFS.c ****         {
1688:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBFS.c **** 
1690:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBFS.c **** 
1693:Generated_Source\PSoC5/USBFS.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1695:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBFS.c **** 
1697:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
1699:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBFS.c **** 
1701:Generated_Source\PSoC5/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBFS.c **** 
1704:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBFS.c ****         }
1707:Generated_Source\PSoC5/USBFS.c ****         #else
1708:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_TER
1711:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
1712:Generated_Source\PSoC5/USBFS.c **** 
1713:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBFS.c **** 
1718:Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBFS.c **** 
1722:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBFS.c ****             */
1725:Generated_Source\PSoC5/USBFS.c **** 
1726:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBFS.c **** 
1728:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBFS.c ****         {
1731:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBFS.c **** 
1734:Generated_Source\PSoC5/USBFS.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBFS.c **** 
1737:Generated_Source\PSoC5/USBFS.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 49


1740:Generated_Source\PSoC5/USBFS.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
1742:Generated_Source\PSoC5/USBFS.c **** 
1743:Generated_Source\PSoC5/USBFS.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBFS.c ****                                                                   (USBFS_DmaEpLastBurstEl[epNumber]
1746:Generated_Source\PSoC5/USBFS.c ****                                                                   (USBFS_DMA_BYTES_PER_BURST - 1u);
1747:Generated_Source\PSoC5/USBFS.c **** 
1748:Generated_Source\PSoC5/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1750:Generated_Source\PSoC5/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1751:Generated_Source\PSoC5/USBFS.c **** 
1752:Generated_Source\PSoC5/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
1754:Generated_Source\PSoC5/USBFS.c **** 
1755:Generated_Source\PSoC5/USBFS.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
1757:Generated_Source\PSoC5/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
1758:Generated_Source\PSoC5/USBFS.c **** 
1759:Generated_Source\PSoC5/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBFS.c **** 
1763:Generated_Source\PSoC5/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
1765:Generated_Source\PSoC5/USBFS.c **** 
1766:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBFS.c **** 
1769:Generated_Source\PSoC5/USBFS.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1771:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.arbEp
1772:Generated_Source\PSoC5/USBFS.c **** 
1773:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
1775:Generated_Source\PSoC5/USBFS.c **** 
1776:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
1778:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBFS.c **** 
1780:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
1782:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBFS.c **** 
1784:Generated_Source\PSoC5/USBFS.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBFS.c **** 
1787:Generated_Source\PSoC5/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBFS.c **** 
1790:Generated_Source\PSoC5/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBFS.c ****             {
1792:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBFS.c ****             }
1794:Generated_Source\PSoC5/USBFS.c **** 
1795:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 50


1797:Generated_Source\PSoC5/USBFS.c ****         }
1798:Generated_Source\PSoC5/USBFS.c ****         #else
1799:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,  USBFS_DmaTd[epNumber], T
1801:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
1802:Generated_Source\PSoC5/USBFS.c **** 
1803:Generated_Source\PSoC5/USBFS.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBFS.c **** 
1806:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBFS.c **** 
1811:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBFS.c ****             */
1814:Generated_Source\PSoC5/USBFS.c **** 
1815:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBFS.c ****     }
1818:Generated_Source\PSoC5/USBFS.c ****     else
1819:Generated_Source\PSoC5/USBFS.c ****     {
1820:Generated_Source\PSoC5/USBFS.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBFS.c ****     }
1822:Generated_Source\PSoC5/USBFS.c **** 
1823:Generated_Source\PSoC5/USBFS.c ****     return (length);
1824:Generated_Source\PSoC5/USBFS.c **** }
1825:Generated_Source\PSoC5/USBFS.c **** 
1826:Generated_Source\PSoC5/USBFS.c **** 
1827:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP16
1830:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBFS.c **** *
1832:Generated_Source\PSoC5/USBFS.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBFS.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBFS.c **** *
1836:Generated_Source\PSoC5/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBFS.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBFS.c **** *
1840:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBFS.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBFS.c **** *
1844:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBFS.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBFS.c **** *
1850:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBFS.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBFS.c **** *        space is loaded. It shall be ensured that this pointer address is even
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 51


1854:Generated_Source\PSoC5/USBFS.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBFS.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBFS.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBFS.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBFS.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBFS.c **** *
1861:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1862:Generated_Source\PSoC5/USBFS.c **** *  No.
1863:Generated_Source\PSoC5/USBFS.c **** *
1864:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBFS.c **** {
1867:Generated_Source\PSoC5/USBFS.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBFS.c **** 
1870:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1871:Generated_Source\PSoC5/USBFS.c ****     {
1872:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBFS.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBFS.c ****         {
1876:Generated_Source\PSoC5/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBFS.c ****         }
1878:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBFS.c **** 
1880:Generated_Source\PSoC5/USBFS.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_EP[epNumber].epTogg
1882:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBFS.c **** 
1884:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBFS.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBFS.c **** 
1887:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBFS.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBFS.c ****         {
1890:Generated_Source\PSoC5/USBFS.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBFS.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBFS.c **** 
1893:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBFS.c ****             {
1897:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBFS.c ****             }
1899:Generated_Source\PSoC5/USBFS.c ****         }
1900:Generated_Source\PSoC5/USBFS.c **** 
1901:Generated_Source\PSoC5/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBFS.c **** 
1904:Generated_Source\PSoC5/USBFS.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBFS.c **** 
1907:Generated_Source\PSoC5/USBFS.c ****     #else
1908:Generated_Source\PSoC5/USBFS.c **** 
1909:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 52


1911:Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBFS.c **** 
1913:Generated_Source\PSoC5/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBFS.c ****             {
1915:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBFS.c **** 
1917:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBFS.c **** 
1920:Generated_Source\PSoC5/USBFS.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1923:Generated_Source\PSoC5/USBFS.c **** 
1924:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBFS.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1927:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBFS.c **** 
1929:Generated_Source\PSoC5/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBFS.c **** 
1932:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBFS.c **** 
1935:Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
1937:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1938:Generated_Source\PSoC5/USBFS.c **** 
1939:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBFS.c ****             }
1941:Generated_Source\PSoC5/USBFS.c ****             else
1942:Generated_Source\PSoC5/USBFS.c ****             {
1943:Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBFS.c ****             }
1946:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBFS.c **** 
1948:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBFS.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBFS.c ****             {
1951:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBFS.c **** 
1953:Generated_Source\PSoC5/USBFS.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBFS.c **** 
1956:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBFS.c **** 
1959:Generated_Source\PSoC5/USBFS.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1961:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE
1962:Generated_Source\PSoC5/USBFS.c **** 
1963:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
1965:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBFS.c **** 
1967:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 53


1968:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
1969:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBFS.c **** 
1971:Generated_Source\PSoC5/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBFS.c **** 
1974:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBFS.c ****             }
1977:Generated_Source\PSoC5/USBFS.c ****             else
1978:Generated_Source\PSoC5/USBFS.c ****             {
1979:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBFS.c **** 
1982:Generated_Source\PSoC5/USBFS.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBFS.c ****                 {
1984:Generated_Source\PSoC5/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBFS.c **** 
1987:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1989:Generated_Source\PSoC5/USBFS.c **** 
1990:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1992:Generated_Source\PSoC5/USBFS.c **** 
1993:Generated_Source\PSoC5/USBFS.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1995:Generated_Source\PSoC5/USBFS.c **** 
1996:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1998:Generated_Source\PSoC5/USBFS.c ****                                                                           ((USBFS_DmaEpLastBurstEl[
1999:Generated_Source\PSoC5/USBFS.c ****                                                                            (USBFS_DMA_HALFWORDS_PER
2000:Generated_Source\PSoC5/USBFS.c **** 
2001:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2003:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2004:Generated_Source\PSoC5/USBFS.c **** 
2005:Generated_Source\PSoC5/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
2007:Generated_Source\PSoC5/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
2008:Generated_Source\PSoC5/USBFS.c **** 
2009:Generated_Source\PSoC5/USBFS.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBFS.c **** 
2012:Generated_Source\PSoC5/USBFS.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
2014:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
2015:Generated_Source\PSoC5/USBFS.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBFS.c **** 
2017:Generated_Source\PSoC5/USBFS.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBFS.c **** 
2021:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 54


2025:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBFS.c ****                     {
2028:Generated_Source\PSoC5/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBFS.c ****                     }
2030:Generated_Source\PSoC5/USBFS.c **** 
2031:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
2033:Generated_Source\PSoC5/USBFS.c **** 
2034:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBFS.c **** 
2037:Generated_Source\PSoC5/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBFS.c **** 
2042:Generated_Source\PSoC5/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBFS.c ****                 }
2044:Generated_Source\PSoC5/USBFS.c ****                 else
2045:Generated_Source\PSoC5/USBFS.c ****                 {
2046:Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBFS.c ****                 }
2049:Generated_Source\PSoC5/USBFS.c ****             }
2050:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBFS.c ****     }
2053:Generated_Source\PSoC5/USBFS.c **** }
2054:Generated_Source\PSoC5/USBFS.c **** 
2055:Generated_Source\PSoC5/USBFS.c **** 
2056:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP16
2058:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBFS.c **** *
2060:Generated_Source\PSoC5/USBFS.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBFS.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBFS.c **** *
2064:Generated_Source\PSoC5/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBFS.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBFS.c **** *
2070:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBFS.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBFS.c **** *
2076:Generated_Source\PSoC5/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBFS.c **** *
2078:Generated_Source\PSoC5/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBFS.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 55


2082:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBFS.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBFS.c **** *
2086:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBFS.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBFS.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBFS.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBFS.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBFS.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBFS.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBFS.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBFS.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBFS.c **** *
2097:Generated_Source\PSoC5/USBFS.c **** * \return
2098:Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBFS.c **** *
2100:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2101:Generated_Source\PSoC5/USBFS.c **** *  No.
2102:Generated_Source\PSoC5/USBFS.c **** *
2103:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBFS.c **** {
2106:Generated_Source\PSoC5/USBFS.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBFS.c **** 
2108:Generated_Source\PSoC5/USBFS.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBFS.c **** 
2111:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
2112:Generated_Source\PSoC5/USBFS.c ****     {
2113:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBFS.c **** 
2118:Generated_Source\PSoC5/USBFS.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBFS.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBFS.c **** 
2121:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBFS.c ****         {
2123:Generated_Source\PSoC5/USBFS.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBFS.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBFS.c **** 
2126:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBFS.c ****             {
2130:Generated_Source\PSoC5/USBFS.c ****                 dataBuf[i] = (uint16) USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBFS.c ****             }
2132:Generated_Source\PSoC5/USBFS.c ****         }
2133:Generated_Source\PSoC5/USBFS.c **** 
2134:Generated_Source\PSoC5/USBFS.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBFS.c ****         USBFS_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBFS.c ****     #else
2137:Generated_Source\PSoC5/USBFS.c **** 
2138:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 56


2139:Generated_Source\PSoC5/USBFS.c ****         {
2140:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBFS.c **** 
2142:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBFS.c **** 
2145:Generated_Source\PSoC5/USBFS.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2147:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBFS.c **** 
2149:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
2151:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBFS.c **** 
2153:Generated_Source\PSoC5/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBFS.c **** 
2156:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBFS.c **** 
2159:Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBFS.c **** 
2163:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBFS.c ****             */
2166:Generated_Source\PSoC5/USBFS.c ****         }
2167:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBFS.c **** 
2169:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBFS.c ****         {
2171:Generated_Source\PSoC5/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBFS.c **** 
2174:Generated_Source\PSoC5/USBFS.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBFS_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBFS.c **** 
2177:Generated_Source\PSoC5/USBFS.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBFS_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBFS.c **** 
2180:Generated_Source\PSoC5/USBFS.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
2182:Generated_Source\PSoC5/USBFS.c **** 
2183:Generated_Source\PSoC5/USBFS.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBFS.c ****                                                                   ((USBFS_DmaEpLastBurstEl[epNumber
2186:Generated_Source\PSoC5/USBFS.c ****                                                                    (USBFS_DMA_HALFWORDS_PER_BURST -
2187:Generated_Source\PSoC5/USBFS.c **** 
2188:Generated_Source\PSoC5/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2190:Generated_Source\PSoC5/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2191:Generated_Source\PSoC5/USBFS.c **** 
2192:Generated_Source\PSoC5/USBFS.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
2194:Generated_Source\PSoC5/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
2195:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 57


2196:Generated_Source\PSoC5/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
2198:Generated_Source\PSoC5/USBFS.c **** 
2199:Generated_Source\PSoC5/USBFS.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= USBFS_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBFS.c **** 
2202:Generated_Source\PSoC5/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBFS.c **** 
2206:Generated_Source\PSoC5/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
2208:Generated_Source\PSoC5/USBFS.c **** 
2209:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBFS.c **** 
2212:Generated_Source\PSoC5/USBFS.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2214:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE.arb
2215:Generated_Source\PSoC5/USBFS.c **** 
2216:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
2218:Generated_Source\PSoC5/USBFS.c **** 
2219:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
2221:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBFS.c **** 
2223:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
2225:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBFS.c **** 
2227:Generated_Source\PSoC5/USBFS.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBFS.c **** 
2230:Generated_Source\PSoC5/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBFS.c ****             
2233:Generated_Source\PSoC5/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBFS.c ****             {
2235:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBFS.c ****             }
2237:Generated_Source\PSoC5/USBFS.c **** 
2238:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBFS.c **** 
2241:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBFS.c ****             */
2244:Generated_Source\PSoC5/USBFS.c ****         }
2245:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBFS.c ****     }
2248:Generated_Source\PSoC5/USBFS.c ****     else
2249:Generated_Source\PSoC5/USBFS.c ****     {
2250:Generated_Source\PSoC5/USBFS.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBFS.c ****     }
2252:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 58


2253:Generated_Source\PSoC5/USBFS.c ****     return (length);
2254:Generated_Source\PSoC5/USBFS.c **** }
2255:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBFS.c **** 
2257:Generated_Source\PSoC5/USBFS.c **** 
2258:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableOutEP
2260:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBFS.c **** *
2262:Generated_Source\PSoC5/USBFS.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBFS.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBFS.c **** *
2265:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBFS.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBFS.c **** *
2268:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2269:Generated_Source\PSoC5/USBFS.c **** *
2270:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBFS.c **** *
2272:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2273:Generated_Source\PSoC5/USBFS.c **** *  No.
2274:Generated_Source\PSoC5/USBFS.c **** *
2275:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBFS.c **** {
 984              		.loc 1 2277 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989              	.LVL74:
2278:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 990              		.loc 1 2278 0
 991 0000 431E     		subs	r3, r0, #1
 992 0002 DBB2     		uxtb	r3, r3
 993 0004 072B     		cmp	r3, #7
 994 0006 0BD8     		bhi	.L65
2279:Generated_Source\PSoC5/USBFS.c ****     {
2280:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 995              		.loc 1 2280 0
 996 0008 4200     		lsls	r2, r0, #1
 997 000a 0244     		add	r2, r2, r0
 998 000c 9300     		lsls	r3, r2, #2
 999 000e 054A     		ldr	r2, .L67
 1000 0010 1344     		add	r3, r3, r2
 1001 0012 0022     		movs	r2, #0
 1002 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBFS.c **** 
2282:Generated_Source\PSoC5/USBFS.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
 1003              		.loc 1 2283 0
 1004 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1005 0018 D2B2     		uxtb	r2, r2
 1006 001a 0001     		lsls	r0, r0, #4
 1007              	.LVL75:
 1008 001c 024B     		ldr	r3, .L67+4
 1009 001e 1A54     		strb	r2, [r3, r0]
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 59


 1010              	.L65:
 1011 0020 7047     		bx	lr
 1012              	.L68:
 1013 0022 00BF     		.align	2
 1014              	.L67:
 1015 0024 00000000 		.word	USBFS_EP
 1016 0028 FE5F0040 		.word	1073766398
 1017              		.cfi_endproc
 1018              	.LFE13:
 1019              		.size	USBFS_EnableOutEP, .-USBFS_EnableOutEP
 1020              		.section	.text.USBFS_ReadOutEP,"ax",%progbits
 1021              		.align	2
 1022              		.global	USBFS_ReadOutEP
 1023              		.thumb
 1024              		.thumb_func
 1025              		.type	USBFS_ReadOutEP, %function
 1026              	USBFS_ReadOutEP:
 1027              	.LFB12:
1655:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1028              		.loc 1 1655 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL76:
 1033 0000 70B5     		push	{r4, r5, r6, lr}
 1034              		.cfi_def_cfa_offset 16
 1035              		.cfi_offset 4, -16
 1036              		.cfi_offset 5, -12
 1037              		.cfi_offset 6, -8
 1038              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USBFS.c ****     {
 1039              		.loc 1 1656 0
 1040 0002 D9B1     		cbz	r1, .L74
 1041 0004 0546     		mov	r5, r0
 1042 0006 1446     		mov	r4, r2
 1043 0008 0E46     		mov	r6, r1
1656:Generated_Source\PSoC5/USBFS.c ****     {
 1044              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1045 000a C8B1     		cbz	r0, .L75
1656:Generated_Source\PSoC5/USBFS.c ****     {
 1046              		.loc 1 1656 0 discriminator 2
 1047 000c 0828     		cmp	r0, #8
 1048 000e 19D8     		bhi	.L76
1660:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
 1049              		.loc 1 1660 0 is_stmt 1
 1050 0010 FFF7FEFF 		bl	USBFS_GetEPCount
 1051              	.LVL77:
 1052 0014 A042     		cmp	r0, r4
 1053 0016 03D2     		bcs	.L71
1660:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
 1054              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1055 0018 2846     		mov	r0, r5
 1056 001a FFF7FEFF 		bl	USBFS_GetEPCount
 1057              	.LVL78:
 1058 001e 0446     		mov	r4, r0
 1059              	.L71:
 1060              	.LVL79:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 60


 1061              	.LBB4:
1667:Generated_Source\PSoC5/USBFS.c ****             {
 1062              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1063 0020 0023     		movs	r3, #0
 1064 0022 05E0     		b	.L72
 1065              	.LVL80:
 1066              	.L73:
1669:Generated_Source\PSoC5/USBFS.c ****             }
 1067              		.loc 1 1669 0 discriminator 3
 1068 0024 2901     		lsls	r1, r5, #4
 1069 0026 094A     		ldr	r2, .L78
 1070 0028 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1071 002a F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC5/USBFS.c ****             {
 1072              		.loc 1 1667 0 discriminator 3
 1073 002c 0133     		adds	r3, r3, #1
 1074              	.LVL81:
 1075 002e 9BB2     		uxth	r3, r3
 1076              	.LVL82:
 1077              	.L72:
1667:Generated_Source\PSoC5/USBFS.c ****             {
 1078              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1079 0030 A342     		cmp	r3, r4
 1080 0032 F7D3     		bcc	.L73
 1081              	.LBE4:
1674:Generated_Source\PSoC5/USBFS.c ****     #else
 1082              		.loc 1 1674 0 is_stmt 1
 1083 0034 2846     		mov	r0, r5
 1084 0036 FFF7FEFF 		bl	USBFS_EnableOutEP
 1085              	.LVL83:
 1086 003a 04E0     		b	.L70
 1087              	.LVL84:
 1088              	.L74:
1820:Generated_Source\PSoC5/USBFS.c ****     }
 1089              		.loc 1 1820 0
 1090 003c 0024     		movs	r4, #0
 1091 003e 02E0     		b	.L70
 1092              	.L75:
 1093 0040 0024     		movs	r4, #0
 1094 0042 00E0     		b	.L70
 1095              	.L76:
 1096 0044 0024     		movs	r4, #0
 1097              	.LVL85:
 1098              	.L70:
1824:Generated_Source\PSoC5/USBFS.c **** 
 1099              		.loc 1 1824 0
 1100 0046 2046     		mov	r0, r4
 1101 0048 70BD     		pop	{r4, r5, r6, pc}
 1102              	.LVL86:
 1103              	.L79:
 1104 004a 00BF     		.align	2
 1105              	.L78:
 1106 004c 78600040 		.word	1073766520
 1107              		.cfi_endproc
 1108              	.LFE12:
 1109              		.size	USBFS_ReadOutEP, .-USBFS_ReadOutEP
 1110              		.section	.text.USBFS_DisableOutEP,"ax",%progbits
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 61


 1111              		.align	2
 1112              		.global	USBFS_DisableOutEP
 1113              		.thumb
 1114              		.thumb_func
 1115              		.type	USBFS_DisableOutEP, %function
 1116              	USBFS_DisableOutEP:
 1117              	.LFB14:
2284:Generated_Source\PSoC5/USBFS.c ****         
2285:Generated_Source\PSoC5/USBFS.c ****     }
2286:Generated_Source\PSoC5/USBFS.c **** }
2287:Generated_Source\PSoC5/USBFS.c **** 
2288:Generated_Source\PSoC5/USBFS.c **** 
2289:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableOutEP
2291:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBFS.c **** *
2293:Generated_Source\PSoC5/USBFS.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBFS.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBFS.c **** *
2296:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBFS.c **** *
2299:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBFS.c **** {
 1118              		.loc 1 2301 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL87:
2302:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1124              		.loc 1 2302 0
 1125 0000 431E     		subs	r3, r0, #1
 1126 0002 DBB2     		uxtb	r3, r3
 1127 0004 072B     		cmp	r3, #7
 1128 0006 03D8     		bhi	.L80
2303:Generated_Source\PSoC5/USBFS.c ****     {
2304:Generated_Source\PSoC5/USBFS.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_MODE_NAK_OUT;
 1129              		.loc 1 2305 0
 1130 0008 0001     		lsls	r0, r0, #4
 1131              	.LVL88:
 1132 000a 024B     		ldr	r3, .L82
 1133 000c 0822     		movs	r2, #8
 1134 000e 1A54     		strb	r2, [r3, r0]
 1135              	.L80:
 1136 0010 7047     		bx	lr
 1137              	.L83:
 1138 0012 00BF     		.align	2
 1139              	.L82:
 1140 0014 FE5F0040 		.word	1073766398
 1141              		.cfi_endproc
 1142              	.LFE14:
 1143              		.size	USBFS_DisableOutEP, .-USBFS_DisableOutEP
 1144              		.section	.text.USBFS_Force,"ax",%progbits
 1145              		.align	2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 62


 1146              		.global	USBFS_Force
 1147              		.thumb
 1148              		.thumb_func
 1149              		.type	USBFS_Force, %function
 1150              	USBFS_Force:
 1151              	.LFB15:
2306:Generated_Source\PSoC5/USBFS.c ****     }
2307:Generated_Source\PSoC5/USBFS.c **** }
2308:Generated_Source\PSoC5/USBFS.c **** 
2309:Generated_Source\PSoC5/USBFS.c **** 
2310:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Force
2312:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBFS.c **** *
2314:Generated_Source\PSoC5/USBFS.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBFS.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBFS.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBFS.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBFS.c **** *
2319:Generated_Source\PSoC5/USBFS.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBFS.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBFS.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBFS.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBFS.c **** *
2328:Generated_Source\PSoC5/USBFS.c **** *
2329:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBFS.c **** void USBFS_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBFS.c **** {
 1152              		.loc 1 2331 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157              	.LVL89:
2332:Generated_Source\PSoC5/USBFS.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBFS.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBFS.c ****     */
2335:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR0_REG = bState;
 1158              		.loc 1 2335 0
 1159 0000 014B     		ldr	r3, .L85
 1160 0002 1870     		strb	r0, [r3]
 1161 0004 7047     		bx	lr
 1162              	.L86:
 1163 0006 00BF     		.align	2
 1164              	.L85:
 1165 0008 10600040 		.word	1073766416
 1166              		.cfi_endproc
 1167              	.LFE15:
 1168              		.size	USBFS_Force, .-USBFS_Force
 1169              		.section	.text.USBFS_GetEPAckState,"ax",%progbits
 1170              		.align	2
 1171              		.global	USBFS_GetEPAckState
 1172              		.thumb
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 63


 1173              		.thumb_func
 1174              		.type	USBFS_GetEPAckState, %function
 1175              	USBFS_GetEPAckState:
 1176              	.LFB16:
2336:Generated_Source\PSoC5/USBFS.c **** }
2337:Generated_Source\PSoC5/USBFS.c **** 
2338:Generated_Source\PSoC5/USBFS.c **** 
2339:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPAckState
2341:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBFS.c **** *
2343:Generated_Source\PSoC5/USBFS.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBFS.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBFS.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBFS.c **** *
2347:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBFS.c **** *
2350:Generated_Source\PSoC5/USBFS.c **** *  \return
2351:Generated_Source\PSoC5/USBFS.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBFS.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBFS.c **** *
2354:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBFS.c **** {
 1177              		.loc 1 2356 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182              	.LVL90:
2357:Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBFS.c **** 
2359:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1183              		.loc 1 2359 0
 1184 0000 431E     		subs	r3, r0, #1
 1185 0002 DBB2     		uxtb	r3, r3
 1186 0004 072B     		cmp	r3, #7
 1187 0006 06D8     		bhi	.L89
2360:Generated_Source\PSoC5/USBFS.c ****     {
2361:Generated_Source\PSoC5/USBFS.c ****         cr = USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBFS_MODE_ACKD;
 1188              		.loc 1 2361 0
 1189 0008 0001     		lsls	r0, r0, #4
 1190              	.LVL91:
 1191 000a 044B     		ldr	r3, .L90
 1192 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1193 000e 00F01000 		and	r0, r0, #16
 1194 0012 C0B2     		uxtb	r0, r0
 1195              	.LVL92:
 1196 0014 7047     		bx	lr
 1197              	.LVL93:
 1198              	.L89:
2357:Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0u;
 1199              		.loc 1 2357 0
 1200 0016 0020     		movs	r0, #0
 1201              	.LVL94:
2362:Generated_Source\PSoC5/USBFS.c ****     }
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 64


2363:Generated_Source\PSoC5/USBFS.c **** 
2364:Generated_Source\PSoC5/USBFS.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBFS.c **** }
 1202              		.loc 1 2365 0
 1203 0018 7047     		bx	lr
 1204              	.L91:
 1205 001a 00BF     		.align	2
 1206              	.L90:
 1207 001c FE5F0040 		.word	1073766398
 1208              		.cfi_endproc
 1209              	.LFE16:
 1210              		.size	USBFS_GetEPAckState, .-USBFS_GetEPAckState
 1211              		.section	.text.USBFS_SetPowerStatus,"ax",%progbits
 1212              		.align	2
 1213              		.global	USBFS_SetPowerStatus
 1214              		.thumb
 1215              		.thumb_func
 1216              		.type	USBFS_SetPowerStatus, %function
 1217              	USBFS_SetPowerStatus:
 1218              	.LFB17:
2366:Generated_Source\PSoC5/USBFS.c **** 
2367:Generated_Source\PSoC5/USBFS.c **** 
2368:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_SetPowerStatus
2370:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBFS.c **** *
2372:Generated_Source\PSoC5/USBFS.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBFS.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBFS.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBFS.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBFS.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBFS.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBFS.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBFS.c **** *
2380:Generated_Source\PSoC5/USBFS.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBFS.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBFS.c **** *        given here:
2383:Generated_Source\PSoC5/USBFS.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBFS.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBFS.c **** *  USBFS_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBFS.c **** *  USBFS_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBFS.c **** *
2388:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2389:Generated_Source\PSoC5/USBFS.c **** *
2390:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBFS.c **** *
2392:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2393:Generated_Source\PSoC5/USBFS.c **** *  No.
2394:Generated_Source\PSoC5/USBFS.c **** *
2395:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBFS.c **** void USBFS_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBFS.c **** {
 1219              		.loc 1 2397 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223              		@ link register save eliminated.
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 65


 1224              	.LVL95:
2398:Generated_Source\PSoC5/USBFS.c ****     if (powerStatus != USBFS_DEVICE_STATUS_BUS_POWERED)
 1225              		.loc 1 2398 0
 1226 0000 28B1     		cbz	r0, .L93
2399:Generated_Source\PSoC5/USBFS.c ****     {
2400:Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus |= (uint8)  USBFS_DEVICE_STATUS_SELF_POWERED;
 1227              		.loc 1 2400 0
 1228 0002 064A     		ldr	r2, .L95
 1229 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1230 0006 43F00103 		orr	r3, r3, #1
 1231 000a 1370     		strb	r3, [r2]
 1232 000c 7047     		bx	lr
 1233              	.L93:
2401:Generated_Source\PSoC5/USBFS.c ****     }
2402:Generated_Source\PSoC5/USBFS.c ****     else
2403:Generated_Source\PSoC5/USBFS.c ****     {
2404:Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus &= (uint8) ~USBFS_DEVICE_STATUS_SELF_POWERED;
 1234              		.loc 1 2404 0
 1235 000e 034A     		ldr	r2, .L95
 1236 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1237 0012 03F0FE03 		and	r3, r3, #254
 1238 0016 1370     		strb	r3, [r2]
 1239 0018 7047     		bx	lr
 1240              	.L96:
 1241 001a 00BF     		.align	2
 1242              	.L95:
 1243 001c 00000000 		.word	USBFS_deviceStatus
 1244              		.cfi_endproc
 1245              	.LFE17:
 1246              		.size	USBFS_SetPowerStatus, .-USBFS_SetPowerStatus
 1247              		.section	.text.USBFS_RWUEnabled,"ax",%progbits
 1248              		.align	2
 1249              		.global	USBFS_RWUEnabled
 1250              		.thumb
 1251              		.thumb_func
 1252              		.type	USBFS_RWUEnabled, %function
 1253              	USBFS_RWUEnabled:
 1254              	.LFB18:
2405:Generated_Source\PSoC5/USBFS.c ****     }
2406:Generated_Source\PSoC5/USBFS.c **** }
2407:Generated_Source\PSoC5/USBFS.c **** 
2408:Generated_Source\PSoC5/USBFS.c **** 
2409:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_VBusPresent
2412:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBFS.c ****     *
2414:Generated_Source\PSoC5/USBFS.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBFS.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBFS.c ****     *
2417:Generated_Source\PSoC5/USBFS.c ****     * \return
2418:Generated_Source\PSoC5/USBFS.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBFS.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBFS.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBFS.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBFS.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBFS.c ****     *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 66


2424:Generated_Source\PSoC5/USBFS.c ****     *
2425:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBFS.c ****     {
2428:Generated_Source\PSoC5/USBFS.c ****         return ((0u != (USBFS_VBUS_STATUS_REG & USBFS_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBFS.c ****     }
2430:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBFS.c **** 
2432:Generated_Source\PSoC5/USBFS.c **** 
2433:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_RWUEnabled
2435:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBFS.c **** *
2437:Generated_Source\PSoC5/USBFS.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBFS.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBFS.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBFS.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBFS.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBFS.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBFS.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBFS.c **** *
2445:Generated_Source\PSoC5/USBFS.c **** *
2446:Generated_Source\PSoC5/USBFS.c **** * \return
2447:Generated_Source\PSoC5/USBFS.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBFS.c **** *
2449:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2450:Generated_Source\PSoC5/USBFS.c **** *  USBFS_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBFS.c **** *
2452:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBFS.c **** {
 1255              		.loc 1 2454 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 1260              	.LVL96:
2455:Generated_Source\PSoC5/USBFS.c ****     uint8 result = USBFS_FALSE;
2456:Generated_Source\PSoC5/USBFS.c **** 
2457:Generated_Source\PSoC5/USBFS.c ****     if (0u != (USBFS_deviceStatus & USBFS_DEVICE_STATUS_REMOTE_WAKEUP))
 1261              		.loc 1 2457 0
 1262 0000 044B     		ldr	r3, .L100
 1263 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1264 0004 13F0020F 		tst	r3, #2
 1265 0008 01D1     		bne	.L99
2455:Generated_Source\PSoC5/USBFS.c ****     uint8 result = USBFS_FALSE;
 1266              		.loc 1 2455 0
 1267 000a 0020     		movs	r0, #0
 1268 000c 7047     		bx	lr
 1269              	.L99:
2458:Generated_Source\PSoC5/USBFS.c ****     {
2459:Generated_Source\PSoC5/USBFS.c ****         result = USBFS_TRUE;
 1270              		.loc 1 2459 0
 1271 000e 0120     		movs	r0, #1
 1272              	.LVL97:
2460:Generated_Source\PSoC5/USBFS.c ****     }
2461:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 67


2462:Generated_Source\PSoC5/USBFS.c ****     return (result);
2463:Generated_Source\PSoC5/USBFS.c **** }
 1273              		.loc 1 2463 0
 1274 0010 7047     		bx	lr
 1275              	.L101:
 1276 0012 00BF     		.align	2
 1277              	.L100:
 1278 0014 00000000 		.word	USBFS_deviceStatus
 1279              		.cfi_endproc
 1280              	.LFE18:
 1281              		.size	USBFS_RWUEnabled, .-USBFS_RWUEnabled
 1282              		.section	.text.USBFS_GetDeviceAddress,"ax",%progbits
 1283              		.align	2
 1284              		.global	USBFS_GetDeviceAddress
 1285              		.thumb
 1286              		.thumb_func
 1287              		.type	USBFS_GetDeviceAddress, %function
 1288              	USBFS_GetDeviceAddress:
 1289              	.LFB19:
2464:Generated_Source\PSoC5/USBFS.c **** 
2465:Generated_Source\PSoC5/USBFS.c **** 
2466:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetDeviceAddress
2468:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBFS.c **** *
2470:Generated_Source\PSoC5/USBFS.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBFS.c **** *
2472:Generated_Source\PSoC5/USBFS.c **** * \return
2473:Generated_Source\PSoC5/USBFS.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBFS.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBFS.c **** *
2476:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBFS.c **** {
 1290              		.loc 1 2478 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBFS.c ****     return (uint8)(USBFS_CR0_REG & USBFS_CR0_DEVICE_ADDRESS_MASK);
 1295              		.loc 1 2479 0
 1296 0000 024B     		ldr	r3, .L103
 1297 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBFS.c **** }
 1298              		.loc 1 2480 0
 1299 0004 00F07F00 		and	r0, r0, #127
 1300 0008 7047     		bx	lr
 1301              	.L104:
 1302 000a 00BF     		.align	2
 1303              	.L103:
 1304 000c 08600040 		.word	1073766408
 1305              		.cfi_endproc
 1306              	.LFE19:
 1307              		.size	USBFS_GetDeviceAddress, .-USBFS_GetDeviceAddress
 1308              		.section	.text.USBFS_EnableSofInt,"ax",%progbits
 1309              		.align	2
 1310              		.global	USBFS_EnableSofInt
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 68


 1311              		.thumb
 1312              		.thumb_func
 1313              		.type	USBFS_EnableSofInt, %function
 1314              	USBFS_EnableSofInt:
 1315              	.LFB20:
2481:Generated_Source\PSoC5/USBFS.c **** 
2482:Generated_Source\PSoC5/USBFS.c **** 
2483:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableSofInt
2485:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBFS.c **** *
2487:Generated_Source\PSoC5/USBFS.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBFS.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBFS.c **** *
2490:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBFS.c **** {
 1316              		.loc 1 2492 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 1320              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBFS.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG |= (uint32) USBFS_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBFS.c **** #else
2497:Generated_Source\PSoC5/USBFS.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
 1321              		.loc 1 2499 0
 1322 0000 4FF40012 		mov	r2, #2097152
 1323 0004 014B     		ldr	r3, .L106
 1324 0006 1A60     		str	r2, [r3]
 1325 0008 7047     		bx	lr
 1326              	.L107:
 1327 000a 00BF     		.align	2
 1328              	.L106:
 1329 000c 00E100E0 		.word	-536813312
 1330              		.cfi_endproc
 1331              	.LFE20:
 1332              		.size	USBFS_EnableSofInt, .-USBFS_EnableSofInt
 1333              		.section	.text.USBFS_DisableSofInt,"ax",%progbits
 1334              		.align	2
 1335              		.global	USBFS_DisableSofInt
 1336              		.thumb
 1337              		.thumb_func
 1338              		.type	USBFS_DisableSofInt, %function
 1339              	USBFS_DisableSofInt:
 1340              	.LFB21:
2500:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBFS.c **** }
2503:Generated_Source\PSoC5/USBFS.c **** 
2504:Generated_Source\PSoC5/USBFS.c **** 
2505:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableSofInt
2507:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 69


2508:Generated_Source\PSoC5/USBFS.c **** *
2509:Generated_Source\PSoC5/USBFS.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBFS.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBFS.c **** *
2512:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBFS.c **** {
 1341              		.loc 1 2514 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBFS.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG &= (uint32) ~USBFS_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBFS.c **** #else
2519:Generated_Source\PSoC5/USBFS.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_SOF_VECT_NUM);
 1346              		.loc 1 2521 0
 1347 0000 4FF40012 		mov	r2, #2097152
 1348 0004 014B     		ldr	r3, .L109
 1349 0006 1A60     		str	r2, [r3]
 1350 0008 7047     		bx	lr
 1351              	.L110:
 1352 000a 00BF     		.align	2
 1353              	.L109:
 1354 000c 80E100E0 		.word	-536813184
 1355              		.cfi_endproc
 1356              	.LFE21:
 1357              		.size	USBFS_DisableSofInt, .-USBFS_DisableSofInt
 1358              		.global	USBFS_initVar
 1359              		.bss
 1360              		.set	.LANCHOR0,. + 0
 1361              		.type	USBFS_initVar, %object
 1362              		.size	USBFS_initVar, 1
 1363              	USBFS_initVar:
 1364 0000 00       		.space	1
 1365              		.text
 1366              	.Letext0:
 1367              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1368              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 1369              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 1370              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1371              		.file 6 "Generated_Source\\PSoC5\\USBFS_Dp.h"
 1372              		.section	.debug_info,"",%progbits
 1373              	.Ldebug_info0:
 1374 0000 170A0000 		.4byte	0xa17
 1375 0004 0400     		.2byte	0x4
 1376 0006 00000000 		.4byte	.Ldebug_abbrev0
 1377 000a 04       		.byte	0x4
 1378 000b 01       		.uleb128 0x1
 1379 000c 49050000 		.4byte	.LASF100
 1380 0010 0C       		.byte	0xc
 1381 0011 88030000 		.4byte	.LASF101
 1382 0015 8A010000 		.4byte	.LASF102
 1383 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 70


 1384 001d 00000000 		.4byte	0
 1385 0021 00000000 		.4byte	.Ldebug_line0
 1386 0025 02       		.uleb128 0x2
 1387 0026 01       		.byte	0x1
 1388 0027 06       		.byte	0x6
 1389 0028 0D030000 		.4byte	.LASF0
 1390 002c 02       		.uleb128 0x2
 1391 002d 01       		.byte	0x1
 1392 002e 08       		.byte	0x8
 1393 002f E6020000 		.4byte	.LASF1
 1394 0033 02       		.uleb128 0x2
 1395 0034 02       		.byte	0x2
 1396 0035 05       		.byte	0x5
 1397 0036 BA000000 		.4byte	.LASF2
 1398 003a 02       		.uleb128 0x2
 1399 003b 02       		.byte	0x2
 1400 003c 07       		.byte	0x7
 1401 003d D7030000 		.4byte	.LASF3
 1402 0041 02       		.uleb128 0x2
 1403 0042 04       		.byte	0x4
 1404 0043 05       		.byte	0x5
 1405 0044 28020000 		.4byte	.LASF4
 1406 0048 02       		.uleb128 0x2
 1407 0049 04       		.byte	0x4
 1408 004a 07       		.byte	0x7
 1409 004b 5B040000 		.4byte	.LASF5
 1410 004f 02       		.uleb128 0x2
 1411 0050 08       		.byte	0x8
 1412 0051 05       		.byte	0x5
 1413 0052 F7010000 		.4byte	.LASF6
 1414 0056 02       		.uleb128 0x2
 1415 0057 08       		.byte	0x8
 1416 0058 07       		.byte	0x7
 1417 0059 05020000 		.4byte	.LASF7
 1418 005d 03       		.uleb128 0x3
 1419 005e 04       		.byte	0x4
 1420 005f 05       		.byte	0x5
 1421 0060 696E7400 		.ascii	"int\000"
 1422 0064 02       		.uleb128 0x2
 1423 0065 04       		.byte	0x4
 1424 0066 07       		.byte	0x7
 1425 0067 3B030000 		.4byte	.LASF8
 1426 006b 04       		.uleb128 0x4
 1427 006c F1030000 		.4byte	.LASF9
 1428 0070 02       		.byte	0x2
 1429 0071 E401     		.2byte	0x1e4
 1430 0073 2C000000 		.4byte	0x2c
 1431 0077 04       		.uleb128 0x4
 1432 0078 45010000 		.4byte	.LASF10
 1433 007c 02       		.byte	0x2
 1434 007d E501     		.2byte	0x1e5
 1435 007f 3A000000 		.4byte	0x3a
 1436 0083 04       		.uleb128 0x4
 1437 0084 4F040000 		.4byte	.LASF11
 1438 0088 02       		.byte	0x2
 1439 0089 E601     		.2byte	0x1e6
 1440 008b 48000000 		.4byte	0x48
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 71


 1441 008f 02       		.uleb128 0x2
 1442 0090 04       		.byte	0x4
 1443 0091 04       		.byte	0x4
 1444 0092 F1010000 		.4byte	.LASF12
 1445 0096 02       		.uleb128 0x2
 1446 0097 08       		.byte	0x8
 1447 0098 04       		.byte	0x4
 1448 0099 13050000 		.4byte	.LASF13
 1449 009d 02       		.uleb128 0x2
 1450 009e 01       		.byte	0x1
 1451 009f 08       		.byte	0x8
 1452 00a0 A7030000 		.4byte	.LASF14
 1453 00a4 04       		.uleb128 0x4
 1454 00a5 56040000 		.4byte	.LASF15
 1455 00a9 02       		.byte	0x2
 1456 00aa 8E02     		.2byte	0x28e
 1457 00ac B0000000 		.4byte	0xb0
 1458 00b0 05       		.uleb128 0x5
 1459 00b1 6B000000 		.4byte	0x6b
 1460 00b5 04       		.uleb128 0x4
 1461 00b6 60030000 		.4byte	.LASF16
 1462 00ba 02       		.byte	0x2
 1463 00bb 9002     		.2byte	0x290
 1464 00bd C1000000 		.4byte	0xc1
 1465 00c1 05       		.uleb128 0x5
 1466 00c2 83000000 		.4byte	0x83
 1467 00c6 02       		.uleb128 0x2
 1468 00c7 08       		.byte	0x8
 1469 00c8 04       		.byte	0x4
 1470 00c9 01010000 		.4byte	.LASF17
 1471 00cd 02       		.uleb128 0x2
 1472 00ce 04       		.byte	0x4
 1473 00cf 07       		.byte	0x7
 1474 00d0 DF000000 		.4byte	.LASF18
 1475 00d4 06       		.uleb128 0x6
 1476 00d5 0C       		.byte	0xc
 1477 00d6 03       		.byte	0x3
 1478 00d7 95       		.byte	0x95
 1479 00d8 49010000 		.4byte	0x149
 1480 00dc 07       		.uleb128 0x7
 1481 00dd 81030000 		.4byte	.LASF19
 1482 00e1 03       		.byte	0x3
 1483 00e2 97       		.byte	0x97
 1484 00e3 6B000000 		.4byte	0x6b
 1485 00e7 00       		.byte	0
 1486 00e8 07       		.uleb128 0x7
 1487 00e9 31020000 		.4byte	.LASF20
 1488 00ed 03       		.byte	0x3
 1489 00ee 98       		.byte	0x98
 1490 00ef 6B000000 		.4byte	0x6b
 1491 00f3 01       		.byte	0x1
 1492 00f4 07       		.uleb128 0x7
 1493 00f5 2B040000 		.4byte	.LASF21
 1494 00f9 03       		.byte	0x3
 1495 00fa 99       		.byte	0x99
 1496 00fb 6B000000 		.4byte	0x6b
 1497 00ff 02       		.byte	0x2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 72


 1498 0100 07       		.uleb128 0x7
 1499 0101 16000000 		.4byte	.LASF22
 1500 0105 03       		.byte	0x3
 1501 0106 9A       		.byte	0x9a
 1502 0107 6B000000 		.4byte	0x6b
 1503 010b 03       		.byte	0x3
 1504 010c 07       		.uleb128 0x7
 1505 010d 3C020000 		.4byte	.LASF23
 1506 0111 03       		.byte	0x3
 1507 0112 9B       		.byte	0x9b
 1508 0113 6B000000 		.4byte	0x6b
 1509 0117 04       		.byte	0x4
 1510 0118 07       		.uleb128 0x7
 1511 0119 E8000000 		.4byte	.LASF24
 1512 011d 03       		.byte	0x3
 1513 011e 9C       		.byte	0x9c
 1514 011f 6B000000 		.4byte	0x6b
 1515 0123 05       		.byte	0x5
 1516 0124 07       		.uleb128 0x7
 1517 0125 CC030000 		.4byte	.LASF25
 1518 0129 03       		.byte	0x3
 1519 012a 9D       		.byte	0x9d
 1520 012b 77000000 		.4byte	0x77
 1521 012f 06       		.byte	0x6
 1522 0130 07       		.uleb128 0x7
 1523 0131 A4040000 		.4byte	.LASF26
 1524 0135 03       		.byte	0x3
 1525 0136 9E       		.byte	0x9e
 1526 0137 77000000 		.4byte	0x77
 1527 013b 08       		.byte	0x8
 1528 013c 07       		.uleb128 0x7
 1529 013d 66030000 		.4byte	.LASF27
 1530 0141 03       		.byte	0x3
 1531 0142 9F       		.byte	0x9f
 1532 0143 6B000000 		.4byte	0x6b
 1533 0147 0A       		.byte	0xa
 1534 0148 00       		.byte	0
 1535 0149 08       		.uleb128 0x8
 1536 014a BD020000 		.4byte	.LASF28
 1537 014e 03       		.byte	0x3
 1538 014f A0       		.byte	0xa0
 1539 0150 D4000000 		.4byte	0xd4
 1540 0154 06       		.uleb128 0x6
 1541 0155 10       		.byte	0x10
 1542 0156 03       		.byte	0x3
 1543 0157 DC       		.byte	0xdc
 1544 0158 8D010000 		.4byte	0x18d
 1545 015c 07       		.uleb128 0x7
 1546 015d EA030000 		.4byte	.LASF29
 1547 0161 03       		.byte	0x3
 1548 0162 DE       		.byte	0xde
 1549 0163 6B000000 		.4byte	0x6b
 1550 0167 00       		.byte	0
 1551 0168 07       		.uleb128 0x7
 1552 0169 FE030000 		.4byte	.LASF30
 1553 016d 03       		.byte	0x3
 1554 016e DF       		.byte	0xdf
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 73


 1555 016f 6B000000 		.4byte	0x6b
 1556 0173 01       		.byte	0x1
 1557 0174 07       		.uleb128 0x7
 1558 0175 1C020000 		.4byte	.LASF31
 1559 0179 03       		.byte	0x3
 1560 017a E0       		.byte	0xe0
 1561 017b 6B000000 		.4byte	0x6b
 1562 017f 02       		.byte	0x2
 1563 0180 09       		.uleb128 0x9
 1564 0181 67617000 		.ascii	"gap\000"
 1565 0185 03       		.byte	0x3
 1566 0186 E1       		.byte	0xe1
 1567 0187 8D010000 		.4byte	0x18d
 1568 018b 03       		.byte	0x3
 1569 018c 00       		.byte	0
 1570 018d 0A       		.uleb128 0xa
 1571 018e 6B000000 		.4byte	0x6b
 1572 0192 9D010000 		.4byte	0x19d
 1573 0196 0B       		.uleb128 0xb
 1574 0197 CD000000 		.4byte	0xcd
 1575 019b 0C       		.byte	0xc
 1576 019c 00       		.byte	0
 1577 019d 08       		.uleb128 0x8
 1578 019e 28010000 		.4byte	.LASF32
 1579 01a2 03       		.byte	0x3
 1580 01a3 E2       		.byte	0xe2
 1581 01a4 54010000 		.4byte	0x154
 1582 01a8 06       		.uleb128 0x6
 1583 01a9 10       		.byte	0x10
 1584 01aa 03       		.byte	0x3
 1585 01ab EE       		.byte	0xee
 1586 01ac 29020000 		.4byte	0x229
 1587 01b0 07       		.uleb128 0x7
 1588 01b1 22020000 		.4byte	.LASF33
 1589 01b5 03       		.byte	0x3
 1590 01b6 F0       		.byte	0xf0
 1591 01b7 6B000000 		.4byte	0x6b
 1592 01bb 00       		.byte	0
 1593 01bc 07       		.uleb128 0x7
 1594 01bd 9D000000 		.4byte	.LASF34
 1595 01c1 03       		.byte	0x3
 1596 01c2 F1       		.byte	0xf1
 1597 01c3 6B000000 		.4byte	0x6b
 1598 01c7 01       		.byte	0x1
 1599 01c8 07       		.uleb128 0x7
 1600 01c9 08030000 		.4byte	.LASF35
 1601 01cd 03       		.byte	0x3
 1602 01ce F2       		.byte	0xf2
 1603 01cf 6B000000 		.4byte	0x6b
 1604 01d3 02       		.byte	0x2
 1605 01d4 07       		.uleb128 0x7
 1606 01d5 3C010000 		.4byte	.LASF36
 1607 01d9 03       		.byte	0x3
 1608 01da F3       		.byte	0xf3
 1609 01db 6B000000 		.4byte	0x6b
 1610 01df 03       		.byte	0x3
 1611 01e0 07       		.uleb128 0x7
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 74


 1612 01e1 4D030000 		.4byte	.LASF37
 1613 01e5 03       		.byte	0x3
 1614 01e6 F4       		.byte	0xf4
 1615 01e7 6B000000 		.4byte	0x6b
 1616 01eb 04       		.byte	0x4
 1617 01ec 07       		.uleb128 0x7
 1618 01ed 41050000 		.4byte	.LASF38
 1619 01f1 03       		.byte	0x3
 1620 01f2 F5       		.byte	0xf5
 1621 01f3 6B000000 		.4byte	0x6b
 1622 01f7 05       		.byte	0x5
 1623 01f8 07       		.uleb128 0x7
 1624 01f9 4C010000 		.4byte	.LASF39
 1625 01fd 03       		.byte	0x3
 1626 01fe F6       		.byte	0xf6
 1627 01ff 6B000000 		.4byte	0x6b
 1628 0203 06       		.byte	0x6
 1629 0204 07       		.uleb128 0x7
 1630 0205 39050000 		.4byte	.LASF40
 1631 0209 03       		.byte	0x3
 1632 020a F7       		.byte	0xf7
 1633 020b 6B000000 		.4byte	0x6b
 1634 020f 07       		.byte	0x7
 1635 0210 07       		.uleb128 0x7
 1636 0211 48030000 		.4byte	.LASF41
 1637 0215 03       		.byte	0x3
 1638 0216 F8       		.byte	0xf8
 1639 0217 6B000000 		.4byte	0x6b
 1640 021b 08       		.byte	0x8
 1641 021c 09       		.uleb128 0x9
 1642 021d 67617000 		.ascii	"gap\000"
 1643 0221 03       		.byte	0x3
 1644 0222 F9       		.byte	0xf9
 1645 0223 29020000 		.4byte	0x229
 1646 0227 09       		.byte	0x9
 1647 0228 00       		.byte	0
 1648 0229 0A       		.uleb128 0xa
 1649 022a 6B000000 		.4byte	0x6b
 1650 022e 39020000 		.4byte	0x239
 1651 0232 0B       		.uleb128 0xb
 1652 0233 CD000000 		.4byte	0xcd
 1653 0237 06       		.byte	0x6
 1654 0238 00       		.byte	0
 1655 0239 08       		.uleb128 0x8
 1656 023a F4020000 		.4byte	.LASF42
 1657 023e 03       		.byte	0x3
 1658 023f FA       		.byte	0xfa
 1659 0240 A8010000 		.4byte	0x1a8
 1660 0244 0C       		.uleb128 0xc
 1661 0245 90       		.byte	0x90
 1662 0246 03       		.byte	0x3
 1663 0247 1601     		.2byte	0x116
 1664 0249 5B020000 		.4byte	0x25b
 1665 024d 0D       		.uleb128 0xd
 1666 024e DD010000 		.4byte	.LASF43
 1667 0252 03       		.byte	0x3
 1668 0253 1801     		.2byte	0x118
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 75


 1669 0255 5B020000 		.4byte	0x25b
 1670 0259 00       		.byte	0
 1671 025a 00       		.byte	0
 1672 025b 0A       		.uleb128 0xa
 1673 025c 9D010000 		.4byte	0x19d
 1674 0260 6B020000 		.4byte	0x26b
 1675 0264 0B       		.uleb128 0xb
 1676 0265 CD000000 		.4byte	0xcd
 1677 0269 08       		.byte	0x8
 1678 026a 00       		.byte	0
 1679 026b 04       		.uleb128 0x4
 1680 026c 61000000 		.4byte	.LASF44
 1681 0270 03       		.byte	0x3
 1682 0271 1901     		.2byte	0x119
 1683 0273 44020000 		.4byte	0x244
 1684 0277 0C       		.uleb128 0xc
 1685 0278 90       		.byte	0x90
 1686 0279 03       		.byte	0x3
 1687 027a 1C01     		.2byte	0x11c
 1688 027c 8E020000 		.4byte	0x28e
 1689 0280 0D       		.uleb128 0xd
 1690 0281 EF000000 		.4byte	.LASF45
 1691 0285 03       		.byte	0x3
 1692 0286 1E01     		.2byte	0x11e
 1693 0288 8E020000 		.4byte	0x28e
 1694 028c 00       		.byte	0
 1695 028d 00       		.byte	0
 1696 028e 0A       		.uleb128 0xa
 1697 028f 39020000 		.4byte	0x239
 1698 0293 9E020000 		.4byte	0x29e
 1699 0297 0B       		.uleb128 0xb
 1700 0298 CD000000 		.4byte	0xcd
 1701 029c 08       		.byte	0x8
 1702 029d 00       		.byte	0
 1703 029e 04       		.uleb128 0x4
 1704 029f 98020000 		.4byte	.LASF46
 1705 02a3 03       		.byte	0x3
 1706 02a4 1F01     		.2byte	0x11f
 1707 02a6 77020000 		.4byte	0x277
 1708 02aa 0E       		.uleb128 0xe
 1709 02ab D7050000 		.4byte	.LASF47
 1710 02af 01       		.byte	0x1
 1711 02b0 D3       		.byte	0xd3
 1712 02b1 00000000 		.4byte	.LFB1
 1713 02b5 68010000 		.4byte	.LFE1-.LFB1
 1714 02b9 01       		.uleb128 0x1
 1715 02ba 9C       		.byte	0x9c
 1716 02bb BE040000 		.4byte	0x4be
 1717 02bf 0F       		.uleb128 0xf
 1718 02c0 15060000 		.4byte	.LASF51
 1719 02c4 01       		.byte	0x1
 1720 02c5 FA       		.byte	0xfa
 1721 02c6 6B000000 		.4byte	0x6b
 1722 02ca 00000000 		.4byte	.LLST0
 1723 02ce 10       		.uleb128 0x10
 1724 02cf 06000000 		.4byte	.LVL0
 1725 02d3 CD090000 		.4byte	0x9cd
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 76


 1726 02d7 11       		.uleb128 0x11
 1727 02d8 3C000000 		.4byte	.LVL2
 1728 02dc D8090000 		.4byte	0x9d8
 1729 02e0 EA020000 		.4byte	0x2ea
 1730 02e4 12       		.uleb128 0x12
 1731 02e5 01       		.uleb128 0x1
 1732 02e6 50       		.byte	0x50
 1733 02e7 01       		.uleb128 0x1
 1734 02e8 30       		.byte	0x30
 1735 02e9 00       		.byte	0
 1736 02ea 11       		.uleb128 0x11
 1737 02eb 5C000000 		.4byte	.LVL3
 1738 02ef D8090000 		.4byte	0x9d8
 1739 02f3 FE020000 		.4byte	0x2fe
 1740 02f7 12       		.uleb128 0x12
 1741 02f8 01       		.uleb128 0x1
 1742 02f9 50       		.byte	0x50
 1743 02fa 02       		.uleb128 0x2
 1744 02fb 76       		.byte	0x76
 1745 02fc 00       		.sleb128 0
 1746 02fd 00       		.byte	0
 1747 02fe 11       		.uleb128 0x11
 1748 02ff 62000000 		.4byte	.LVL4
 1749 0303 D8090000 		.4byte	0x9d8
 1750 0307 12030000 		.4byte	0x312
 1751 030b 12       		.uleb128 0x12
 1752 030c 01       		.uleb128 0x1
 1753 030d 50       		.byte	0x50
 1754 030e 02       		.uleb128 0x2
 1755 030f 08       		.byte	0x8
 1756 0310 28       		.byte	0x28
 1757 0311 00       		.byte	0
 1758 0312 11       		.uleb128 0x11
 1759 0313 80000000 		.4byte	.LVL5
 1760 0317 D8090000 		.4byte	0x9d8
 1761 031b 26030000 		.4byte	0x326
 1762 031f 12       		.uleb128 0x12
 1763 0320 01       		.uleb128 0x1
 1764 0321 50       		.byte	0x50
 1765 0322 02       		.uleb128 0x2
 1766 0323 75       		.byte	0x75
 1767 0324 00       		.sleb128 0
 1768 0325 00       		.byte	0
 1769 0326 11       		.uleb128 0x11
 1770 0327 98000000 		.4byte	.LVL6
 1771 032b E3090000 		.4byte	0x9e3
 1772 032f 3A030000 		.4byte	0x33a
 1773 0333 12       		.uleb128 0x12
 1774 0334 01       		.uleb128 0x1
 1775 0335 50       		.byte	0x50
 1776 0336 02       		.uleb128 0x2
 1777 0337 77       		.byte	0x77
 1778 0338 00       		.sleb128 0
 1779 0339 00       		.byte	0
 1780 033a 11       		.uleb128 0x11
 1781 033b A0000000 		.4byte	.LVL7
 1782 033f EE090000 		.4byte	0x9ee
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 77


 1783 0343 52030000 		.4byte	0x352
 1784 0347 12       		.uleb128 0x12
 1785 0348 01       		.uleb128 0x1
 1786 0349 50       		.byte	0x50
 1787 034a 01       		.uleb128 0x1
 1788 034b 47       		.byte	0x47
 1789 034c 12       		.uleb128 0x12
 1790 034d 01       		.uleb128 0x1
 1791 034e 51       		.byte	0x51
 1792 034f 01       		.uleb128 0x1
 1793 0350 37       		.byte	0x37
 1794 0351 00       		.byte	0
 1795 0352 11       		.uleb128 0x11
 1796 0353 A8000000 		.4byte	.LVL8
 1797 0357 F9090000 		.4byte	0x9f9
 1798 035b 65030000 		.4byte	0x365
 1799 035f 12       		.uleb128 0x12
 1800 0360 01       		.uleb128 0x1
 1801 0361 50       		.byte	0x50
 1802 0362 01       		.uleb128 0x1
 1803 0363 47       		.byte	0x47
 1804 0364 00       		.byte	0
 1805 0365 11       		.uleb128 0x11
 1806 0366 B0000000 		.4byte	.LVL9
 1807 036a EE090000 		.4byte	0x9ee
 1808 036e 7D030000 		.4byte	0x37d
 1809 0372 12       		.uleb128 0x12
 1810 0373 01       		.uleb128 0x1
 1811 0374 50       		.byte	0x50
 1812 0375 01       		.uleb128 0x1
 1813 0376 48       		.byte	0x48
 1814 0377 12       		.uleb128 0x12
 1815 0378 01       		.uleb128 0x1
 1816 0379 51       		.byte	0x51
 1817 037a 01       		.uleb128 0x1
 1818 037b 37       		.byte	0x37
 1819 037c 00       		.byte	0
 1820 037d 11       		.uleb128 0x11
 1821 037e B8000000 		.4byte	.LVL10
 1822 0382 F9090000 		.4byte	0x9f9
 1823 0386 90030000 		.4byte	0x390
 1824 038a 12       		.uleb128 0x12
 1825 038b 01       		.uleb128 0x1
 1826 038c 50       		.byte	0x50
 1827 038d 01       		.uleb128 0x1
 1828 038e 48       		.byte	0x48
 1829 038f 00       		.byte	0
 1830 0390 11       		.uleb128 0x11
 1831 0391 C0000000 		.4byte	.LVL11
 1832 0395 EE090000 		.4byte	0x9ee
 1833 0399 A8030000 		.4byte	0x3a8
 1834 039d 12       		.uleb128 0x12
 1835 039e 01       		.uleb128 0x1
 1836 039f 50       		.byte	0x50
 1837 03a0 01       		.uleb128 0x1
 1838 03a1 45       		.byte	0x45
 1839 03a2 12       		.uleb128 0x12
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 78


 1840 03a3 01       		.uleb128 0x1
 1841 03a4 51       		.byte	0x51
 1842 03a5 01       		.uleb128 0x1
 1843 03a6 37       		.byte	0x37
 1844 03a7 00       		.byte	0
 1845 03a8 11       		.uleb128 0x11
 1846 03a9 C8000000 		.4byte	.LVL12
 1847 03ad F9090000 		.4byte	0x9f9
 1848 03b1 BB030000 		.4byte	0x3bb
 1849 03b5 12       		.uleb128 0x12
 1850 03b6 01       		.uleb128 0x1
 1851 03b7 50       		.byte	0x50
 1852 03b8 01       		.uleb128 0x1
 1853 03b9 45       		.byte	0x45
 1854 03ba 00       		.byte	0
 1855 03bb 11       		.uleb128 0x11
 1856 03bc D0000000 		.4byte	.LVL13
 1857 03c0 EE090000 		.4byte	0x9ee
 1858 03c4 D4030000 		.4byte	0x3d4
 1859 03c8 12       		.uleb128 0x12
 1860 03c9 01       		.uleb128 0x1
 1861 03ca 50       		.byte	0x50
 1862 03cb 02       		.uleb128 0x2
 1863 03cc 76       		.byte	0x76
 1864 03cd 00       		.sleb128 0
 1865 03ce 12       		.uleb128 0x12
 1866 03cf 01       		.uleb128 0x1
 1867 03d0 51       		.byte	0x51
 1868 03d1 01       		.uleb128 0x1
 1869 03d2 37       		.byte	0x37
 1870 03d3 00       		.byte	0
 1871 03d4 11       		.uleb128 0x11
 1872 03d5 D8000000 		.4byte	.LVL14
 1873 03d9 F9090000 		.4byte	0x9f9
 1874 03dd E8030000 		.4byte	0x3e8
 1875 03e1 12       		.uleb128 0x12
 1876 03e2 01       		.uleb128 0x1
 1877 03e3 50       		.byte	0x50
 1878 03e4 02       		.uleb128 0x2
 1879 03e5 76       		.byte	0x76
 1880 03e6 00       		.sleb128 0
 1881 03e7 00       		.byte	0
 1882 03e8 11       		.uleb128 0x11
 1883 03e9 E0000000 		.4byte	.LVL15
 1884 03ed EE090000 		.4byte	0x9ee
 1885 03f1 01040000 		.4byte	0x401
 1886 03f5 12       		.uleb128 0x12
 1887 03f6 01       		.uleb128 0x1
 1888 03f7 50       		.byte	0x50
 1889 03f8 02       		.uleb128 0x2
 1890 03f9 75       		.byte	0x75
 1891 03fa 00       		.sleb128 0
 1892 03fb 12       		.uleb128 0x12
 1893 03fc 01       		.uleb128 0x1
 1894 03fd 51       		.byte	0x51
 1895 03fe 01       		.uleb128 0x1
 1896 03ff 37       		.byte	0x37
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 79


 1897 0400 00       		.byte	0
 1898 0401 11       		.uleb128 0x11
 1899 0402 E8000000 		.4byte	.LVL16
 1900 0406 F9090000 		.4byte	0x9f9
 1901 040a 15040000 		.4byte	0x415
 1902 040e 12       		.uleb128 0x12
 1903 040f 01       		.uleb128 0x1
 1904 0410 50       		.byte	0x50
 1905 0411 02       		.uleb128 0x2
 1906 0412 75       		.byte	0x75
 1907 0413 00       		.sleb128 0
 1908 0414 00       		.byte	0
 1909 0415 11       		.uleb128 0x11
 1910 0416 F0000000 		.4byte	.LVL17
 1911 041a EE090000 		.4byte	0x9ee
 1912 041e 2D040000 		.4byte	0x42d
 1913 0422 12       		.uleb128 0x12
 1914 0423 01       		.uleb128 0x1
 1915 0424 50       		.byte	0x50
 1916 0425 01       		.uleb128 0x1
 1917 0426 33       		.byte	0x33
 1918 0427 12       		.uleb128 0x12
 1919 0428 01       		.uleb128 0x1
 1920 0429 51       		.byte	0x51
 1921 042a 01       		.uleb128 0x1
 1922 042b 37       		.byte	0x37
 1923 042c 00       		.byte	0
 1924 042d 11       		.uleb128 0x11
 1925 042e F8000000 		.4byte	.LVL18
 1926 0432 F9090000 		.4byte	0x9f9
 1927 0436 40040000 		.4byte	0x440
 1928 043a 12       		.uleb128 0x12
 1929 043b 01       		.uleb128 0x1
 1930 043c 50       		.byte	0x50
 1931 043d 01       		.uleb128 0x1
 1932 043e 33       		.byte	0x33
 1933 043f 00       		.byte	0
 1934 0440 11       		.uleb128 0x11
 1935 0441 00010000 		.4byte	.LVL19
 1936 0445 EE090000 		.4byte	0x9ee
 1937 0449 58040000 		.4byte	0x458
 1938 044d 12       		.uleb128 0x12
 1939 044e 01       		.uleb128 0x1
 1940 044f 50       		.byte	0x50
 1941 0450 01       		.uleb128 0x1
 1942 0451 34       		.byte	0x34
 1943 0452 12       		.uleb128 0x12
 1944 0453 01       		.uleb128 0x1
 1945 0454 51       		.byte	0x51
 1946 0455 01       		.uleb128 0x1
 1947 0456 37       		.byte	0x37
 1948 0457 00       		.byte	0
 1949 0458 11       		.uleb128 0x11
 1950 0459 08010000 		.4byte	.LVL20
 1951 045d F9090000 		.4byte	0x9f9
 1952 0461 6B040000 		.4byte	0x46b
 1953 0465 12       		.uleb128 0x12
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 80


 1954 0466 01       		.uleb128 0x1
 1955 0467 50       		.byte	0x50
 1956 0468 01       		.uleb128 0x1
 1957 0469 34       		.byte	0x34
 1958 046a 00       		.byte	0
 1959 046b 11       		.uleb128 0x11
 1960 046c 10010000 		.4byte	.LVL21
 1961 0470 EE090000 		.4byte	0x9ee
 1962 0474 83040000 		.4byte	0x483
 1963 0478 12       		.uleb128 0x12
 1964 0479 01       		.uleb128 0x1
 1965 047a 50       		.byte	0x50
 1966 047b 01       		.uleb128 0x1
 1967 047c 35       		.byte	0x35
 1968 047d 12       		.uleb128 0x12
 1969 047e 01       		.uleb128 0x1
 1970 047f 51       		.byte	0x51
 1971 0480 01       		.uleb128 0x1
 1972 0481 37       		.byte	0x37
 1973 0482 00       		.byte	0
 1974 0483 11       		.uleb128 0x11
 1975 0484 18010000 		.4byte	.LVL22
 1976 0488 F9090000 		.4byte	0x9f9
 1977 048c 96040000 		.4byte	0x496
 1978 0490 12       		.uleb128 0x12
 1979 0491 01       		.uleb128 0x1
 1980 0492 50       		.byte	0x50
 1981 0493 01       		.uleb128 0x1
 1982 0494 35       		.byte	0x35
 1983 0495 00       		.byte	0
 1984 0496 11       		.uleb128 0x11
 1985 0497 20010000 		.4byte	.LVL23
 1986 049b EE090000 		.4byte	0x9ee
 1987 049f AE040000 		.4byte	0x4ae
 1988 04a3 12       		.uleb128 0x12
 1989 04a4 01       		.uleb128 0x1
 1990 04a5 50       		.byte	0x50
 1991 04a6 01       		.uleb128 0x1
 1992 04a7 3C       		.byte	0x3c
 1993 04a8 12       		.uleb128 0x12
 1994 04a9 01       		.uleb128 0x1
 1995 04aa 51       		.byte	0x51
 1996 04ab 01       		.uleb128 0x1
 1997 04ac 37       		.byte	0x37
 1998 04ad 00       		.byte	0
 1999 04ae 13       		.uleb128 0x13
 2000 04af 28010000 		.4byte	.LVL24
 2001 04b3 F9090000 		.4byte	0x9f9
 2002 04b7 12       		.uleb128 0x12
 2003 04b8 01       		.uleb128 0x1
 2004 04b9 50       		.byte	0x50
 2005 04ba 01       		.uleb128 0x1
 2006 04bb 3C       		.byte	0x3c
 2007 04bc 00       		.byte	0
 2008 04bd 00       		.byte	0
 2009 04be 14       		.uleb128 0x14
 2010 04bf 76010000 		.4byte	.LASF48
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 81


 2011 04c3 01       		.byte	0x1
 2012 04c4 CC01     		.2byte	0x1cc
 2013 04c6 00000000 		.4byte	.LFB2
 2014 04ca D8000000 		.4byte	.LFE2-.LFB2
 2015 04ce 01       		.uleb128 0x1
 2016 04cf 9C       		.byte	0x9c
 2017 04d0 12050000 		.4byte	0x512
 2018 04d4 15       		.uleb128 0x15
 2019 04d5 EA010000 		.4byte	.LASF49
 2020 04d9 01       		.byte	0x1
 2021 04da CC01     		.2byte	0x1cc
 2022 04dc 6B000000 		.4byte	0x6b
 2023 04e0 13000000 		.4byte	.LLST1
 2024 04e4 15       		.uleb128 0x15
 2025 04e5 23010000 		.4byte	.LASF50
 2026 04e9 01       		.byte	0x1
 2027 04ea CC01     		.2byte	0x1cc
 2028 04ec 6B000000 		.4byte	0x6b
 2029 04f0 34000000 		.4byte	.LLST2
 2030 04f4 16       		.uleb128 0x16
 2031 04f5 6900     		.ascii	"i\000"
 2032 04f7 01       		.byte	0x1
 2033 04f8 D301     		.2byte	0x1d3
 2034 04fa 6B000000 		.4byte	0x6b
 2035 04fe 55000000 		.4byte	.LLST3
 2036 0502 13       		.uleb128 0x13
 2037 0503 9A000000 		.4byte	.LVL33
 2038 0507 040A0000 		.4byte	0xa04
 2039 050b 12       		.uleb128 0x12
 2040 050c 01       		.uleb128 0x1
 2041 050d 50       		.byte	0x50
 2042 050e 01       		.uleb128 0x1
 2043 050f 31       		.byte	0x31
 2044 0510 00       		.byte	0
 2045 0511 00       		.byte	0
 2046 0512 0E       		.uleb128 0xe
 2047 0513 2D050000 		.4byte	.LASF52
 2048 0517 01       		.byte	0x1
 2049 0518 BA       		.byte	0xba
 2050 0519 00000000 		.4byte	.LFB0
 2051 051d 24000000 		.4byte	.LFE0-.LFB0
 2052 0521 01       		.uleb128 0x1
 2053 0522 9C       		.byte	0x9c
 2054 0523 65050000 		.4byte	0x565
 2055 0527 17       		.uleb128 0x17
 2056 0528 EA010000 		.4byte	.LASF49
 2057 052c 01       		.byte	0x1
 2058 052d BA       		.byte	0xba
 2059 052e 6B000000 		.4byte	0x6b
 2060 0532 7F000000 		.4byte	.LLST4
 2061 0536 17       		.uleb128 0x17
 2062 0537 23010000 		.4byte	.LASF50
 2063 053b 01       		.byte	0x1
 2064 053c BA       		.byte	0xba
 2065 053d 6B000000 		.4byte	0x6b
 2066 0541 A0000000 		.4byte	.LLST5
 2067 0545 10       		.uleb128 0x10
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 82


 2068 0546 10000000 		.4byte	.LVL35
 2069 054a AA020000 		.4byte	0x2aa
 2070 054e 13       		.uleb128 0x13
 2071 054f 1E000000 		.4byte	.LVL36
 2072 0553 BE040000 		.4byte	0x4be
 2073 0557 12       		.uleb128 0x12
 2074 0558 01       		.uleb128 0x1
 2075 0559 50       		.byte	0x50
 2076 055a 02       		.uleb128 0x2
 2077 055b 74       		.byte	0x74
 2078 055c 00       		.sleb128 0
 2079 055d 12       		.uleb128 0x12
 2080 055e 01       		.uleb128 0x1
 2081 055f 51       		.byte	0x51
 2082 0560 02       		.uleb128 0x2
 2083 0561 75       		.byte	0x75
 2084 0562 00       		.sleb128 0
 2085 0563 00       		.byte	0
 2086 0564 00       		.byte	0
 2087 0565 14       		.uleb128 0x14
 2088 0566 0D010000 		.4byte	.LASF53
 2089 056a 01       		.byte	0x1
 2090 056b 9F02     		.2byte	0x29f
 2091 056d 00000000 		.4byte	.LFB3
 2092 0571 64000000 		.4byte	.LFE3-.LFB3
 2093 0575 01       		.uleb128 0x1
 2094 0576 9C       		.byte	0x9c
 2095 0577 8A050000 		.4byte	0x58a
 2096 057b 16       		.uleb128 0x16
 2097 057c 6900     		.ascii	"i\000"
 2098 057e 01       		.byte	0x1
 2099 057f A502     		.2byte	0x2a5
 2100 0581 6B000000 		.4byte	0x6b
 2101 0585 C1000000 		.4byte	.LLST6
 2102 0589 00       		.byte	0
 2103 058a 14       		.uleb128 0x14
 2104 058b 76000000 		.4byte	.LASF54
 2105 058f 01       		.byte	0x1
 2106 0590 D902     		.2byte	0x2d9
 2107 0592 00000000 		.4byte	.LFB4
 2108 0596 C0000000 		.4byte	.LFE4-.LFB4
 2109 059a 01       		.uleb128 0x1
 2110 059b 9C       		.byte	0x9c
 2111 059c CC050000 		.4byte	0x5cc
 2112 05a0 18       		.uleb128 0x18
 2113 05a1 15060000 		.4byte	.LASF51
 2114 05a5 01       		.byte	0x1
 2115 05a6 DB02     		.2byte	0x2db
 2116 05a8 6B000000 		.4byte	0x6b
 2117 05ac EB000000 		.4byte	.LLST7
 2118 05b0 10       		.uleb128 0x10
 2119 05b1 06000000 		.4byte	.LVL42
 2120 05b5 CD090000 		.4byte	0x9cd
 2121 05b9 10       		.uleb128 0x10
 2122 05ba 48000000 		.4byte	.LVL43
 2123 05be E3090000 		.4byte	0x9e3
 2124 05c2 10       		.uleb128 0x10
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 83


 2125 05c3 74000000 		.4byte	.LVL44
 2126 05c7 0F0A0000 		.4byte	0xa0f
 2127 05cb 00       		.byte	0
 2128 05cc 19       		.uleb128 0x19
 2129 05cd AF040000 		.4byte	.LASF56
 2130 05d1 01       		.byte	0x1
 2131 05d2 5103     		.2byte	0x351
 2132 05d4 6B000000 		.4byte	0x6b
 2133 05d8 00000000 		.4byte	.LFB5
 2134 05dc 20000000 		.4byte	.LFE5-.LFB5
 2135 05e0 01       		.uleb128 0x1
 2136 05e1 9C       		.byte	0x9c
 2137 05e2 F7050000 		.4byte	0x5f7
 2138 05e6 18       		.uleb128 0x18
 2139 05e7 F7030000 		.4byte	.LASF55
 2140 05eb 01       		.byte	0x1
 2141 05ec 5303     		.2byte	0x353
 2142 05ee 6B000000 		.4byte	0x6b
 2143 05f2 FE000000 		.4byte	.LLST8
 2144 05f6 00       		.byte	0
 2145 05f7 1A       		.uleb128 0x1a
 2146 05f8 5C020000 		.4byte	.LASF77
 2147 05fc 01       		.byte	0x1
 2148 05fd 6803     		.2byte	0x368
 2149 05ff 6B000000 		.4byte	0x6b
 2150 0603 00000000 		.4byte	.LFB6
 2151 0607 0C000000 		.4byte	.LFE6-.LFB6
 2152 060b 01       		.uleb128 0x1
 2153 060c 9C       		.byte	0x9c
 2154 060d 19       		.uleb128 0x19
 2155 060e D2040000 		.4byte	.LASF57
 2156 0612 01       		.byte	0x1
 2157 0613 8203     		.2byte	0x382
 2158 0615 6B000000 		.4byte	0x6b
 2159 0619 00000000 		.4byte	.LFB7
 2160 061d 20000000 		.4byte	.LFE7-.LFB7
 2161 0621 01       		.uleb128 0x1
 2162 0622 9C       		.byte	0x9c
 2163 0623 38060000 		.4byte	0x638
 2164 0627 16       		.uleb128 0x16
 2165 0628 72657300 		.ascii	"res\000"
 2166 062c 01       		.byte	0x1
 2167 062d 8403     		.2byte	0x384
 2168 062f 6B000000 		.4byte	0x6b
 2169 0633 11010000 		.4byte	.LLST9
 2170 0637 00       		.byte	0
 2171 0638 19       		.uleb128 0x19
 2172 0639 35040000 		.4byte	.LASF58
 2173 063d 01       		.byte	0x1
 2174 063e 9F03     		.2byte	0x39f
 2175 0640 6B000000 		.4byte	0x6b
 2176 0644 00000000 		.4byte	.LFB8
 2177 0648 0C000000 		.4byte	.LFE8-.LFB8
 2178 064c 01       		.uleb128 0x1
 2179 064d 9C       		.byte	0x9c
 2180 064e 63060000 		.4byte	0x663
 2181 0652 15       		.uleb128 0x15
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 84


 2182 0653 1F000000 		.4byte	.LASF59
 2183 0657 01       		.byte	0x1
 2184 0658 9F03     		.2byte	0x39f
 2185 065a 6B000000 		.4byte	0x6b
 2186 065e 47010000 		.4byte	.LLST10
 2187 0662 00       		.byte	0
 2188 0663 19       		.uleb128 0x19
 2189 0664 87020000 		.4byte	.LASF60
 2190 0668 01       		.byte	0x1
 2191 0669 BF03     		.2byte	0x3bf
 2192 066b 6B000000 		.4byte	0x6b
 2193 066f 00000000 		.4byte	.LFB9
 2194 0673 14000000 		.4byte	.LFE9-.LFB9
 2195 0677 01       		.uleb128 0x1
 2196 0678 9C       		.byte	0x9c
 2197 0679 8E060000 		.4byte	0x68e
 2198 067d 15       		.uleb128 0x15
 2199 067e AC030000 		.4byte	.LASF61
 2200 0682 01       		.byte	0x1
 2201 0683 BF03     		.2byte	0x3bf
 2202 0685 6B000000 		.4byte	0x6b
 2203 0689 68010000 		.4byte	.LLST11
 2204 068d 00       		.byte	0
 2205 068e 19       		.uleb128 0x19
 2206 068f 70030000 		.4byte	.LASF62
 2207 0693 01       		.byte	0x1
 2208 0694 D603     		.2byte	0x3d6
 2209 0696 77000000 		.4byte	0x77
 2210 069a 00000000 		.4byte	.LFB10
 2211 069e 28000000 		.4byte	.LFE10-.LFB10
 2212 06a2 01       		.uleb128 0x1
 2213 06a3 9C       		.byte	0x9c
 2214 06a4 C9060000 		.4byte	0x6c9
 2215 06a8 15       		.uleb128 0x15
 2216 06a9 AC030000 		.4byte	.LASF61
 2217 06ad 01       		.byte	0x1
 2218 06ae D603     		.2byte	0x3d6
 2219 06b0 6B000000 		.4byte	0x6b
 2220 06b4 89010000 		.4byte	.LLST12
 2221 06b8 18       		.uleb128 0x18
 2222 06b9 2F000000 		.4byte	.LASF63
 2223 06bd 01       		.byte	0x1
 2224 06be D803     		.2byte	0x3d8
 2225 06c0 77000000 		.4byte	0x77
 2226 06c4 C3010000 		.4byte	.LLST13
 2227 06c8 00       		.byte	0
 2228 06c9 14       		.uleb128 0x14
 2229 06ca 95040000 		.4byte	.LASF64
 2230 06ce 01       		.byte	0x1
 2231 06cf 3E05     		.2byte	0x53e
 2232 06d1 00000000 		.4byte	.LFB11
 2233 06d5 94000000 		.4byte	.LFE11-.LFB11
 2234 06d9 01       		.uleb128 0x1
 2235 06da 9C       		.byte	0x9c
 2236 06db 22070000 		.4byte	0x722
 2237 06df 15       		.uleb128 0x15
 2238 06e0 AC030000 		.4byte	.LASF61
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 85


 2239 06e4 01       		.byte	0x1
 2240 06e5 3E05     		.2byte	0x53e
 2241 06e7 6B000000 		.4byte	0x6b
 2242 06eb 11020000 		.4byte	.LLST14
 2243 06ef 1B       		.uleb128 0x1b
 2244 06f0 97000000 		.4byte	.LASF65
 2245 06f4 01       		.byte	0x1
 2246 06f5 3E05     		.2byte	0x53e
 2247 06f7 22070000 		.4byte	0x722
 2248 06fb 01       		.uleb128 0x1
 2249 06fc 51       		.byte	0x51
 2250 06fd 15       		.uleb128 0x15
 2251 06fe E3010000 		.4byte	.LASF66
 2252 0702 01       		.byte	0x1
 2253 0703 3E05     		.2byte	0x53e
 2254 0705 77000000 		.4byte	0x77
 2255 0709 32020000 		.4byte	.LLST15
 2256 070d 1C       		.uleb128 0x1c
 2257 070e 00000000 		.4byte	.Ldebug_ranges0+0
 2258 0712 16       		.uleb128 0x16
 2259 0713 6900     		.ascii	"i\000"
 2260 0715 01       		.byte	0x1
 2261 0716 5305     		.2byte	0x553
 2262 0718 77000000 		.4byte	0x77
 2263 071c 5E020000 		.4byte	.LLST16
 2264 0720 00       		.byte	0
 2265 0721 00       		.byte	0
 2266 0722 1D       		.uleb128 0x1d
 2267 0723 04       		.byte	0x4
 2268 0724 28070000 		.4byte	0x728
 2269 0728 1E       		.uleb128 0x1e
 2270 0729 6B000000 		.4byte	0x6b
 2271 072d 14       		.uleb128 0x14
 2272 072e 83040000 		.4byte	.LASF67
 2273 0732 01       		.byte	0x1
 2274 0733 E408     		.2byte	0x8e4
 2275 0735 00000000 		.4byte	.LFB13
 2276 0739 2C000000 		.4byte	.LFE13-.LFB13
 2277 073d 01       		.uleb128 0x1
 2278 073e 9C       		.byte	0x9c
 2279 073f 54070000 		.4byte	0x754
 2280 0743 15       		.uleb128 0x15
 2281 0744 AC030000 		.4byte	.LASF61
 2282 0748 01       		.byte	0x1
 2283 0749 E408     		.2byte	0x8e4
 2284 074b 6B000000 		.4byte	0x6b
 2285 074f 87020000 		.4byte	.LLST17
 2286 0753 00       		.byte	0
 2287 0754 19       		.uleb128 0x19
 2288 0755 AD020000 		.4byte	.LASF68
 2289 0759 01       		.byte	0x1
 2290 075a 7506     		.2byte	0x675
 2291 075c 77000000 		.4byte	0x77
 2292 0760 00000000 		.4byte	.LFB12
 2293 0764 50000000 		.4byte	.LFE12-.LFB12
 2294 0768 01       		.uleb128 0x1
 2295 0769 9C       		.byte	0x9c
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 86


 2296 076a F3070000 		.4byte	0x7f3
 2297 076e 15       		.uleb128 0x15
 2298 076f AC030000 		.4byte	.LASF61
 2299 0773 01       		.byte	0x1
 2300 0774 7506     		.2byte	0x675
 2301 0776 6B000000 		.4byte	0x6b
 2302 077a A8020000 		.4byte	.LLST18
 2303 077e 15       		.uleb128 0x15
 2304 077f 97000000 		.4byte	.LASF65
 2305 0783 01       		.byte	0x1
 2306 0784 7506     		.2byte	0x675
 2307 0786 F3070000 		.4byte	0x7f3
 2308 078a E2020000 		.4byte	.LLST19
 2309 078e 15       		.uleb128 0x15
 2310 078f E3010000 		.4byte	.LASF66
 2311 0793 01       		.byte	0x1
 2312 0794 7506     		.2byte	0x675
 2313 0796 77000000 		.4byte	0x77
 2314 079a 19030000 		.4byte	.LLST20
 2315 079e 1F       		.uleb128 0x1f
 2316 079f 20000000 		.4byte	.LBB4
 2317 07a3 14000000 		.4byte	.LBE4-.LBB4
 2318 07a7 BA070000 		.4byte	0x7ba
 2319 07ab 16       		.uleb128 0x16
 2320 07ac 6900     		.ascii	"i\000"
 2321 07ae 01       		.byte	0x1
 2322 07af 8206     		.2byte	0x682
 2323 07b1 77000000 		.4byte	0x77
 2324 07b5 5B030000 		.4byte	.LLST21
 2325 07b9 00       		.byte	0
 2326 07ba 11       		.uleb128 0x11
 2327 07bb 14000000 		.4byte	.LVL77
 2328 07bf 8E060000 		.4byte	0x68e
 2329 07c3 CE070000 		.4byte	0x7ce
 2330 07c7 12       		.uleb128 0x12
 2331 07c8 01       		.uleb128 0x1
 2332 07c9 50       		.byte	0x50
 2333 07ca 02       		.uleb128 0x2
 2334 07cb 75       		.byte	0x75
 2335 07cc 00       		.sleb128 0
 2336 07cd 00       		.byte	0
 2337 07ce 11       		.uleb128 0x11
 2338 07cf 1E000000 		.4byte	.LVL78
 2339 07d3 8E060000 		.4byte	0x68e
 2340 07d7 E2070000 		.4byte	0x7e2
 2341 07db 12       		.uleb128 0x12
 2342 07dc 01       		.uleb128 0x1
 2343 07dd 50       		.byte	0x50
 2344 07de 02       		.uleb128 0x2
 2345 07df 75       		.byte	0x75
 2346 07e0 00       		.sleb128 0
 2347 07e1 00       		.byte	0
 2348 07e2 13       		.uleb128 0x13
 2349 07e3 3A000000 		.4byte	.LVL83
 2350 07e7 2D070000 		.4byte	0x72d
 2351 07eb 12       		.uleb128 0x12
 2352 07ec 01       		.uleb128 0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 87


 2353 07ed 50       		.byte	0x50
 2354 07ee 02       		.uleb128 0x2
 2355 07ef 75       		.byte	0x75
 2356 07f0 00       		.sleb128 0
 2357 07f1 00       		.byte	0
 2358 07f2 00       		.byte	0
 2359 07f3 1D       		.uleb128 0x1d
 2360 07f4 04       		.byte	0x4
 2361 07f5 6B000000 		.4byte	0x6b
 2362 07f9 14       		.uleb128 0x14
 2363 07fa EF040000 		.4byte	.LASF69
 2364 07fe 01       		.byte	0x1
 2365 07ff FC08     		.2byte	0x8fc
 2366 0801 00000000 		.4byte	.LFB14
 2367 0805 18000000 		.4byte	.LFE14-.LFB14
 2368 0809 01       		.uleb128 0x1
 2369 080a 9C       		.byte	0x9c
 2370 080b 20080000 		.4byte	0x820
 2371 080f 15       		.uleb128 0x15
 2372 0810 AC030000 		.4byte	.LASF61
 2373 0814 01       		.byte	0x1
 2374 0815 FC08     		.2byte	0x8fc
 2375 0817 6B000000 		.4byte	0x6b
 2376 081b 85030000 		.4byte	.LLST22
 2377 081f 00       		.byte	0
 2378 0820 14       		.uleb128 0x14
 2379 0821 42000000 		.4byte	.LASF70
 2380 0825 01       		.byte	0x1
 2381 0826 1A09     		.2byte	0x91a
 2382 0828 00000000 		.4byte	.LFB15
 2383 082c 0C000000 		.4byte	.LFE15-.LFB15
 2384 0830 01       		.uleb128 0x1
 2385 0831 9C       		.byte	0x9c
 2386 0832 45080000 		.4byte	0x845
 2387 0836 1B       		.uleb128 0x1b
 2388 0837 E2050000 		.4byte	.LASF71
 2389 083b 01       		.byte	0x1
 2390 083c 1A09     		.2byte	0x91a
 2391 083e 6B000000 		.4byte	0x6b
 2392 0842 01       		.uleb128 0x1
 2393 0843 50       		.byte	0x50
 2394 0844 00       		.byte	0
 2395 0845 19       		.uleb128 0x19
 2396 0846 73020000 		.4byte	.LASF72
 2397 084a 01       		.byte	0x1
 2398 084b 3309     		.2byte	0x933
 2399 084d 6B000000 		.4byte	0x6b
 2400 0851 00000000 		.4byte	.LFB16
 2401 0855 20000000 		.4byte	.LFE16-.LFB16
 2402 0859 01       		.uleb128 0x1
 2403 085a 9C       		.byte	0x9c
 2404 085b 7F080000 		.4byte	0x87f
 2405 085f 15       		.uleb128 0x15
 2406 0860 AC030000 		.4byte	.LASF61
 2407 0864 01       		.byte	0x1
 2408 0865 3309     		.2byte	0x933
 2409 0867 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 88


 2410 086b A6030000 		.4byte	.LLST23
 2411 086f 16       		.uleb128 0x16
 2412 0870 637200   		.ascii	"cr\000"
 2413 0873 01       		.byte	0x1
 2414 0874 3509     		.2byte	0x935
 2415 0876 6B000000 		.4byte	0x6b
 2416 087a E0030000 		.4byte	.LLST24
 2417 087e 00       		.byte	0
 2418 087f 14       		.uleb128 0x14
 2419 0880 A5000000 		.4byte	.LASF73
 2420 0884 01       		.byte	0x1
 2421 0885 5C09     		.2byte	0x95c
 2422 0887 00000000 		.4byte	.LFB17
 2423 088b 20000000 		.4byte	.LFE17-.LFB17
 2424 088f 01       		.uleb128 0x1
 2425 0890 9C       		.byte	0x9c
 2426 0891 A4080000 		.4byte	0x8a4
 2427 0895 1B       		.uleb128 0x1b
 2428 0896 F5000000 		.4byte	.LASF74
 2429 089a 01       		.byte	0x1
 2430 089b 5C09     		.2byte	0x95c
 2431 089d 6B000000 		.4byte	0x6b
 2432 08a1 01       		.uleb128 0x1
 2433 08a2 50       		.byte	0x50
 2434 08a3 00       		.byte	0
 2435 08a4 19       		.uleb128 0x19
 2436 08a5 02050000 		.4byte	.LASF75
 2437 08a9 01       		.byte	0x1
 2438 08aa 9509     		.2byte	0x995
 2439 08ac 6B000000 		.4byte	0x6b
 2440 08b0 00000000 		.4byte	.LFB18
 2441 08b4 18000000 		.4byte	.LFE18-.LFB18
 2442 08b8 01       		.uleb128 0x1
 2443 08b9 9C       		.byte	0x9c
 2444 08ba CF080000 		.4byte	0x8cf
 2445 08be 18       		.uleb128 0x18
 2446 08bf 41020000 		.4byte	.LASF76
 2447 08c3 01       		.byte	0x1
 2448 08c4 9709     		.2byte	0x997
 2449 08c6 6B000000 		.4byte	0x6b
 2450 08ca 16040000 		.4byte	.LLST25
 2451 08ce 00       		.byte	0
 2452 08cf 1A       		.uleb128 0x1a
 2453 08d0 26060000 		.4byte	.LASF78
 2454 08d4 01       		.byte	0x1
 2455 08d5 AD09     		.2byte	0x9ad
 2456 08d7 6B000000 		.4byte	0x6b
 2457 08db 00000000 		.4byte	.LFB19
 2458 08df 10000000 		.4byte	.LFE19-.LFB19
 2459 08e3 01       		.uleb128 0x1
 2460 08e4 9C       		.byte	0x9c
 2461 08e5 20       		.uleb128 0x20
 2462 08e6 4E000000 		.4byte	.LASF79
 2463 08ea 01       		.byte	0x1
 2464 08eb BB09     		.2byte	0x9bb
 2465 08ed 00000000 		.4byte	.LFB20
 2466 08f1 10000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 89


 2467 08f5 01       		.uleb128 0x1
 2468 08f6 9C       		.byte	0x9c
 2469 08f7 20       		.uleb128 0x20
 2470 08f8 17040000 		.4byte	.LASF80
 2471 08fc 01       		.byte	0x1
 2472 08fd D109     		.2byte	0x9d1
 2473 08ff 00000000 		.4byte	.LFB21
 2474 0903 10000000 		.4byte	.LFE21-.LFB21
 2475 0907 01       		.uleb128 0x1
 2476 0908 9C       		.byte	0x9c
 2477 0909 21       		.uleb128 0x21
 2478 090a 34000000 		.4byte	.LASF81
 2479 090e 01       		.byte	0x1
 2480 090f 28       		.byte	0x28
 2481 0910 6B000000 		.4byte	0x6b
 2482 0914 05       		.uleb128 0x5
 2483 0915 03       		.byte	0x3
 2484 0916 00000000 		.4byte	USBFS_initVar
 2485 091a 22       		.uleb128 0x22
 2486 091b 6D040000 		.4byte	.LASF82
 2487 091f 03       		.byte	0x3
 2488 0920 DA02     		.2byte	0x2da
 2489 0922 B0000000 		.4byte	0xb0
 2490 0926 22       		.uleb128 0x22
 2491 0927 51010000 		.4byte	.LASF83
 2492 092b 03       		.byte	0x3
 2493 092c DB02     		.2byte	0x2db
 2494 092e B0000000 		.4byte	0xb0
 2495 0932 22       		.uleb128 0x22
 2496 0933 D2020000 		.4byte	.LASF84
 2497 0937 03       		.byte	0x3
 2498 0938 DC02     		.2byte	0x2dc
 2499 093a B0000000 		.4byte	0xb0
 2500 093e 22       		.uleb128 0x22
 2501 093f C4000000 		.4byte	.LASF85
 2502 0943 03       		.byte	0x3
 2503 0944 DD02     		.2byte	0x2dd
 2504 0946 B0000000 		.4byte	0xb0
 2505 094a 22       		.uleb128 0x22
 2506 094b 1A050000 		.4byte	.LASF86
 2507 094f 03       		.byte	0x3
 2508 0950 DE02     		.2byte	0x2de
 2509 0952 B0000000 		.4byte	0xb0
 2510 0956 0A       		.uleb128 0xa
 2511 0957 B0000000 		.4byte	0xb0
 2512 095b 66090000 		.4byte	0x966
 2513 095f 0B       		.uleb128 0xb
 2514 0960 CD000000 		.4byte	0xcd
 2515 0964 02       		.byte	0x2
 2516 0965 00       		.byte	0
 2517 0966 22       		.uleb128 0x22
 2518 0967 05040000 		.4byte	.LASF87
 2519 096b 03       		.byte	0x3
 2520 096c E702     		.2byte	0x2e7
 2521 096e 72090000 		.4byte	0x972
 2522 0972 05       		.uleb128 0x5
 2523 0973 56090000 		.4byte	0x956
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 90


 2524 0977 23       		.uleb128 0x23
 2525 0978 00000000 		.4byte	.LASF88
 2526 097c 04       		.byte	0x4
 2527 097d 7D       		.byte	0x7d
 2528 097e B0000000 		.4byte	0xb0
 2529 0982 23       		.uleb128 0x23
 2530 0983 FE050000 		.4byte	.LASF89
 2531 0987 04       		.byte	0x4
 2532 0988 7E       		.byte	0x7e
 2533 0989 8D090000 		.4byte	0x98d
 2534 098d 05       		.uleb128 0x5
 2535 098e 56090000 		.4byte	0x956
 2536 0992 23       		.uleb128 0x23
 2537 0993 48020000 		.4byte	.LASF90
 2538 0997 04       		.byte	0x4
 2539 0998 80       		.byte	0x80
 2540 0999 B0000000 		.4byte	0xb0
 2541 099d 0A       		.uleb128 0xa
 2542 099e AD090000 		.4byte	0x9ad
 2543 09a2 AD090000 		.4byte	0x9ad
 2544 09a6 0B       		.uleb128 0xb
 2545 09a7 CD000000 		.4byte	0xcd
 2546 09ab 08       		.byte	0x8
 2547 09ac 00       		.byte	0
 2548 09ad 05       		.uleb128 0x5
 2549 09ae 49010000 		.4byte	0x149
 2550 09b2 23       		.uleb128 0x23
 2551 09b3 7A040000 		.4byte	.LASF91
 2552 09b7 04       		.byte	0x4
 2553 09b8 84       		.byte	0x84
 2554 09b9 BD090000 		.4byte	0x9bd
 2555 09bd 05       		.uleb128 0x5
 2556 09be 9D090000 		.4byte	0x99d
 2557 09c2 23       		.uleb128 0x23
 2558 09c3 E9050000 		.4byte	.LASF92
 2559 09c7 04       		.byte	0x4
 2560 09c8 A6       		.byte	0xa6
 2561 09c9 B0000000 		.4byte	0xb0
 2562 09cd 24       		.uleb128 0x24
 2563 09ce B5030000 		.4byte	.LASF93
 2564 09d2 B5030000 		.4byte	.LASF93
 2565 09d6 05       		.byte	0x5
 2566 09d7 7D       		.byte	0x7d
 2567 09d8 24       		.uleb128 0x24
 2568 09d9 19030000 		.4byte	.LASF94
 2569 09dd 19030000 		.4byte	.LASF94
 2570 09e1 05       		.byte	0x5
 2571 09e2 77       		.byte	0x77
 2572 09e3 24       		.uleb128 0x24
 2573 09e4 81000000 		.4byte	.LASF95
 2574 09e8 81000000 		.4byte	.LASF95
 2575 09ec 05       		.byte	0x5
 2576 09ed 7E       		.byte	0x7e
 2577 09ee 24       		.uleb128 0x24
 2578 09ef 65010000 		.4byte	.LASF96
 2579 09f3 65010000 		.4byte	.LASF96
 2580 09f7 05       		.byte	0x5
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 91


 2581 09f8 8B       		.byte	0x8b
 2582 09f9 24       		.uleb128 0x24
 2583 09fa C3040000 		.4byte	.LASF97
 2584 09fe C3040000 		.4byte	.LASF97
 2585 0a02 05       		.byte	0x5
 2586 0a03 88       		.byte	0x88
 2587 0a04 24       		.uleb128 0x24
 2588 0a05 52030000 		.4byte	.LASF98
 2589 0a09 52030000 		.4byte	.LASF98
 2590 0a0d 05       		.byte	0x5
 2591 0a0e 79       		.byte	0x79
 2592 0a0f 24       		.uleb128 0x24
 2593 0a10 23030000 		.4byte	.LASF99
 2594 0a14 23030000 		.4byte	.LASF99
 2595 0a18 06       		.byte	0x6
 2596 0a19 2B       		.byte	0x2b
 2597 0a1a 00       		.byte	0
 2598              		.section	.debug_abbrev,"",%progbits
 2599              	.Ldebug_abbrev0:
 2600 0000 01       		.uleb128 0x1
 2601 0001 11       		.uleb128 0x11
 2602 0002 01       		.byte	0x1
 2603 0003 25       		.uleb128 0x25
 2604 0004 0E       		.uleb128 0xe
 2605 0005 13       		.uleb128 0x13
 2606 0006 0B       		.uleb128 0xb
 2607 0007 03       		.uleb128 0x3
 2608 0008 0E       		.uleb128 0xe
 2609 0009 1B       		.uleb128 0x1b
 2610 000a 0E       		.uleb128 0xe
 2611 000b 55       		.uleb128 0x55
 2612 000c 17       		.uleb128 0x17
 2613 000d 11       		.uleb128 0x11
 2614 000e 01       		.uleb128 0x1
 2615 000f 10       		.uleb128 0x10
 2616 0010 17       		.uleb128 0x17
 2617 0011 00       		.byte	0
 2618 0012 00       		.byte	0
 2619 0013 02       		.uleb128 0x2
 2620 0014 24       		.uleb128 0x24
 2621 0015 00       		.byte	0
 2622 0016 0B       		.uleb128 0xb
 2623 0017 0B       		.uleb128 0xb
 2624 0018 3E       		.uleb128 0x3e
 2625 0019 0B       		.uleb128 0xb
 2626 001a 03       		.uleb128 0x3
 2627 001b 0E       		.uleb128 0xe
 2628 001c 00       		.byte	0
 2629 001d 00       		.byte	0
 2630 001e 03       		.uleb128 0x3
 2631 001f 24       		.uleb128 0x24
 2632 0020 00       		.byte	0
 2633 0021 0B       		.uleb128 0xb
 2634 0022 0B       		.uleb128 0xb
 2635 0023 3E       		.uleb128 0x3e
 2636 0024 0B       		.uleb128 0xb
 2637 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 92


 2638 0026 08       		.uleb128 0x8
 2639 0027 00       		.byte	0
 2640 0028 00       		.byte	0
 2641 0029 04       		.uleb128 0x4
 2642 002a 16       		.uleb128 0x16
 2643 002b 00       		.byte	0
 2644 002c 03       		.uleb128 0x3
 2645 002d 0E       		.uleb128 0xe
 2646 002e 3A       		.uleb128 0x3a
 2647 002f 0B       		.uleb128 0xb
 2648 0030 3B       		.uleb128 0x3b
 2649 0031 05       		.uleb128 0x5
 2650 0032 49       		.uleb128 0x49
 2651 0033 13       		.uleb128 0x13
 2652 0034 00       		.byte	0
 2653 0035 00       		.byte	0
 2654 0036 05       		.uleb128 0x5
 2655 0037 35       		.uleb128 0x35
 2656 0038 00       		.byte	0
 2657 0039 49       		.uleb128 0x49
 2658 003a 13       		.uleb128 0x13
 2659 003b 00       		.byte	0
 2660 003c 00       		.byte	0
 2661 003d 06       		.uleb128 0x6
 2662 003e 13       		.uleb128 0x13
 2663 003f 01       		.byte	0x1
 2664 0040 0B       		.uleb128 0xb
 2665 0041 0B       		.uleb128 0xb
 2666 0042 3A       		.uleb128 0x3a
 2667 0043 0B       		.uleb128 0xb
 2668 0044 3B       		.uleb128 0x3b
 2669 0045 0B       		.uleb128 0xb
 2670 0046 01       		.uleb128 0x1
 2671 0047 13       		.uleb128 0x13
 2672 0048 00       		.byte	0
 2673 0049 00       		.byte	0
 2674 004a 07       		.uleb128 0x7
 2675 004b 0D       		.uleb128 0xd
 2676 004c 00       		.byte	0
 2677 004d 03       		.uleb128 0x3
 2678 004e 0E       		.uleb128 0xe
 2679 004f 3A       		.uleb128 0x3a
 2680 0050 0B       		.uleb128 0xb
 2681 0051 3B       		.uleb128 0x3b
 2682 0052 0B       		.uleb128 0xb
 2683 0053 49       		.uleb128 0x49
 2684 0054 13       		.uleb128 0x13
 2685 0055 38       		.uleb128 0x38
 2686 0056 0B       		.uleb128 0xb
 2687 0057 00       		.byte	0
 2688 0058 00       		.byte	0
 2689 0059 08       		.uleb128 0x8
 2690 005a 16       		.uleb128 0x16
 2691 005b 00       		.byte	0
 2692 005c 03       		.uleb128 0x3
 2693 005d 0E       		.uleb128 0xe
 2694 005e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 93


 2695 005f 0B       		.uleb128 0xb
 2696 0060 3B       		.uleb128 0x3b
 2697 0061 0B       		.uleb128 0xb
 2698 0062 49       		.uleb128 0x49
 2699 0063 13       		.uleb128 0x13
 2700 0064 00       		.byte	0
 2701 0065 00       		.byte	0
 2702 0066 09       		.uleb128 0x9
 2703 0067 0D       		.uleb128 0xd
 2704 0068 00       		.byte	0
 2705 0069 03       		.uleb128 0x3
 2706 006a 08       		.uleb128 0x8
 2707 006b 3A       		.uleb128 0x3a
 2708 006c 0B       		.uleb128 0xb
 2709 006d 3B       		.uleb128 0x3b
 2710 006e 0B       		.uleb128 0xb
 2711 006f 49       		.uleb128 0x49
 2712 0070 13       		.uleb128 0x13
 2713 0071 38       		.uleb128 0x38
 2714 0072 0B       		.uleb128 0xb
 2715 0073 00       		.byte	0
 2716 0074 00       		.byte	0
 2717 0075 0A       		.uleb128 0xa
 2718 0076 01       		.uleb128 0x1
 2719 0077 01       		.byte	0x1
 2720 0078 49       		.uleb128 0x49
 2721 0079 13       		.uleb128 0x13
 2722 007a 01       		.uleb128 0x1
 2723 007b 13       		.uleb128 0x13
 2724 007c 00       		.byte	0
 2725 007d 00       		.byte	0
 2726 007e 0B       		.uleb128 0xb
 2727 007f 21       		.uleb128 0x21
 2728 0080 00       		.byte	0
 2729 0081 49       		.uleb128 0x49
 2730 0082 13       		.uleb128 0x13
 2731 0083 2F       		.uleb128 0x2f
 2732 0084 0B       		.uleb128 0xb
 2733 0085 00       		.byte	0
 2734 0086 00       		.byte	0
 2735 0087 0C       		.uleb128 0xc
 2736 0088 13       		.uleb128 0x13
 2737 0089 01       		.byte	0x1
 2738 008a 0B       		.uleb128 0xb
 2739 008b 0B       		.uleb128 0xb
 2740 008c 3A       		.uleb128 0x3a
 2741 008d 0B       		.uleb128 0xb
 2742 008e 3B       		.uleb128 0x3b
 2743 008f 05       		.uleb128 0x5
 2744 0090 01       		.uleb128 0x1
 2745 0091 13       		.uleb128 0x13
 2746 0092 00       		.byte	0
 2747 0093 00       		.byte	0
 2748 0094 0D       		.uleb128 0xd
 2749 0095 0D       		.uleb128 0xd
 2750 0096 00       		.byte	0
 2751 0097 03       		.uleb128 0x3
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 94


 2752 0098 0E       		.uleb128 0xe
 2753 0099 3A       		.uleb128 0x3a
 2754 009a 0B       		.uleb128 0xb
 2755 009b 3B       		.uleb128 0x3b
 2756 009c 05       		.uleb128 0x5
 2757 009d 49       		.uleb128 0x49
 2758 009e 13       		.uleb128 0x13
 2759 009f 38       		.uleb128 0x38
 2760 00a0 0B       		.uleb128 0xb
 2761 00a1 00       		.byte	0
 2762 00a2 00       		.byte	0
 2763 00a3 0E       		.uleb128 0xe
 2764 00a4 2E       		.uleb128 0x2e
 2765 00a5 01       		.byte	0x1
 2766 00a6 3F       		.uleb128 0x3f
 2767 00a7 19       		.uleb128 0x19
 2768 00a8 03       		.uleb128 0x3
 2769 00a9 0E       		.uleb128 0xe
 2770 00aa 3A       		.uleb128 0x3a
 2771 00ab 0B       		.uleb128 0xb
 2772 00ac 3B       		.uleb128 0x3b
 2773 00ad 0B       		.uleb128 0xb
 2774 00ae 27       		.uleb128 0x27
 2775 00af 19       		.uleb128 0x19
 2776 00b0 11       		.uleb128 0x11
 2777 00b1 01       		.uleb128 0x1
 2778 00b2 12       		.uleb128 0x12
 2779 00b3 06       		.uleb128 0x6
 2780 00b4 40       		.uleb128 0x40
 2781 00b5 18       		.uleb128 0x18
 2782 00b6 9742     		.uleb128 0x2117
 2783 00b8 19       		.uleb128 0x19
 2784 00b9 01       		.uleb128 0x1
 2785 00ba 13       		.uleb128 0x13
 2786 00bb 00       		.byte	0
 2787 00bc 00       		.byte	0
 2788 00bd 0F       		.uleb128 0xf
 2789 00be 34       		.uleb128 0x34
 2790 00bf 00       		.byte	0
 2791 00c0 03       		.uleb128 0x3
 2792 00c1 0E       		.uleb128 0xe
 2793 00c2 3A       		.uleb128 0x3a
 2794 00c3 0B       		.uleb128 0xb
 2795 00c4 3B       		.uleb128 0x3b
 2796 00c5 0B       		.uleb128 0xb
 2797 00c6 49       		.uleb128 0x49
 2798 00c7 13       		.uleb128 0x13
 2799 00c8 02       		.uleb128 0x2
 2800 00c9 17       		.uleb128 0x17
 2801 00ca 00       		.byte	0
 2802 00cb 00       		.byte	0
 2803 00cc 10       		.uleb128 0x10
 2804 00cd 898201   		.uleb128 0x4109
 2805 00d0 00       		.byte	0
 2806 00d1 11       		.uleb128 0x11
 2807 00d2 01       		.uleb128 0x1
 2808 00d3 31       		.uleb128 0x31
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 95


 2809 00d4 13       		.uleb128 0x13
 2810 00d5 00       		.byte	0
 2811 00d6 00       		.byte	0
 2812 00d7 11       		.uleb128 0x11
 2813 00d8 898201   		.uleb128 0x4109
 2814 00db 01       		.byte	0x1
 2815 00dc 11       		.uleb128 0x11
 2816 00dd 01       		.uleb128 0x1
 2817 00de 31       		.uleb128 0x31
 2818 00df 13       		.uleb128 0x13
 2819 00e0 01       		.uleb128 0x1
 2820 00e1 13       		.uleb128 0x13
 2821 00e2 00       		.byte	0
 2822 00e3 00       		.byte	0
 2823 00e4 12       		.uleb128 0x12
 2824 00e5 8A8201   		.uleb128 0x410a
 2825 00e8 00       		.byte	0
 2826 00e9 02       		.uleb128 0x2
 2827 00ea 18       		.uleb128 0x18
 2828 00eb 9142     		.uleb128 0x2111
 2829 00ed 18       		.uleb128 0x18
 2830 00ee 00       		.byte	0
 2831 00ef 00       		.byte	0
 2832 00f0 13       		.uleb128 0x13
 2833 00f1 898201   		.uleb128 0x4109
 2834 00f4 01       		.byte	0x1
 2835 00f5 11       		.uleb128 0x11
 2836 00f6 01       		.uleb128 0x1
 2837 00f7 31       		.uleb128 0x31
 2838 00f8 13       		.uleb128 0x13
 2839 00f9 00       		.byte	0
 2840 00fa 00       		.byte	0
 2841 00fb 14       		.uleb128 0x14
 2842 00fc 2E       		.uleb128 0x2e
 2843 00fd 01       		.byte	0x1
 2844 00fe 3F       		.uleb128 0x3f
 2845 00ff 19       		.uleb128 0x19
 2846 0100 03       		.uleb128 0x3
 2847 0101 0E       		.uleb128 0xe
 2848 0102 3A       		.uleb128 0x3a
 2849 0103 0B       		.uleb128 0xb
 2850 0104 3B       		.uleb128 0x3b
 2851 0105 05       		.uleb128 0x5
 2852 0106 27       		.uleb128 0x27
 2853 0107 19       		.uleb128 0x19
 2854 0108 11       		.uleb128 0x11
 2855 0109 01       		.uleb128 0x1
 2856 010a 12       		.uleb128 0x12
 2857 010b 06       		.uleb128 0x6
 2858 010c 40       		.uleb128 0x40
 2859 010d 18       		.uleb128 0x18
 2860 010e 9742     		.uleb128 0x2117
 2861 0110 19       		.uleb128 0x19
 2862 0111 01       		.uleb128 0x1
 2863 0112 13       		.uleb128 0x13
 2864 0113 00       		.byte	0
 2865 0114 00       		.byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 96


 2866 0115 15       		.uleb128 0x15
 2867 0116 05       		.uleb128 0x5
 2868 0117 00       		.byte	0
 2869 0118 03       		.uleb128 0x3
 2870 0119 0E       		.uleb128 0xe
 2871 011a 3A       		.uleb128 0x3a
 2872 011b 0B       		.uleb128 0xb
 2873 011c 3B       		.uleb128 0x3b
 2874 011d 05       		.uleb128 0x5
 2875 011e 49       		.uleb128 0x49
 2876 011f 13       		.uleb128 0x13
 2877 0120 02       		.uleb128 0x2
 2878 0121 17       		.uleb128 0x17
 2879 0122 00       		.byte	0
 2880 0123 00       		.byte	0
 2881 0124 16       		.uleb128 0x16
 2882 0125 34       		.uleb128 0x34
 2883 0126 00       		.byte	0
 2884 0127 03       		.uleb128 0x3
 2885 0128 08       		.uleb128 0x8
 2886 0129 3A       		.uleb128 0x3a
 2887 012a 0B       		.uleb128 0xb
 2888 012b 3B       		.uleb128 0x3b
 2889 012c 05       		.uleb128 0x5
 2890 012d 49       		.uleb128 0x49
 2891 012e 13       		.uleb128 0x13
 2892 012f 02       		.uleb128 0x2
 2893 0130 17       		.uleb128 0x17
 2894 0131 00       		.byte	0
 2895 0132 00       		.byte	0
 2896 0133 17       		.uleb128 0x17
 2897 0134 05       		.uleb128 0x5
 2898 0135 00       		.byte	0
 2899 0136 03       		.uleb128 0x3
 2900 0137 0E       		.uleb128 0xe
 2901 0138 3A       		.uleb128 0x3a
 2902 0139 0B       		.uleb128 0xb
 2903 013a 3B       		.uleb128 0x3b
 2904 013b 0B       		.uleb128 0xb
 2905 013c 49       		.uleb128 0x49
 2906 013d 13       		.uleb128 0x13
 2907 013e 02       		.uleb128 0x2
 2908 013f 17       		.uleb128 0x17
 2909 0140 00       		.byte	0
 2910 0141 00       		.byte	0
 2911 0142 18       		.uleb128 0x18
 2912 0143 34       		.uleb128 0x34
 2913 0144 00       		.byte	0
 2914 0145 03       		.uleb128 0x3
 2915 0146 0E       		.uleb128 0xe
 2916 0147 3A       		.uleb128 0x3a
 2917 0148 0B       		.uleb128 0xb
 2918 0149 3B       		.uleb128 0x3b
 2919 014a 05       		.uleb128 0x5
 2920 014b 49       		.uleb128 0x49
 2921 014c 13       		.uleb128 0x13
 2922 014d 02       		.uleb128 0x2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 97


 2923 014e 17       		.uleb128 0x17
 2924 014f 00       		.byte	0
 2925 0150 00       		.byte	0
 2926 0151 19       		.uleb128 0x19
 2927 0152 2E       		.uleb128 0x2e
 2928 0153 01       		.byte	0x1
 2929 0154 3F       		.uleb128 0x3f
 2930 0155 19       		.uleb128 0x19
 2931 0156 03       		.uleb128 0x3
 2932 0157 0E       		.uleb128 0xe
 2933 0158 3A       		.uleb128 0x3a
 2934 0159 0B       		.uleb128 0xb
 2935 015a 3B       		.uleb128 0x3b
 2936 015b 05       		.uleb128 0x5
 2937 015c 27       		.uleb128 0x27
 2938 015d 19       		.uleb128 0x19
 2939 015e 49       		.uleb128 0x49
 2940 015f 13       		.uleb128 0x13
 2941 0160 11       		.uleb128 0x11
 2942 0161 01       		.uleb128 0x1
 2943 0162 12       		.uleb128 0x12
 2944 0163 06       		.uleb128 0x6
 2945 0164 40       		.uleb128 0x40
 2946 0165 18       		.uleb128 0x18
 2947 0166 9742     		.uleb128 0x2117
 2948 0168 19       		.uleb128 0x19
 2949 0169 01       		.uleb128 0x1
 2950 016a 13       		.uleb128 0x13
 2951 016b 00       		.byte	0
 2952 016c 00       		.byte	0
 2953 016d 1A       		.uleb128 0x1a
 2954 016e 2E       		.uleb128 0x2e
 2955 016f 00       		.byte	0
 2956 0170 3F       		.uleb128 0x3f
 2957 0171 19       		.uleb128 0x19
 2958 0172 03       		.uleb128 0x3
 2959 0173 0E       		.uleb128 0xe
 2960 0174 3A       		.uleb128 0x3a
 2961 0175 0B       		.uleb128 0xb
 2962 0176 3B       		.uleb128 0x3b
 2963 0177 05       		.uleb128 0x5
 2964 0178 27       		.uleb128 0x27
 2965 0179 19       		.uleb128 0x19
 2966 017a 49       		.uleb128 0x49
 2967 017b 13       		.uleb128 0x13
 2968 017c 11       		.uleb128 0x11
 2969 017d 01       		.uleb128 0x1
 2970 017e 12       		.uleb128 0x12
 2971 017f 06       		.uleb128 0x6
 2972 0180 40       		.uleb128 0x40
 2973 0181 18       		.uleb128 0x18
 2974 0182 9742     		.uleb128 0x2117
 2975 0184 19       		.uleb128 0x19
 2976 0185 00       		.byte	0
 2977 0186 00       		.byte	0
 2978 0187 1B       		.uleb128 0x1b
 2979 0188 05       		.uleb128 0x5
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 98


 2980 0189 00       		.byte	0
 2981 018a 03       		.uleb128 0x3
 2982 018b 0E       		.uleb128 0xe
 2983 018c 3A       		.uleb128 0x3a
 2984 018d 0B       		.uleb128 0xb
 2985 018e 3B       		.uleb128 0x3b
 2986 018f 05       		.uleb128 0x5
 2987 0190 49       		.uleb128 0x49
 2988 0191 13       		.uleb128 0x13
 2989 0192 02       		.uleb128 0x2
 2990 0193 18       		.uleb128 0x18
 2991 0194 00       		.byte	0
 2992 0195 00       		.byte	0
 2993 0196 1C       		.uleb128 0x1c
 2994 0197 0B       		.uleb128 0xb
 2995 0198 01       		.byte	0x1
 2996 0199 55       		.uleb128 0x55
 2997 019a 17       		.uleb128 0x17
 2998 019b 00       		.byte	0
 2999 019c 00       		.byte	0
 3000 019d 1D       		.uleb128 0x1d
 3001 019e 0F       		.uleb128 0xf
 3002 019f 00       		.byte	0
 3003 01a0 0B       		.uleb128 0xb
 3004 01a1 0B       		.uleb128 0xb
 3005 01a2 49       		.uleb128 0x49
 3006 01a3 13       		.uleb128 0x13
 3007 01a4 00       		.byte	0
 3008 01a5 00       		.byte	0
 3009 01a6 1E       		.uleb128 0x1e
 3010 01a7 26       		.uleb128 0x26
 3011 01a8 00       		.byte	0
 3012 01a9 49       		.uleb128 0x49
 3013 01aa 13       		.uleb128 0x13
 3014 01ab 00       		.byte	0
 3015 01ac 00       		.byte	0
 3016 01ad 1F       		.uleb128 0x1f
 3017 01ae 0B       		.uleb128 0xb
 3018 01af 01       		.byte	0x1
 3019 01b0 11       		.uleb128 0x11
 3020 01b1 01       		.uleb128 0x1
 3021 01b2 12       		.uleb128 0x12
 3022 01b3 06       		.uleb128 0x6
 3023 01b4 01       		.uleb128 0x1
 3024 01b5 13       		.uleb128 0x13
 3025 01b6 00       		.byte	0
 3026 01b7 00       		.byte	0
 3027 01b8 20       		.uleb128 0x20
 3028 01b9 2E       		.uleb128 0x2e
 3029 01ba 00       		.byte	0
 3030 01bb 3F       		.uleb128 0x3f
 3031 01bc 19       		.uleb128 0x19
 3032 01bd 03       		.uleb128 0x3
 3033 01be 0E       		.uleb128 0xe
 3034 01bf 3A       		.uleb128 0x3a
 3035 01c0 0B       		.uleb128 0xb
 3036 01c1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 99


 3037 01c2 05       		.uleb128 0x5
 3038 01c3 27       		.uleb128 0x27
 3039 01c4 19       		.uleb128 0x19
 3040 01c5 11       		.uleb128 0x11
 3041 01c6 01       		.uleb128 0x1
 3042 01c7 12       		.uleb128 0x12
 3043 01c8 06       		.uleb128 0x6
 3044 01c9 40       		.uleb128 0x40
 3045 01ca 18       		.uleb128 0x18
 3046 01cb 9742     		.uleb128 0x2117
 3047 01cd 19       		.uleb128 0x19
 3048 01ce 00       		.byte	0
 3049 01cf 00       		.byte	0
 3050 01d0 21       		.uleb128 0x21
 3051 01d1 34       		.uleb128 0x34
 3052 01d2 00       		.byte	0
 3053 01d3 03       		.uleb128 0x3
 3054 01d4 0E       		.uleb128 0xe
 3055 01d5 3A       		.uleb128 0x3a
 3056 01d6 0B       		.uleb128 0xb
 3057 01d7 3B       		.uleb128 0x3b
 3058 01d8 0B       		.uleb128 0xb
 3059 01d9 49       		.uleb128 0x49
 3060 01da 13       		.uleb128 0x13
 3061 01db 3F       		.uleb128 0x3f
 3062 01dc 19       		.uleb128 0x19
 3063 01dd 02       		.uleb128 0x2
 3064 01de 18       		.uleb128 0x18
 3065 01df 00       		.byte	0
 3066 01e0 00       		.byte	0
 3067 01e1 22       		.uleb128 0x22
 3068 01e2 34       		.uleb128 0x34
 3069 01e3 00       		.byte	0
 3070 01e4 03       		.uleb128 0x3
 3071 01e5 0E       		.uleb128 0xe
 3072 01e6 3A       		.uleb128 0x3a
 3073 01e7 0B       		.uleb128 0xb
 3074 01e8 3B       		.uleb128 0x3b
 3075 01e9 05       		.uleb128 0x5
 3076 01ea 49       		.uleb128 0x49
 3077 01eb 13       		.uleb128 0x13
 3078 01ec 3F       		.uleb128 0x3f
 3079 01ed 19       		.uleb128 0x19
 3080 01ee 3C       		.uleb128 0x3c
 3081 01ef 19       		.uleb128 0x19
 3082 01f0 00       		.byte	0
 3083 01f1 00       		.byte	0
 3084 01f2 23       		.uleb128 0x23
 3085 01f3 34       		.uleb128 0x34
 3086 01f4 00       		.byte	0
 3087 01f5 03       		.uleb128 0x3
 3088 01f6 0E       		.uleb128 0xe
 3089 01f7 3A       		.uleb128 0x3a
 3090 01f8 0B       		.uleb128 0xb
 3091 01f9 3B       		.uleb128 0x3b
 3092 01fa 0B       		.uleb128 0xb
 3093 01fb 49       		.uleb128 0x49
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 100


 3094 01fc 13       		.uleb128 0x13
 3095 01fd 3F       		.uleb128 0x3f
 3096 01fe 19       		.uleb128 0x19
 3097 01ff 3C       		.uleb128 0x3c
 3098 0200 19       		.uleb128 0x19
 3099 0201 00       		.byte	0
 3100 0202 00       		.byte	0
 3101 0203 24       		.uleb128 0x24
 3102 0204 2E       		.uleb128 0x2e
 3103 0205 00       		.byte	0
 3104 0206 3F       		.uleb128 0x3f
 3105 0207 19       		.uleb128 0x19
 3106 0208 3C       		.uleb128 0x3c
 3107 0209 19       		.uleb128 0x19
 3108 020a 6E       		.uleb128 0x6e
 3109 020b 0E       		.uleb128 0xe
 3110 020c 03       		.uleb128 0x3
 3111 020d 0E       		.uleb128 0xe
 3112 020e 3A       		.uleb128 0x3a
 3113 020f 0B       		.uleb128 0xb
 3114 0210 3B       		.uleb128 0x3b
 3115 0211 0B       		.uleb128 0xb
 3116 0212 00       		.byte	0
 3117 0213 00       		.byte	0
 3118 0214 00       		.byte	0
 3119              		.section	.debug_loc,"",%progbits
 3120              	.Ldebug_loc0:
 3121              	.LLST0:
 3122 0000 08000000 		.4byte	.LVL1
 3123 0004 2A010000 		.4byte	.LVL25
 3124 0008 0100     		.2byte	0x1
 3125 000a 57       		.byte	0x57
 3126 000b 00000000 		.4byte	0
 3127 000f 00000000 		.4byte	0
 3128              	.LLST1:
 3129 0013 00000000 		.4byte	.LVL26
 3130 0017 96000000 		.4byte	.LVL32
 3131 001b 0100     		.2byte	0x1
 3132 001d 50       		.byte	0x50
 3133 001e 96000000 		.4byte	.LVL32
 3134 0022 D8000000 		.4byte	.LFE2
 3135 0026 0400     		.2byte	0x4
 3136 0028 F3       		.byte	0xf3
 3137 0029 01       		.uleb128 0x1
 3138 002a 50       		.byte	0x50
 3139 002b 9F       		.byte	0x9f
 3140 002c 00000000 		.4byte	0
 3141 0030 00000000 		.4byte	0
 3142              	.LLST2:
 3143 0034 00000000 		.4byte	.LVL26
 3144 0038 99000000 		.4byte	.LVL33-1
 3145 003c 0100     		.2byte	0x1
 3146 003e 51       		.byte	0x51
 3147 003f 99000000 		.4byte	.LVL33-1
 3148 0043 D8000000 		.4byte	.LFE2
 3149 0047 0400     		.2byte	0x4
 3150 0049 F3       		.byte	0xf3
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 101


 3151 004a 01       		.uleb128 0x1
 3152 004b 51       		.byte	0x51
 3153 004c 9F       		.byte	0x9f
 3154 004d 00000000 		.4byte	0
 3155 0051 00000000 		.4byte	0
 3156              	.LLST3:
 3157 0055 02000000 		.4byte	.LVL27
 3158 0059 06000000 		.4byte	.LVL28
 3159 005d 0200     		.2byte	0x2
 3160 005f 30       		.byte	0x30
 3161 0060 9F       		.byte	0x9f
 3162 0061 06000000 		.4byte	.LVL28
 3163 0065 0E000000 		.4byte	.LVL29
 3164 0069 0100     		.2byte	0x1
 3165 006b 53       		.byte	0x53
 3166 006c 10000000 		.4byte	.LVL30
 3167 0070 16000000 		.4byte	.LVL31
 3168 0074 0100     		.2byte	0x1
 3169 0076 53       		.byte	0x53
 3170 0077 00000000 		.4byte	0
 3171 007b 00000000 		.4byte	0
 3172              	.LLST4:
 3173 007f 00000000 		.4byte	.LVL34
 3174 0083 0F000000 		.4byte	.LVL35-1
 3175 0087 0100     		.2byte	0x1
 3176 0089 50       		.byte	0x50
 3177 008a 0F000000 		.4byte	.LVL35-1
 3178 008e 24000000 		.4byte	.LFE0
 3179 0092 0400     		.2byte	0x4
 3180 0094 F3       		.byte	0xf3
 3181 0095 01       		.uleb128 0x1
 3182 0096 50       		.byte	0x50
 3183 0097 9F       		.byte	0x9f
 3184 0098 00000000 		.4byte	0
 3185 009c 00000000 		.4byte	0
 3186              	.LLST5:
 3187 00a0 00000000 		.4byte	.LVL34
 3188 00a4 0F000000 		.4byte	.LVL35-1
 3189 00a8 0100     		.2byte	0x1
 3190 00aa 51       		.byte	0x51
 3191 00ab 0F000000 		.4byte	.LVL35-1
 3192 00af 24000000 		.4byte	.LFE0
 3193 00b3 0400     		.2byte	0x4
 3194 00b5 F3       		.byte	0xf3
 3195 00b6 01       		.uleb128 0x1
 3196 00b7 51       		.byte	0x51
 3197 00b8 9F       		.byte	0x9f
 3198 00b9 00000000 		.4byte	0
 3199 00bd 00000000 		.4byte	0
 3200              	.LLST6:
 3201 00c1 00000000 		.4byte	.LVL37
 3202 00c5 04000000 		.4byte	.LVL38
 3203 00c9 0200     		.2byte	0x2
 3204 00cb 30       		.byte	0x30
 3205 00cc 9F       		.byte	0x9f
 3206 00cd 04000000 		.4byte	.LVL38
 3207 00d1 0C000000 		.4byte	.LVL39
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 102


 3208 00d5 0100     		.2byte	0x1
 3209 00d7 53       		.byte	0x53
 3210 00d8 0E000000 		.4byte	.LVL40
 3211 00dc 14000000 		.4byte	.LVL41
 3212 00e0 0100     		.2byte	0x1
 3213 00e2 53       		.byte	0x53
 3214 00e3 00000000 		.4byte	0
 3215 00e7 00000000 		.4byte	0
 3216              	.LLST7:
 3217 00eb 06000000 		.4byte	.LVL42
 3218 00ef 47000000 		.4byte	.LVL43-1
 3219 00f3 0100     		.2byte	0x1
 3220 00f5 50       		.byte	0x50
 3221 00f6 00000000 		.4byte	0
 3222 00fa 00000000 		.4byte	0
 3223              	.LLST8:
 3224 00fe 06000000 		.4byte	.LVL45
 3225 0102 10000000 		.4byte	.LVL46
 3226 0106 0100     		.2byte	0x1
 3227 0108 53       		.byte	0x53
 3228 0109 00000000 		.4byte	0
 3229 010d 00000000 		.4byte	0
 3230              	.LLST9:
 3231 0111 00000000 		.4byte	.LVL47
 3232 0115 10000000 		.4byte	.LVL48
 3233 0119 0200     		.2byte	0x2
 3234 011b 30       		.byte	0x30
 3235 011c 9F       		.byte	0x9f
 3236 011d 10000000 		.4byte	.LVL48
 3237 0121 16000000 		.4byte	.LVL49
 3238 0125 0100     		.2byte	0x1
 3239 0127 50       		.byte	0x50
 3240 0128 16000000 		.4byte	.LVL49
 3241 012c 18000000 		.4byte	.LVL50
 3242 0130 0200     		.2byte	0x2
 3243 0132 30       		.byte	0x30
 3244 0133 9F       		.byte	0x9f
 3245 0134 18000000 		.4byte	.LVL50
 3246 0138 20000000 		.4byte	.LFE7
 3247 013c 0100     		.2byte	0x1
 3248 013e 50       		.byte	0x50
 3249 013f 00000000 		.4byte	0
 3250 0143 00000000 		.4byte	0
 3251              	.LLST10:
 3252 0147 00000000 		.4byte	.LVL51
 3253 014b 04000000 		.4byte	.LVL52
 3254 014f 0100     		.2byte	0x1
 3255 0151 50       		.byte	0x50
 3256 0152 04000000 		.4byte	.LVL52
 3257 0156 0C000000 		.4byte	.LFE8
 3258 015a 0400     		.2byte	0x4
 3259 015c F3       		.byte	0xf3
 3260 015d 01       		.uleb128 0x1
 3261 015e 50       		.byte	0x50
 3262 015f 9F       		.byte	0x9f
 3263 0160 00000000 		.4byte	0
 3264 0164 00000000 		.4byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 103


 3265              	.LLST11:
 3266 0168 00000000 		.4byte	.LVL53
 3267 016c 04000000 		.4byte	.LVL54
 3268 0170 0100     		.2byte	0x1
 3269 0172 50       		.byte	0x50
 3270 0173 04000000 		.4byte	.LVL54
 3271 0177 14000000 		.4byte	.LFE9
 3272 017b 0400     		.2byte	0x4
 3273 017d F3       		.byte	0xf3
 3274 017e 01       		.uleb128 0x1
 3275 017f 50       		.byte	0x50
 3276 0180 9F       		.byte	0x9f
 3277 0181 00000000 		.4byte	0
 3278 0185 00000000 		.4byte	0
 3279              	.LLST12:
 3280 0189 00000000 		.4byte	.LVL55
 3281 018d 0C000000 		.4byte	.LVL56
 3282 0191 0100     		.2byte	0x1
 3283 0193 50       		.byte	0x50
 3284 0194 0C000000 		.4byte	.LVL56
 3285 0198 20000000 		.4byte	.LVL61
 3286 019c 0400     		.2byte	0x4
 3287 019e F3       		.byte	0xf3
 3288 019f 01       		.uleb128 0x1
 3289 01a0 50       		.byte	0x50
 3290 01a1 9F       		.byte	0x9f
 3291 01a2 20000000 		.4byte	.LVL61
 3292 01a6 22000000 		.4byte	.LVL62
 3293 01aa 0100     		.2byte	0x1
 3294 01ac 50       		.byte	0x50
 3295 01ad 22000000 		.4byte	.LVL62
 3296 01b1 28000000 		.4byte	.LFE10
 3297 01b5 0400     		.2byte	0x4
 3298 01b7 F3       		.byte	0xf3
 3299 01b8 01       		.uleb128 0x1
 3300 01b9 50       		.byte	0x50
 3301 01ba 9F       		.byte	0x9f
 3302 01bb 00000000 		.4byte	0
 3303 01bf 00000000 		.4byte	0
 3304              	.LLST13:
 3305 01c3 00000000 		.4byte	.LVL55
 3306 01c7 14000000 		.4byte	.LVL57
 3307 01cb 0200     		.2byte	0x2
 3308 01cd 30       		.byte	0x30
 3309 01ce 9F       		.byte	0x9f
 3310 01cf 14000000 		.4byte	.LVL57
 3311 01d3 1C000000 		.4byte	.LVL59
 3312 01d7 0100     		.2byte	0x1
 3313 01d9 50       		.byte	0x50
 3314 01da 1C000000 		.4byte	.LVL59
 3315 01de 1E000000 		.4byte	.LVL60
 3316 01e2 0300     		.2byte	0x3
 3317 01e4 70       		.byte	0x70
 3318 01e5 02       		.sleb128 2
 3319 01e6 9F       		.byte	0x9f
 3320 01e7 1E000000 		.4byte	.LVL60
 3321 01eb 20000000 		.4byte	.LVL61
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 104


 3322 01ef 0100     		.2byte	0x1
 3323 01f1 50       		.byte	0x50
 3324 01f2 20000000 		.4byte	.LVL61
 3325 01f6 22000000 		.4byte	.LVL62
 3326 01fa 0200     		.2byte	0x2
 3327 01fc 30       		.byte	0x30
 3328 01fd 9F       		.byte	0x9f
 3329 01fe 22000000 		.4byte	.LVL62
 3330 0202 28000000 		.4byte	.LFE10
 3331 0206 0100     		.2byte	0x1
 3332 0208 50       		.byte	0x50
 3333 0209 00000000 		.4byte	0
 3334 020d 00000000 		.4byte	0
 3335              	.LLST14:
 3336 0211 00000000 		.4byte	.LVL63
 3337 0215 7C000000 		.4byte	.LVL73
 3338 0219 0100     		.2byte	0x1
 3339 021b 50       		.byte	0x50
 3340 021c 7C000000 		.4byte	.LVL73
 3341 0220 94000000 		.4byte	.LFE11
 3342 0224 0400     		.2byte	0x4
 3343 0226 F3       		.byte	0xf3
 3344 0227 01       		.uleb128 0x1
 3345 0228 50       		.byte	0x50
 3346 0229 9F       		.byte	0x9f
 3347 022a 00000000 		.4byte	0
 3348 022e 00000000 		.4byte	0
 3349              	.LLST15:
 3350 0232 00000000 		.4byte	.LVL63
 3351 0236 26000000 		.4byte	.LVL64
 3352 023a 0100     		.2byte	0x1
 3353 023c 52       		.byte	0x52
 3354 023d 26000000 		.4byte	.LVL64
 3355 0241 34000000 		.4byte	.LVL65
 3356 0245 0400     		.2byte	0x4
 3357 0247 F3       		.byte	0xf3
 3358 0248 01       		.uleb128 0x1
 3359 0249 52       		.byte	0x52
 3360 024a 9F       		.byte	0x9f
 3361 024b 34000000 		.4byte	.LVL65
 3362 024f 6A000000 		.4byte	.LVL72
 3363 0253 0100     		.2byte	0x1
 3364 0255 52       		.byte	0x52
 3365 0256 00000000 		.4byte	0
 3366 025a 00000000 		.4byte	0
 3367              	.LLST16:
 3368 025e 54000000 		.4byte	.LVL66
 3369 0262 5E000000 		.4byte	.LVL67
 3370 0266 0100     		.2byte	0x1
 3371 0268 53       		.byte	0x53
 3372 0269 60000000 		.4byte	.LVL68
 3373 026d 62000000 		.4byte	.LVL69
 3374 0271 0100     		.2byte	0x1
 3375 0273 53       		.byte	0x53
 3376 0274 64000000 		.4byte	.LVL70
 3377 0278 68000000 		.4byte	.LVL71
 3378 027c 0100     		.2byte	0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 105


 3379 027e 53       		.byte	0x53
 3380 027f 00000000 		.4byte	0
 3381 0283 00000000 		.4byte	0
 3382              	.LLST17:
 3383 0287 00000000 		.4byte	.LVL74
 3384 028b 1C000000 		.4byte	.LVL75
 3385 028f 0100     		.2byte	0x1
 3386 0291 50       		.byte	0x50
 3387 0292 1C000000 		.4byte	.LVL75
 3388 0296 2C000000 		.4byte	.LFE13
 3389 029a 0400     		.2byte	0x4
 3390 029c F3       		.byte	0xf3
 3391 029d 01       		.uleb128 0x1
 3392 029e 50       		.byte	0x50
 3393 029f 9F       		.byte	0x9f
 3394 02a0 00000000 		.4byte	0
 3395 02a4 00000000 		.4byte	0
 3396              	.LLST18:
 3397 02a8 00000000 		.4byte	.LVL76
 3398 02ac 13000000 		.4byte	.LVL77-1
 3399 02b0 0100     		.2byte	0x1
 3400 02b2 50       		.byte	0x50
 3401 02b3 13000000 		.4byte	.LVL77-1
 3402 02b7 3C000000 		.4byte	.LVL84
 3403 02bb 0400     		.2byte	0x4
 3404 02bd F3       		.byte	0xf3
 3405 02be 01       		.uleb128 0x1
 3406 02bf 50       		.byte	0x50
 3407 02c0 9F       		.byte	0x9f
 3408 02c1 3C000000 		.4byte	.LVL84
 3409 02c5 46000000 		.4byte	.LVL85
 3410 02c9 0100     		.2byte	0x1
 3411 02cb 50       		.byte	0x50
 3412 02cc 46000000 		.4byte	.LVL85
 3413 02d0 50000000 		.4byte	.LFE12
 3414 02d4 0400     		.2byte	0x4
 3415 02d6 F3       		.byte	0xf3
 3416 02d7 01       		.uleb128 0x1
 3417 02d8 50       		.byte	0x50
 3418 02d9 9F       		.byte	0x9f
 3419 02da 00000000 		.4byte	0
 3420 02de 00000000 		.4byte	0
 3421              	.LLST19:
 3422 02e2 00000000 		.4byte	.LVL76
 3423 02e6 13000000 		.4byte	.LVL77-1
 3424 02ea 0100     		.2byte	0x1
 3425 02ec 51       		.byte	0x51
 3426 02ed 13000000 		.4byte	.LVL77-1
 3427 02f1 3C000000 		.4byte	.LVL84
 3428 02f5 0100     		.2byte	0x1
 3429 02f7 56       		.byte	0x56
 3430 02f8 3C000000 		.4byte	.LVL84
 3431 02fc 46000000 		.4byte	.LVL85
 3432 0300 0100     		.2byte	0x1
 3433 0302 51       		.byte	0x51
 3434 0303 46000000 		.4byte	.LVL85
 3435 0307 50000000 		.4byte	.LFE12
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 106


 3436 030b 0400     		.2byte	0x4
 3437 030d F3       		.byte	0xf3
 3438 030e 01       		.uleb128 0x1
 3439 030f 51       		.byte	0x51
 3440 0310 9F       		.byte	0x9f
 3441 0311 00000000 		.4byte	0
 3442 0315 00000000 		.4byte	0
 3443              	.LLST20:
 3444 0319 00000000 		.4byte	.LVL76
 3445 031d 13000000 		.4byte	.LVL77-1
 3446 0321 0100     		.2byte	0x1
 3447 0323 52       		.byte	0x52
 3448 0324 13000000 		.4byte	.LVL77-1
 3449 0328 20000000 		.4byte	.LVL79
 3450 032c 0400     		.2byte	0x4
 3451 032e F3       		.byte	0xf3
 3452 032f 01       		.uleb128 0x1
 3453 0330 52       		.byte	0x52
 3454 0331 9F       		.byte	0x9f
 3455 0332 20000000 		.4byte	.LVL79
 3456 0336 3C000000 		.4byte	.LVL84
 3457 033a 0100     		.2byte	0x1
 3458 033c 54       		.byte	0x54
 3459 033d 3C000000 		.4byte	.LVL84
 3460 0341 46000000 		.4byte	.LVL85
 3461 0345 0100     		.2byte	0x1
 3462 0347 52       		.byte	0x52
 3463 0348 46000000 		.4byte	.LVL85
 3464 034c 4A000000 		.4byte	.LVL86
 3465 0350 0100     		.2byte	0x1
 3466 0352 54       		.byte	0x54
 3467 0353 00000000 		.4byte	0
 3468 0357 00000000 		.4byte	0
 3469              	.LLST21:
 3470 035b 20000000 		.4byte	.LVL79
 3471 035f 24000000 		.4byte	.LVL80
 3472 0363 0200     		.2byte	0x2
 3473 0365 30       		.byte	0x30
 3474 0366 9F       		.byte	0x9f
 3475 0367 24000000 		.4byte	.LVL80
 3476 036b 2E000000 		.4byte	.LVL81
 3477 036f 0100     		.2byte	0x1
 3478 0371 53       		.byte	0x53
 3479 0372 30000000 		.4byte	.LVL82
 3480 0376 39000000 		.4byte	.LVL83-1
 3481 037a 0100     		.2byte	0x1
 3482 037c 53       		.byte	0x53
 3483 037d 00000000 		.4byte	0
 3484 0381 00000000 		.4byte	0
 3485              	.LLST22:
 3486 0385 00000000 		.4byte	.LVL87
 3487 0389 0A000000 		.4byte	.LVL88
 3488 038d 0100     		.2byte	0x1
 3489 038f 50       		.byte	0x50
 3490 0390 0A000000 		.4byte	.LVL88
 3491 0394 18000000 		.4byte	.LFE14
 3492 0398 0400     		.2byte	0x4
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 107


 3493 039a F3       		.byte	0xf3
 3494 039b 01       		.uleb128 0x1
 3495 039c 50       		.byte	0x50
 3496 039d 9F       		.byte	0x9f
 3497 039e 00000000 		.4byte	0
 3498 03a2 00000000 		.4byte	0
 3499              	.LLST23:
 3500 03a6 00000000 		.4byte	.LVL90
 3501 03aa 0A000000 		.4byte	.LVL91
 3502 03ae 0100     		.2byte	0x1
 3503 03b0 50       		.byte	0x50
 3504 03b1 0A000000 		.4byte	.LVL91
 3505 03b5 16000000 		.4byte	.LVL93
 3506 03b9 0400     		.2byte	0x4
 3507 03bb F3       		.byte	0xf3
 3508 03bc 01       		.uleb128 0x1
 3509 03bd 50       		.byte	0x50
 3510 03be 9F       		.byte	0x9f
 3511 03bf 16000000 		.4byte	.LVL93
 3512 03c3 18000000 		.4byte	.LVL94
 3513 03c7 0100     		.2byte	0x1
 3514 03c9 50       		.byte	0x50
 3515 03ca 18000000 		.4byte	.LVL94
 3516 03ce 20000000 		.4byte	.LFE16
 3517 03d2 0400     		.2byte	0x4
 3518 03d4 F3       		.byte	0xf3
 3519 03d5 01       		.uleb128 0x1
 3520 03d6 50       		.byte	0x50
 3521 03d7 9F       		.byte	0x9f
 3522 03d8 00000000 		.4byte	0
 3523 03dc 00000000 		.4byte	0
 3524              	.LLST24:
 3525 03e0 00000000 		.4byte	.LVL90
 3526 03e4 14000000 		.4byte	.LVL92
 3527 03e8 0200     		.2byte	0x2
 3528 03ea 30       		.byte	0x30
 3529 03eb 9F       		.byte	0x9f
 3530 03ec 14000000 		.4byte	.LVL92
 3531 03f0 16000000 		.4byte	.LVL93
 3532 03f4 0100     		.2byte	0x1
 3533 03f6 50       		.byte	0x50
 3534 03f7 16000000 		.4byte	.LVL93
 3535 03fb 18000000 		.4byte	.LVL94
 3536 03ff 0200     		.2byte	0x2
 3537 0401 30       		.byte	0x30
 3538 0402 9F       		.byte	0x9f
 3539 0403 18000000 		.4byte	.LVL94
 3540 0407 20000000 		.4byte	.LFE16
 3541 040b 0100     		.2byte	0x1
 3542 040d 50       		.byte	0x50
 3543 040e 00000000 		.4byte	0
 3544 0412 00000000 		.4byte	0
 3545              	.LLST25:
 3546 0416 00000000 		.4byte	.LVL96
 3547 041a 10000000 		.4byte	.LVL97
 3548 041e 0200     		.2byte	0x2
 3549 0420 30       		.byte	0x30
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 108


 3550 0421 9F       		.byte	0x9f
 3551 0422 10000000 		.4byte	.LVL97
 3552 0426 18000000 		.4byte	.LFE18
 3553 042a 0100     		.2byte	0x1
 3554 042c 50       		.byte	0x50
 3555 042d 00000000 		.4byte	0
 3556 0431 00000000 		.4byte	0
 3557              		.section	.debug_aranges,"",%progbits
 3558 0000 C4000000 		.4byte	0xc4
 3559 0004 0200     		.2byte	0x2
 3560 0006 00000000 		.4byte	.Ldebug_info0
 3561 000a 04       		.byte	0x4
 3562 000b 00       		.byte	0
 3563 000c 0000     		.2byte	0
 3564 000e 0000     		.2byte	0
 3565 0010 00000000 		.4byte	.LFB1
 3566 0014 68010000 		.4byte	.LFE1-.LFB1
 3567 0018 00000000 		.4byte	.LFB2
 3568 001c D8000000 		.4byte	.LFE2-.LFB2
 3569 0020 00000000 		.4byte	.LFB0
 3570 0024 24000000 		.4byte	.LFE0-.LFB0
 3571 0028 00000000 		.4byte	.LFB3
 3572 002c 64000000 		.4byte	.LFE3-.LFB3
 3573 0030 00000000 		.4byte	.LFB4
 3574 0034 C0000000 		.4byte	.LFE4-.LFB4
 3575 0038 00000000 		.4byte	.LFB5
 3576 003c 20000000 		.4byte	.LFE5-.LFB5
 3577 0040 00000000 		.4byte	.LFB6
 3578 0044 0C000000 		.4byte	.LFE6-.LFB6
 3579 0048 00000000 		.4byte	.LFB7
 3580 004c 20000000 		.4byte	.LFE7-.LFB7
 3581 0050 00000000 		.4byte	.LFB8
 3582 0054 0C000000 		.4byte	.LFE8-.LFB8
 3583 0058 00000000 		.4byte	.LFB9
 3584 005c 14000000 		.4byte	.LFE9-.LFB9
 3585 0060 00000000 		.4byte	.LFB10
 3586 0064 28000000 		.4byte	.LFE10-.LFB10
 3587 0068 00000000 		.4byte	.LFB11
 3588 006c 94000000 		.4byte	.LFE11-.LFB11
 3589 0070 00000000 		.4byte	.LFB13
 3590 0074 2C000000 		.4byte	.LFE13-.LFB13
 3591 0078 00000000 		.4byte	.LFB12
 3592 007c 50000000 		.4byte	.LFE12-.LFB12
 3593 0080 00000000 		.4byte	.LFB14
 3594 0084 18000000 		.4byte	.LFE14-.LFB14
 3595 0088 00000000 		.4byte	.LFB15
 3596 008c 0C000000 		.4byte	.LFE15-.LFB15
 3597 0090 00000000 		.4byte	.LFB16
 3598 0094 20000000 		.4byte	.LFE16-.LFB16
 3599 0098 00000000 		.4byte	.LFB17
 3600 009c 20000000 		.4byte	.LFE17-.LFB17
 3601 00a0 00000000 		.4byte	.LFB18
 3602 00a4 18000000 		.4byte	.LFE18-.LFB18
 3603 00a8 00000000 		.4byte	.LFB19
 3604 00ac 10000000 		.4byte	.LFE19-.LFB19
 3605 00b0 00000000 		.4byte	.LFB20
 3606 00b4 10000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 109


 3607 00b8 00000000 		.4byte	.LFB21
 3608 00bc 10000000 		.4byte	.LFE21-.LFB21
 3609 00c0 00000000 		.4byte	0
 3610 00c4 00000000 		.4byte	0
 3611              		.section	.debug_ranges,"",%progbits
 3612              	.Ldebug_ranges0:
 3613 0000 52000000 		.4byte	.LBB2
 3614 0004 62000000 		.4byte	.LBE2
 3615 0008 64000000 		.4byte	.LBB3
 3616 000c 68000000 		.4byte	.LBE3
 3617 0010 00000000 		.4byte	0
 3618 0014 00000000 		.4byte	0
 3619 0018 00000000 		.4byte	.LFB1
 3620 001c 68010000 		.4byte	.LFE1
 3621 0020 00000000 		.4byte	.LFB2
 3622 0024 D8000000 		.4byte	.LFE2
 3623 0028 00000000 		.4byte	.LFB0
 3624 002c 24000000 		.4byte	.LFE0
 3625 0030 00000000 		.4byte	.LFB3
 3626 0034 64000000 		.4byte	.LFE3
 3627 0038 00000000 		.4byte	.LFB4
 3628 003c C0000000 		.4byte	.LFE4
 3629 0040 00000000 		.4byte	.LFB5
 3630 0044 20000000 		.4byte	.LFE5
 3631 0048 00000000 		.4byte	.LFB6
 3632 004c 0C000000 		.4byte	.LFE6
 3633 0050 00000000 		.4byte	.LFB7
 3634 0054 20000000 		.4byte	.LFE7
 3635 0058 00000000 		.4byte	.LFB8
 3636 005c 0C000000 		.4byte	.LFE8
 3637 0060 00000000 		.4byte	.LFB9
 3638 0064 14000000 		.4byte	.LFE9
 3639 0068 00000000 		.4byte	.LFB10
 3640 006c 28000000 		.4byte	.LFE10
 3641 0070 00000000 		.4byte	.LFB11
 3642 0074 94000000 		.4byte	.LFE11
 3643 0078 00000000 		.4byte	.LFB13
 3644 007c 2C000000 		.4byte	.LFE13
 3645 0080 00000000 		.4byte	.LFB12
 3646 0084 50000000 		.4byte	.LFE12
 3647 0088 00000000 		.4byte	.LFB14
 3648 008c 18000000 		.4byte	.LFE14
 3649 0090 00000000 		.4byte	.LFB15
 3650 0094 0C000000 		.4byte	.LFE15
 3651 0098 00000000 		.4byte	.LFB16
 3652 009c 20000000 		.4byte	.LFE16
 3653 00a0 00000000 		.4byte	.LFB17
 3654 00a4 20000000 		.4byte	.LFE17
 3655 00a8 00000000 		.4byte	.LFB18
 3656 00ac 18000000 		.4byte	.LFE18
 3657 00b0 00000000 		.4byte	.LFB19
 3658 00b4 10000000 		.4byte	.LFE19
 3659 00b8 00000000 		.4byte	.LFB20
 3660 00bc 10000000 		.4byte	.LFE20
 3661 00c0 00000000 		.4byte	.LFB21
 3662 00c4 10000000 		.4byte	.LFE21
 3663 00c8 00000000 		.4byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 110


 3664 00cc 00000000 		.4byte	0
 3665              		.section	.debug_line,"",%progbits
 3666              	.Ldebug_line0:
 3667 0000 F7020000 		.section	.debug_str,"MS",%progbits,1
 3667      02007500 
 3667      00000201 
 3667      FB0E0D00 
 3667      01010101 
 3668              	.LASF88:
 3669 0000 55534246 		.ascii	"USBFS_interfaceNumber\000"
 3669      535F696E 
 3669      74657266 
 3669      6163654E 
 3669      756D6265 
 3670              	.LASF22:
 3671 0016 6570546F 		.ascii	"epToggle\000"
 3671      67676C65 
 3671      00
 3672              	.LASF59:
 3673 001f 696E7465 		.ascii	"interfaceNumber\000"
 3673      72666163 
 3673      654E756D 
 3673      62657200 
 3674              	.LASF63:
 3675 002f 636E7472 		.ascii	"cntr\000"
 3675      00
 3676              	.LASF81:
 3677 0034 55534246 		.ascii	"USBFS_initVar\000"
 3677      535F696E 
 3677      69745661 
 3677      7200
 3678              	.LASF70:
 3679 0042 55534246 		.ascii	"USBFS_Force\000"
 3679      535F466F 
 3679      72636500 
 3680              	.LASF79:
 3681 004e 55534246 		.ascii	"USBFS_EnableSofInt\000"
 3681      535F456E 
 3681      61626C65 
 3681      536F6649 
 3681      6E7400
 3682              	.LASF44:
 3683 0061 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 3683      535F7369 
 3683      655F6570 
 3683      735F7374 
 3683      72756374 
 3684              	.LASF54:
 3685 0076 55534246 		.ascii	"USBFS_Stop\000"
 3685      535F5374 
 3685      6F7000
 3686              	.LASF95:
 3687 0081 43794578 		.ascii	"CyExitCriticalSection\000"
 3687      69744372 
 3687      69746963 
 3687      616C5365 
 3687      6374696F 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 111


 3688              	.LASF65:
 3689 0097 70446174 		.ascii	"pData\000"
 3689      6100
 3690              	.LASF34:
 3691 009d 6570496E 		.ascii	"epIntEn\000"
 3691      74456E00 
 3692              	.LASF73:
 3693 00a5 55534246 		.ascii	"USBFS_SetPowerStatus\000"
 3693      535F5365 
 3693      74506F77 
 3693      65725374 
 3693      61747573 
 3694              	.LASF2:
 3695 00ba 73686F72 		.ascii	"short int\000"
 3695      7420696E 
 3695      7400
 3696              	.LASF85:
 3697 00c4 55534246 		.ascii	"USBFS_configurationChanged\000"
 3697      535F636F 
 3697      6E666967 
 3697      75726174 
 3697      696F6E43 
 3698              	.LASF18:
 3699 00df 73697A65 		.ascii	"sizetype\000"
 3699      74797065 
 3699      00
 3700              	.LASF24:
 3701 00e8 65704D6F 		.ascii	"epMode\000"
 3701      646500
 3702              	.LASF45:
 3703 00ef 61726245 		.ascii	"arbEp\000"
 3703      7000
 3704              	.LASF74:
 3705 00f5 706F7765 		.ascii	"powerStatus\000"
 3705      72537461 
 3705      74757300 
 3706              	.LASF17:
 3707 0101 6C6F6E67 		.ascii	"long double\000"
 3707      20646F75 
 3707      626C6500 
 3708              	.LASF53:
 3709 010d 55534246 		.ascii	"USBFS_ReInitComponent\000"
 3709      535F5265 
 3709      496E6974 
 3709      436F6D70 
 3709      6F6E656E 
 3710              	.LASF50:
 3711 0123 6D6F6465 		.ascii	"mode\000"
 3711      00
 3712              	.LASF32:
 3713 0128 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 3713      535F7369 
 3713      655F6570 
 3713      5F737472 
 3713      75637400 
 3714              	.LASF36:
 3715 013c 72657365 		.ascii	"reserved\000"
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 112


 3715      72766564 
 3715      00
 3716              	.LASF10:
 3717 0145 75696E74 		.ascii	"uint16\000"
 3717      313600
 3718              	.LASF39:
 3719 014c 72775261 		.ascii	"rwRa\000"
 3719      00
 3720              	.LASF83:
 3721 0151 55534246 		.ascii	"USBFS_transferState\000"
 3721      535F7472 
 3721      616E7366 
 3721      65725374 
 3721      61746500 
 3722              	.LASF96:
 3723 0165 4379496E 		.ascii	"CyIntSetPriority\000"
 3723      74536574 
 3723      5072696F 
 3723      72697479 
 3723      00
 3724              	.LASF48:
 3725 0176 55534246 		.ascii	"USBFS_InitComponent\000"
 3725      535F496E 
 3725      6974436F 
 3725      6D706F6E 
 3725      656E7400 
 3726              	.LASF102:
 3727 018a 433A5C55 		.ascii	"C:\\Users\\bkettle\\OneDrive\\School\\6.115\\projec"
 3727      73657273 
 3727      5C626B65 
 3727      74746C65 
 3727      5C4F6E65 
 3728 01b7 745C7073 		.ascii	"t\\psoc\\Password Keeper\\Complete.cydsn\000"
 3728      6F635C50 
 3728      61737377 
 3728      6F726420 
 3728      4B656570 
 3729              	.LASF43:
 3730 01dd 73696545 		.ascii	"sieEp\000"
 3730      7000
 3731              	.LASF66:
 3732 01e3 6C656E67 		.ascii	"length\000"
 3732      746800
 3733              	.LASF49:
 3734 01ea 64657669 		.ascii	"device\000"
 3734      636500
 3735              	.LASF12:
 3736 01f1 666C6F61 		.ascii	"float\000"
 3736      7400
 3737              	.LASF6:
 3738 01f7 6C6F6E67 		.ascii	"long long int\000"
 3738      206C6F6E 
 3738      6720696E 
 3738      7400
 3739              	.LASF7:
 3740 0205 6C6F6E67 		.ascii	"long long unsigned int\000"
 3740      206C6F6E 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 113


 3740      6720756E 
 3740      7369676E 
 3740      65642069 
 3741              	.LASF31:
 3742 021c 65704372 		.ascii	"epCr0\000"
 3742      3000
 3743              	.LASF33:
 3744 0222 65704366 		.ascii	"epCfg\000"
 3744      6700
 3745              	.LASF4:
 3746 0228 6C6F6E67 		.ascii	"long int\000"
 3746      20696E74 
 3746      00
 3747              	.LASF20:
 3748 0231 61706945 		.ascii	"apiEpState\000"
 3748      70537461 
 3748      746500
 3749              	.LASF23:
 3750 023c 61646472 		.ascii	"addr\000"
 3750      00
 3751              	.LASF76:
 3752 0241 72657375 		.ascii	"result\000"
 3752      6C7400
 3753              	.LASF90:
 3754 0248 55534246 		.ascii	"USBFS_deviceAddress\000"
 3754      535F6465 
 3754      76696365 
 3754      41646472 
 3754      65737300 
 3755              	.LASF77:
 3756 025c 55534246 		.ascii	"USBFS_GetConfiguration\000"
 3756      535F4765 
 3756      74436F6E 
 3756      66696775 
 3756      72617469 
 3757              	.LASF72:
 3758 0273 55534246 		.ascii	"USBFS_GetEPAckState\000"
 3758      535F4765 
 3758      74455041 
 3758      636B5374 
 3758      61746500 
 3759              	.LASF60:
 3760 0287 55534246 		.ascii	"USBFS_GetEPState\000"
 3760      535F4765 
 3760      74455053 
 3760      74617465 
 3760      00
 3761              	.LASF46:
 3762 0298 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 3762      535F6172 
 3762      625F6570 
 3762      735F7374 
 3762      72756374 
 3763              	.LASF68:
 3764 02ad 55534246 		.ascii	"USBFS_ReadOutEP\000"
 3764      535F5265 
 3764      61644F75 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 114


 3764      74455000 
 3765              	.LASF28:
 3766 02bd 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 3766      4246535F 
 3766      45505F43 
 3766      544C5F42 
 3766      4C4F434B 
 3767              	.LASF84:
 3768 02d2 55534246 		.ascii	"USBFS_configuration\000"
 3768      535F636F 
 3768      6E666967 
 3768      75726174 
 3768      696F6E00 
 3769              	.LASF1:
 3770 02e6 756E7369 		.ascii	"unsigned char\000"
 3770      676E6564 
 3770      20636861 
 3770      7200
 3771              	.LASF42:
 3772 02f4 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 3772      535F6172 
 3772      625F6570 
 3772      5F737472 
 3772      75637400 
 3773              	.LASF35:
 3774 0308 65705372 		.ascii	"epSr\000"
 3774      00
 3775              	.LASF0:
 3776 030d 7369676E 		.ascii	"signed char\000"
 3776      65642063 
 3776      68617200 
 3777              	.LASF94:
 3778 0319 43794465 		.ascii	"CyDelayUs\000"
 3778      6C617955 
 3778      7300
 3779              	.LASF99:
 3780 0323 55534246 		.ascii	"USBFS_Dp_ClearInterrupt\000"
 3780      535F4470 
 3780      5F436C65 
 3780      6172496E 
 3780      74657272 
 3781              	.LASF8:
 3782 033b 756E7369 		.ascii	"unsigned int\000"
 3782      676E6564 
 3782      20696E74 
 3782      00
 3783              	.LASF41:
 3784 0348 72774472 		.ascii	"rwDr\000"
 3784      00
 3785              	.LASF37:
 3786 034d 72775761 		.ascii	"rwWa\000"
 3786      00
 3787              	.LASF98:
 3788 0352 43794465 		.ascii	"CyDelayCycles\000"
 3788      6C617943 
 3788      79636C65 
 3788      7300
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 115


 3789              	.LASF16:
 3790 0360 72656733 		.ascii	"reg32\000"
 3790      3200
 3791              	.LASF27:
 3792 0366 696E7465 		.ascii	"interface\000"
 3792      72666163 
 3792      6500
 3793              	.LASF62:
 3794 0370 55534246 		.ascii	"USBFS_GetEPCount\000"
 3794      535F4765 
 3794      74455043 
 3794      6F756E74 
 3794      00
 3795              	.LASF19:
 3796 0381 61747472 		.ascii	"attrib\000"
 3796      696200
 3797              	.LASF101:
 3798 0388 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS.c\000"
 3798      72617465 
 3798      645F536F 
 3798      75726365 
 3798      5C50536F 
 3799              	.LASF14:
 3800 03a7 63686172 		.ascii	"char\000"
 3800      00
 3801              	.LASF61:
 3802 03ac 65704E75 		.ascii	"epNumber\000"
 3802      6D626572 
 3802      00
 3803              	.LASF93:
 3804 03b5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3804      74657243 
 3804      72697469 
 3804      63616C53 
 3804      65637469 
 3805              	.LASF25:
 3806 03cc 62756666 		.ascii	"buffOffset\000"
 3806      4F666673 
 3806      657400
 3807              	.LASF3:
 3808 03d7 73686F72 		.ascii	"short unsigned int\000"
 3808      7420756E 
 3808      7369676E 
 3808      65642069 
 3808      6E7400
 3809              	.LASF29:
 3810 03ea 6570436E 		.ascii	"epCnt0\000"
 3810      743000
 3811              	.LASF9:
 3812 03f1 75696E74 		.ascii	"uint8\000"
 3812      3800
 3813              	.LASF55:
 3814 03f7 63723152 		.ascii	"cr1Reg\000"
 3814      656700
 3815              	.LASF30:
 3816 03fe 6570436E 		.ascii	"epCnt1\000"
 3816      743100
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 116


 3817              	.LASF87:
 3818 0405 55534246 		.ascii	"USBFS_hidProtocol\000"
 3818      535F6869 
 3818      6450726F 
 3818      746F636F 
 3818      6C00
 3819              	.LASF80:
 3820 0417 55534246 		.ascii	"USBFS_DisableSofInt\000"
 3820      535F4469 
 3820      7361626C 
 3820      65536F66 
 3820      496E7400 
 3821              	.LASF21:
 3822 042b 68774570 		.ascii	"hwEpState\000"
 3822      53746174 
 3822      6500
 3823              	.LASF58:
 3824 0435 55534246 		.ascii	"USBFS_GetInterfaceSetting\000"
 3824      535F4765 
 3824      74496E74 
 3824      65726661 
 3824      63655365 
 3825              	.LASF11:
 3826 044f 75696E74 		.ascii	"uint32\000"
 3826      333200
 3827              	.LASF15:
 3828 0456 72656738 		.ascii	"reg8\000"
 3828      00
 3829              	.LASF5:
 3830 045b 6C6F6E67 		.ascii	"long unsigned int\000"
 3830      20756E73 
 3830      69676E65 
 3830      6420696E 
 3830      7400
 3831              	.LASF82:
 3832 046d 55534246 		.ascii	"USBFS_device\000"
 3832      535F6465 
 3832      76696365 
 3832      00
 3833              	.LASF91:
 3834 047a 55534246 		.ascii	"USBFS_EP\000"
 3834      535F4550 
 3834      00
 3835              	.LASF67:
 3836 0483 55534246 		.ascii	"USBFS_EnableOutEP\000"
 3836      535F456E 
 3836      61626C65 
 3836      4F757445 
 3836      5000
 3837              	.LASF64:
 3838 0495 55534246 		.ascii	"USBFS_LoadInEP\000"
 3838      535F4C6F 
 3838      6164496E 
 3838      455000
 3839              	.LASF26:
 3840 04a4 62756666 		.ascii	"bufferSize\000"
 3840      65725369 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 117


 3840      7A6500
 3841              	.LASF56:
 3842 04af 55534246 		.ascii	"USBFS_CheckActivity\000"
 3842      535F4368 
 3842      65636B41 
 3842      63746976 
 3842      69747900 
 3843              	.LASF97:
 3844 04c3 4379496E 		.ascii	"CyIntSetVector\000"
 3844      74536574 
 3844      56656374 
 3844      6F7200
 3845              	.LASF57:
 3846 04d2 55534246 		.ascii	"USBFS_IsConfigurationChanged\000"
 3846      535F4973 
 3846      436F6E66 
 3846      69677572 
 3846      6174696F 
 3847              	.LASF69:
 3848 04ef 55534246 		.ascii	"USBFS_DisableOutEP\000"
 3848      535F4469 
 3848      7361626C 
 3848      654F7574 
 3848      455000
 3849              	.LASF75:
 3850 0502 55534246 		.ascii	"USBFS_RWUEnabled\000"
 3850      535F5257 
 3850      55456E61 
 3850      626C6564 
 3850      00
 3851              	.LASF13:
 3852 0513 646F7562 		.ascii	"double\000"
 3852      6C6500
 3853              	.LASF86:
 3854 051a 55534246 		.ascii	"USBFS_deviceStatus\000"
 3854      535F6465 
 3854      76696365 
 3854      53746174 
 3854      757300
 3855              	.LASF52:
 3856 052d 55534246 		.ascii	"USBFS_Start\000"
 3856      535F5374 
 3856      61727400 
 3857              	.LASF40:
 3858 0539 72775261 		.ascii	"rwRaMsb\000"
 3858      4D736200 
 3859              	.LASF38:
 3860 0541 72775761 		.ascii	"rwWaMsb\000"
 3860      4D736200 
 3861              	.LASF100:
 3862 0549 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3862      43313120 
 3862      352E342E 
 3862      31203230 
 3862      31363036 
 3863 057c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3863      20726576 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc8tpVDe.s 			page 118


 3863      6973696F 
 3863      6E203233 
 3863      37373135 
 3864 05af 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3864      66756E63 
 3864      74696F6E 
 3864      2D736563 
 3864      74696F6E 
 3865              	.LASF47:
 3866 05d7 55534246 		.ascii	"USBFS_Init\000"
 3866      535F496E 
 3866      697400
 3867              	.LASF71:
 3868 05e2 62537461 		.ascii	"bState\000"
 3868      746500
 3869              	.LASF92:
 3870 05e9 55534246 		.ascii	"USBFS_lastPacketSize\000"
 3870      535F6C61 
 3870      73745061 
 3870      636B6574 
 3870      53697A65 
 3871              	.LASF89:
 3872 05fe 55534246 		.ascii	"USBFS_interfaceSetting\000"
 3872      535F696E 
 3872      74657266 
 3872      61636553 
 3872      65747469 
 3873              	.LASF51:
 3874 0615 656E6162 		.ascii	"enableInterrupts\000"
 3874      6C65496E 
 3874      74657272 
 3874      75707473 
 3874      00
 3875              	.LASF78:
 3876 0626 55534246 		.ascii	"USBFS_GetDeviceAddress\000"
 3876      535F4765 
 3876      74446576 
 3876      69636541 
 3876      64647265 
 3877              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
