ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_1_Init, %function
  25              	USBFS_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_1.c"
   1:Generated_Source\PSoC5/USBFS_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_1.c **** * \file USBFS_1.c
   3:Generated_Source\PSoC5/USBFS_1.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS_1.c **** *
   5:Generated_Source\PSoC5/USBFS_1.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_1.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBFS_1.c **** *
   8:Generated_Source\PSoC5/USBFS_1.c **** * Note:
   9:Generated_Source\PSoC5/USBFS_1.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBFS_1.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBFS_1.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBFS_1.c **** *
  13:Generated_Source\PSoC5/USBFS_1.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBFS_1.c **** * \copyright
  15:Generated_Source\PSoC5/USBFS_1.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBFS_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBFS_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBFS_1.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBFS_1.c **** 
  21:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_pvt.h"
  22:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_cydmac.h"
  23:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_hid.h"
  24:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_Dp.h"
  25:Generated_Source\PSoC5/USBFS_1.c **** 
  26:Generated_Source\PSoC5/USBFS_1.c **** 
  27:Generated_Source\PSoC5/USBFS_1.c **** /***************************************
  28:Generated_Source\PSoC5/USBFS_1.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBFS_1.c **** ***************************************/
  30:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 2


  31:Generated_Source\PSoC5/USBFS_1.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBFS_1.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBFS_1.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBFS_1.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBFS_1.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBFS_1.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBFS_1.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBFS_1.c **** * functions.
  39:Generated_Source\PSoC5/USBFS_1.c **** */
  40:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_initVar = 0u;
  41:Generated_Source\PSoC5/USBFS_1.c **** 
  42:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBFS_1.c ****         static void USBFS_1_InitEpDma(void);
  45:Generated_Source\PSoC5/USBFS_1.c **** 
  46:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 USBFS_1_DmaChan[USBFS_1_MAX_EP] =
  48:Generated_Source\PSoC5/USBFS_1.c ****         {
  49:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  50:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  51:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  52:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  53:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  54:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  55:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  56:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  57:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  58:Generated_Source\PSoC5/USBFS_1.c ****         };        
  59:Generated_Source\PSoC5/USBFS_1.c ****     #else
  60:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaChan[USBFS_1_MAX_EP];
  62:Generated_Source\PSoC5/USBFS_1.c ****         
  63:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaTd[USBFS_1_MAX_EP];
  65:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBFS_1.c **** 
  68:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBFS_1.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpBurstCnt   [USBFS_1_MAX_EP];
  72:Generated_Source\PSoC5/USBFS_1.c ****     
  73:Generated_Source\PSoC5/USBFS_1.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpLastBurstEl[USBFS_1_MAX_EP];
  75:Generated_Source\PSoC5/USBFS_1.c **** 
  76:Generated_Source\PSoC5/USBFS_1.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpBurstCntBackup  [USBFS_1_MAX_EP];
  78:Generated_Source\PSoC5/USBFS_1.c ****     uint32 USBFS_1_DmaEpBufferAddrBackup[USBFS_1_MAX_EP];
  79:Generated_Source\PSoC5/USBFS_1.c ****      
  80:Generated_Source\PSoC5/USBFS_1.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBFS_1.c ****     const uint8 USBFS_1_DmaReqOut[USBFS_1_MAX_EP] =
  82:Generated_Source\PSoC5/USBFS_1.c ****     {
  83:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  84:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  86:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  87:Generated_Source\PSoC5/USBFS_1.c ****         0u,
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 3


  88:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  89:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  90:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  91:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  92:Generated_Source\PSoC5/USBFS_1.c ****     };
  93:Generated_Source\PSoC5/USBFS_1.c **** 
  94:Generated_Source\PSoC5/USBFS_1.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBFS_1.c ****     const uint8 USBFS_1_DmaBurstEndOut[USBFS_1_MAX_EP] =
  96:Generated_Source\PSoC5/USBFS_1.c ****     {
  97:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  98:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBFS_1.c ****     };
 107:Generated_Source\PSoC5/USBFS_1.c ****     
 108:Generated_Source\PSoC5/USBFS_1.c **** #else
 109:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBFS_1.c ****         static uint8 clearInDataRdyStatus = USBFS_1_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaNextTd[USBFS_1_MAX_EP];
 112:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 USBFS_1_epX_TD_TERMOUT_EN[USBFS_1_MAX_EP] =
 113:Generated_Source\PSoC5/USBFS_1.c ****         {
 114:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 115:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 116:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 117:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 118:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 119:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 120:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 121:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 122:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 123:Generated_Source\PSoC5/USBFS_1.c ****         };
 124:Generated_Source\PSoC5/USBFS_1.c **** 
 125:Generated_Source\PSoC5/USBFS_1.c ****         volatile uint16 USBFS_1_inLength[USBFS_1_MAX_EP];
 126:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 *USBFS_1_inDataPointer[USBFS_1_MAX_EP];
 127:Generated_Source\PSoC5/USBFS_1.c ****         volatile uint8 USBFS_1_inBufFull[USBFS_1_MAX_EP];
 128:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBFS_1.c **** 
 132:Generated_Source\PSoC5/USBFS_1.c **** 
 133:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Start
 135:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBFS_1.c **** *
 137:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBFS_1.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBFS_1.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBFS_1.c **** *   operation.
 141:Generated_Source\PSoC5/USBFS_1.c **** *
 142:Generated_Source\PSoC5/USBFS_1.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBFS_1.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 4


 145:Generated_Source\PSoC5/USBFS_1.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBFS_1.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBFS_1.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBFS_1.c **** *
 149:Generated_Source\PSoC5/USBFS_1.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBFS_1.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBFS_1.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBFS_1.c **** *
 153:Generated_Source\PSoC5/USBFS_1.c **** *  \param device
 154:Generated_Source\PSoC5/USBFS_1.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBFS_1.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBFS_1.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBFS_1.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBFS_1.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBFS_1.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBFS_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBFS_1.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBFS_1.c **** *   following list.
 163:Generated_Source\PSoC5/USBFS_1.c **** *
 164:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBFS_1.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBFS_1.c **** *
 167:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBFS_1.c **** *
 170:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBFS_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBFS_1.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 177:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_initVar
 178:Generated_Source\PSoC5/USBFS_1.c **** *
 179:Generated_Source\PSoC5/USBFS_1.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBFS_1.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBFS_1.c **** *
 182:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 183:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 184:Generated_Source\PSoC5/USBFS_1.c **** *
 185:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBFS_1.c **** {
 188:Generated_Source\PSoC5/USBFS_1.c ****     if (0u == USBFS_1_initVar)
 189:Generated_Source\PSoC5/USBFS_1.c ****     {
 190:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_Init();
 191:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_initVar = 1u;
 192:Generated_Source\PSoC5/USBFS_1.c ****     }
 193:Generated_Source\PSoC5/USBFS_1.c **** 
 194:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBFS_1.c **** }
 196:Generated_Source\PSoC5/USBFS_1.c **** 
 197:Generated_Source\PSoC5/USBFS_1.c **** 
 198:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Init
 200:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 5


 202:Generated_Source\PSoC5/USBFS_1.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBFS_1.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBFS_1.c **** * USBFS_1_Init() because the USBFS_1_Start() routine calls
 205:Generated_Source\PSoC5/USBFS_1.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBFS_1.c **** *
 207:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 208:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 209:Generated_Source\PSoC5/USBFS_1.c **** *
 210:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Init(void) 
 212:Generated_Source\PSoC5/USBFS_1.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USB_CLK_EN_REG = USBFS_1_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBFS_1.c **** 
 217:Generated_Source\PSoC5/USBFS_1.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBFS_1.c ****     * USBFS_1_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBFS_1.c ****     */
 220:Generated_Source\PSoC5/USBFS_1.c **** 
 221:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= ~ (uint32) USBFS_1_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBFS_1.c **** 
 224:Generated_Source\PSoC5/USBFS_1.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_BUS_RST_CNT_REG = USBFS_1_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBFS_1.c **** 
 227:Generated_Source\PSoC5/USBFS_1.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBFS_1.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBFS_1.c ****     */
 230:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG = USBFS_1_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBFS_1.c **** 
 232:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG |= USBFS_1_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBFS_1.c **** 
 235:Generated_Source\PSoC5/USBFS_1.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBFS_1.c **** 
 240:Generated_Source\PSoC5/USBFS_1.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = USBFS_1_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBFS_1.c **** 
 243:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_LVL_SEL_REG = USBFS_1_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBFS_1.c **** 
 246:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 6


 247:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG = USBFS_1_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBFS_1.c **** 
 249:Generated_Source\PSoC5/USBFS_1.c **** #else
 250:Generated_Source\PSoC5/USBFS_1.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0646     		mov	r6, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USBFS_1.c **** 
 252:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBFS_1.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBFS_1.c **** 
 256:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_ACT_CFG_REG |= USBFS_1_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 344A     		ldr	r2, .L3
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_STBY_CFG_REG |= USBFS_1_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBFS_1.c **** 
 261:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USB_CLK_EN_REG = USBFS_1_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0125     		movs	r5, #1
  57 001e 304B     		ldr	r3, .L3+4
  58 0020 1D70     		strb	r5, [r3]
 263:Generated_Source\PSoC5/USBFS_1.c **** 
 264:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = USBFS_1_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0227     		movs	r7, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1F70     		strb	r7, [r3]
 265:Generated_Source\PSoC5/USBFS_1.c **** 
 266:Generated_Source\PSoC5/USBFS_1.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR0_REG &= (uint8) ~USBFS_1_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 7


 271:Generated_Source\PSoC5/USBFS_1.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBFS_1.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBFS_1.c ****     */
 274:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG &= (uint8) ~(USBFS_1_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 294C     		ldr	r4, .L3+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USBFS_1.c ****                                                  USBFS_1_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBFS_1.c **** 
 277:Generated_Source\PSoC5/USBFS_1.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= (uint8) ~USBFS_1_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 284A     		ldr	r2, .L3+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBFS_1.c **** 
 280:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 2B43     		orrs	r3, r3, r5
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USBFS_1.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 2846     		mov	r0, r5
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USBFS_1.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DM_INP_DIS_REG &= (uint8) ~USBFS_1_DM_MASK;
  95              		.loc 1 287 0
  96 0062 224B     		ldr	r3, .L3+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DP_INP_DIS_REG &= (uint8) ~USBFS_1_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USBFS_1.c **** 
 290:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 3B43     		orrs	r3, r3, r7
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 8


 108              		.loc 1 292 0
 109 007a 3846     		mov	r0, r7
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USBFS_1.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USBFS_1.c **** 
 296:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBFS_1.c ****     CY_SET_REG8(USBFS_1_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0023     		movs	r3, #0
 118 008a 194A     		ldr	r2, .L3+20
 119 008c 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USBFS_1.c ****     CY_SET_REG8(USBFS_1_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0132     		adds	r2, r2, #1
 122 0090 1370     		strb	r3, [r2]
 299:Generated_Source\PSoC5/USBFS_1.c **** 
 300:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBFS_1.c ****     {
 304:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBFS_1.c **** 
 306:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBFS_1.c ****     }
 310:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBFS_1.c **** 
 312:Generated_Source\PSoC5/USBFS_1.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 312 0
 124 0092 3046     		mov	r0, r6
 125 0094 FFF7FEFF 		bl	CyExitCriticalSection
 126              	.LVL6:
 313:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBFS_1.c **** 
 315:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_HI_VECT_NUM,  USBFS_1_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_HI_VECT_NUM, &USBFS_1_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBFS_1.c **** 
 321:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_LO_VECT_NUM,  USBFS_1_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_LO_VECT_NUM, &USBFS_1_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBFS_1.c **** 
 325:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_MED_VECT_NUM,  USBFS_1_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_MED_VECT_NUM, &USBFS_1_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBFS_1.c **** 
 329:Generated_Source\PSoC5/USBFS_1.c **** #else
 330:Generated_Source\PSoC5/USBFS_1.c ****     /* Set bus reset interrupt. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 9


 331:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority(USBFS_1_BUS_RESET_VECT_NUM, USBFS_1_BUS_RESET_PRIOR);
 127              		.loc 1 331 0
 128 0098 0721     		movs	r1, #7
 129 009a 1720     		movs	r0, #23
 130 009c FFF7FEFF 		bl	CyIntSetPriority
 131              	.LVL7:
 332:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_BUS_RESET_VECT_NUM,   &USBFS_1_BUS_RESET_ISR);
 132              		.loc 1 332 0
 133 00a0 1449     		ldr	r1, .L3+24
 134 00a2 1720     		movs	r0, #23
 135 00a4 FFF7FEFF 		bl	CyIntSetVector
 136              	.LVL8:
 333:Generated_Source\PSoC5/USBFS_1.c **** 
 334:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority(USBFS_1_EP_0_VECT_NUM, USBFS_1_EP_0_PRIOR);
 137              		.loc 1 335 0
 138 00a8 0721     		movs	r1, #7
 139 00aa 1820     		movs	r0, #24
 140 00ac FFF7FEFF 		bl	CyIntSetPriority
 141              	.LVL9:
 336:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_EP_0_VECT_NUM,   &USBFS_1_EP_0_ISR);
 142              		.loc 1 336 0
 143 00b0 1149     		ldr	r1, .L3+28
 144 00b2 1820     		movs	r0, #24
 145 00b4 FFF7FEFF 		bl	CyIntSetVector
 146              	.LVL10:
 337:Generated_Source\PSoC5/USBFS_1.c **** 
 338:Generated_Source\PSoC5/USBFS_1.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_SOF_VECT_NUM,  USBFS_1_SOF_PRIOR);
 341:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_SOF_VECT_NUM, &USBFS_1_SOF_ISR);
 342:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBFS_1.c **** 
 344:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_1_VECT_NUM,  USBFS_1_EP_1_PRIOR);
 147              		.loc 1 346 0
 148 00b8 0721     		movs	r1, #7
 149 00ba 2846     		mov	r0, r5
 150 00bc FFF7FEFF 		bl	CyIntSetPriority
 151              	.LVL11:
 347:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_1_VECT_NUM,  &USBFS_1_EP_1_ISR);
 152              		.loc 1 347 0
 153 00c0 0E49     		ldr	r1, .L3+32
 154 00c2 2846     		mov	r0, r5
 155 00c4 FFF7FEFF 		bl	CyIntSetVector
 156              	.LVL12:
 348:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBFS_1.c **** 
 350:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_2_VECT_NUM,  USBFS_1_EP_2_PRIOR);
 353:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_2_VECT_NUM, &USBFS_1_EP_2_ISR);
 354:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBFS_1.c **** 
 356:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 10


 358:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_3_VECT_NUM,  USBFS_1_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_3_VECT_NUM, &USBFS_1_EP_3_ISR);
 360:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBFS_1.c **** 
 362:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_4_VECT_NUM,  USBFS_1_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_4_VECT_NUM, &USBFS_1_EP_4_ISR);
 366:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBFS_1.c **** 
 368:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_5_VECT_NUM,  USBFS_1_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_5_VECT_NUM, &USBFS_1_EP_5_ISR);
 372:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBFS_1.c **** 
 374:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_6_VECT_NUM,  USBFS_1_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_6_VECT_NUM, &USBFS_1_EP_6_ISR);
 378:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBFS_1.c **** 
 380:Generated_Source\PSoC5/USBFS_1.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_7_VECT_NUM,  USBFS_1_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_7_VECT_NUM, &USBFS_1_EP_7_ISR);
 384:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBFS_1.c **** 
 386:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_8_VECT_NUM,  USBFS_1_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_8_VECT_NUM, &USBFS_1_EP_8_ISR);
 390:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBFS_1.c **** 
 392:Generated_Source\PSoC5/USBFS_1.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_ARB_VECT_NUM,  USBFS_1_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_ARB_VECT_NUM, &USBFS_1_ARB_ISR);
 396:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBFS_1.c **** 
 399:Generated_Source\PSoC5/USBFS_1.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_DP_INTC_VECT_NUM,  USBFS_1_DP_INTC_PRIORITY);
 157              		.loc 1 401 0
 158 00c8 0721     		movs	r1, #7
 159 00ca 0C20     		movs	r0, #12
 160 00cc FFF7FEFF 		bl	CyIntSetPriority
 161              	.LVL13:
 402:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_DP_INTC_VECT_NUM, &USBFS_1_DP_ISR);
 162              		.loc 1 402 0
 163 00d0 0B49     		ldr	r1, .L3+36
 164 00d2 0C20     		movs	r0, #12
 165 00d4 FFF7FEFF 		bl	CyIntSetVector
 166              	.LVL14:
 167 00d8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 168              	.LVL15:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 11


 169              	.L4:
 170 00da 00BF     		.align	2
 171              	.L3:
 172 00dc A5430040 		.word	1073759141
 173 00e0 9D600040 		.word	1073766557
 174 00e4 94430040 		.word	1073759124
 175 00e8 12600040 		.word	1073766418
 176 00ec F8510040 		.word	1073762808
 177 00f0 84600040 		.word	1073766532
 178 00f4 00000000 		.word	USBFS_1_BUS_RESET_ISR
 179 00f8 00000000 		.word	USBFS_1_EP_0_ISR
 180 00fc 00000000 		.word	USBFS_1_EP_1_ISR
 181 0100 00000000 		.word	USBFS_1_DP_ISR
 182              		.cfi_endproc
 183              	.LFE1:
 184              		.size	USBFS_1_Init, .-USBFS_1_Init
 185              		.section	.text.USBFS_1_InitComponent,"ax",%progbits
 186              		.align	2
 187              		.global	USBFS_1_InitComponent
 188              		.thumb
 189              		.thumb_func
 190              		.type	USBFS_1_InitComponent, %function
 191              	USBFS_1_InitComponent:
 192              	.LFB2:
 403:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBFS_1.c **** 
 405:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_InitEpDma();
 408:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBFS_1.c **** }
 410:Generated_Source\PSoC5/USBFS_1.c **** 
 411:Generated_Source\PSoC5/USBFS_1.c **** 
 412:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_InitComponent
 414:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBFS_1.c **** *
 416:Generated_Source\PSoC5/USBFS_1.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBFS_1.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBFS_1.c **** *
 419:Generated_Source\PSoC5/USBFS_1.c **** * \param device:
 420:Generated_Source\PSoC5/USBFS_1.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBFS_1.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBFS_1.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBFS_1.c **** *   field.
 424:Generated_Source\PSoC5/USBFS_1.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBFS_1.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBFS_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBFS_1.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBFS_1.c **** *   following list.
 429:Generated_Source\PSoC5/USBFS_1.c **** *
 430:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBFS_1.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBFS_1.c **** *
 433:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 12


 436:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBFS_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBFS_1.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBFS_1.c **** *
 443:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 444:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_device
 445:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_transferState
 446:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configuration
 447:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceStatus
 448:Generated_Source\PSoC5/USBFS_1.c **** *
 449:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBFS_1.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBFS_1.c **** *
 454:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBFS_1.c **** *
 456:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 457:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 458:Generated_Source\PSoC5/USBFS_1.c **** *
 459:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBFS_1.c **** {
 193              		.loc 1 461 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL16:
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202              	.LVL17:
 462:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBFS_1.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBFS_1.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBFS_1.c ****     */
 466:Generated_Source\PSoC5/USBFS_1.c **** #if defined(USBFS_1_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBFS_1.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBFS_1.c **** 
 469:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_INTERFACES_NUMBER; i++)
 203              		.loc 1 469 0
 204 0002 0023     		movs	r3, #0
 205 0004 04E0     		b	.L6
 206              	.LVL18:
 207              	.L7:
 470:Generated_Source\PSoC5/USBFS_1.c ****     {
 471:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_hidProtocol[i] = USBFS_1_PROTOCOL_REPORT;
 208              		.loc 1 471 0 discriminator 3
 209 0006 0124     		movs	r4, #1
 210 0008 204A     		ldr	r2, .L14
 211 000a D454     		strb	r4, [r2, r3]
 469:Generated_Source\PSoC5/USBFS_1.c ****     {
 212              		.loc 1 469 0 discriminator 3
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 13


 213 000c 2344     		add	r3, r3, r4
 214              	.LVL19:
 215 000e DBB2     		uxtb	r3, r3
 216              	.LVL20:
 217              	.L6:
 469:Generated_Source\PSoC5/USBFS_1.c ****     {
 218              		.loc 1 469 0 is_stmt 0 discriminator 1
 219 0010 002B     		cmp	r3, #0
 220 0012 F8D0     		beq	.L7
 472:Generated_Source\PSoC5/USBFS_1.c ****     }
 473:Generated_Source\PSoC5/USBFS_1.c **** #endif /* USBFS_1_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBFS_1.c **** 
 475:Generated_Source\PSoC5/USBFS_1.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_device = device;
 221              		.loc 1 476 0 is_stmt 1
 222 0014 1E4B     		ldr	r3, .L14+4
 223              	.LVL21:
 224 0016 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBFS_1.c **** 
 478:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_transferState   = USBFS_1_TRANS_STATE_IDLE;
 225              		.loc 1 479 0
 226 0018 0023     		movs	r3, #0
 227 001a 1E4A     		ldr	r2, .L14+8
 228 001c 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 229              		.loc 1 480 0
 230 001e 1E4A     		ldr	r2, .L14+12
 231 0020 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 232              		.loc 1 481 0
 233 0022 1E4A     		ldr	r2, .L14+16
 234 0024 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 235              		.loc 1 482 0
 236 0026 1E4A     		ldr	r2, .L14+20
 237 0028 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 238              		.loc 1 483 0
 239 002a 1E4A     		ldr	r2, .L14+24
 240 002c 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 241              		.loc 1 484 0
 242 002e 1E4A     		ldr	r2, .L14+28
 243 0030 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_lastPacketSize  = 0u;
 244              		.loc 1 485 0
 245 0032 1E4A     		ldr	r2, .L14+32
 246 0034 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBFS_1.c **** 
 487:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBFS_1.c **** #else
 493:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_BUS_RESET_VECT_NUM);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 14


 247              		.loc 1 493 0
 248 0036 1E4B     		ldr	r3, .L14+36
 249 0038 4FF40002 		mov	r2, #8388608
 250 003c 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_EP_0_VECT_NUM);
 251              		.loc 1 494 0
 252 003e 4FF08072 		mov	r2, #16777216
 253 0042 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBFS_1.c **** 
 496:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_SOF_VECT_NUM);
 498:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBFS_1.c **** 
 500:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_1_VECT_NUM);
 254              		.loc 1 501 0
 255 0044 0222     		movs	r2, #2
 256 0046 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBFS_1.c **** 
 504:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_2_VECT_NUM);
 506:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBFS_1.c **** 
 508:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBFS_1.c **** 
 512:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBFS_1.c **** 
 516:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBFS_1.c **** 
 520:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* USBFS_1_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBFS_1.c **** 
 524:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBFS_1.c **** 
 528:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBFS_1.c **** 
 533:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_ARB_INT_EN_REG = USBFS_1_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBFS_1.c **** 
 537:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBFS_1.c **** #endif   /* (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE) */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 15


 541:Generated_Source\PSoC5/USBFS_1.c **** 
 542:Generated_Source\PSoC5/USBFS_1.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_ARB_CFG_REG = USBFS_1_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBFS_1.c **** 
 547:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBFS_1.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBFS_1.c **** 
 551:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_1.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBFS_1.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBFS_1_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBFS_1.c **** 
 557:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBFS_1.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBFS_1.c ****         #else
 562:Generated_Source\PSoC5/USBFS_1.c ****             #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBFS_1.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP_DMA_Done_isr_StartEx(&USBFS_1_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBFS_1.c **** 
 572:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBFS_1.c ****     switch(mode)
 257              		.loc 1 573 0
 258 0048 11B1     		cbz	r1, .L9
 259 004a 0129     		cmp	r1, #1
 260 004c 06D0     		beq	.L10
 261 004e 0BE0     		b	.L12
 262              	.L9:
 574:Generated_Source\PSoC5/USBFS_1.c ****     {
 575:Generated_Source\PSoC5/USBFS_1.c ****     case USBFS_1_3V_OPERATION:
 576:Generated_Source\PSoC5/USBFS_1.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG &= (uint8) ~USBFS_1_CR1_REG_ENABLE;
 263              		.loc 1 577 0
 264 0050 184A     		ldr	r2, .L14+40
 265 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 266 0054 03F0FE03 		and	r3, r3, #254
 267 0058 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBFS_1.c ****         break;
 268              		.loc 1 578 0
 269 005a 0AE0     		b	.L11
 270              	.L10:
 579:Generated_Source\PSoC5/USBFS_1.c **** 
 580:Generated_Source\PSoC5/USBFS_1.c ****     case USBFS_1_5V_OPERATION:
 581:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG |= (uint8)  USBFS_1_CR1_REG_ENABLE;
 271              		.loc 1 582 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 16


 272 005c 154A     		ldr	r2, .L14+40
 273 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 274 0060 43F00103 		orr	r3, r3, #1
 275 0064 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBFS_1.c ****         break;
 276              		.loc 1 583 0
 277 0066 04E0     		b	.L11
 278              	.L12:
 584:Generated_Source\PSoC5/USBFS_1.c **** 
 585:Generated_Source\PSoC5/USBFS_1.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_VDDD_MV < USBFS_1_3500MV)
 587:Generated_Source\PSoC5/USBFS_1.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG &= (uint8) ~USBFS_1_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBFS_1.c ****     #else
 590:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG |= (uint8)  USBFS_1_CR1_REG_ENABLE;
 279              		.loc 1 591 0
 280 0068 124A     		ldr	r2, .L14+40
 281 006a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 282 006c 43F00103 		orr	r3, r3, #1
 283 0070 1370     		strb	r3, [r2]
 284              	.L11:
 592:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_VDDD_MV < USBFS_1_3500MV) */
 593:Generated_Source\PSoC5/USBFS_1.c ****         break;
 594:Generated_Source\PSoC5/USBFS_1.c ****     }
 595:Generated_Source\PSoC5/USBFS_1.c **** 
 596:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG &= (uint32) ~USBFS_1_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBFS_1.c **** 
 600:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CNT_REG = USBFS_1_CLEAR_REG;
 602:Generated_Source\PSoC5/USBFS_1.c **** 
 603:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBFS_1.c **** 
 606:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != USBFS_1_GetBOSPtr())
 608:Generated_Source\PSoC5/USBFS_1.c ****         {
 609:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBFS_1.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBFS_1.c ****             */
 612:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_LPM_CTRL_REG = (USBFS_1_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBFS_1.c ****                                              USBFS_1_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBFS_1.c ****         }
 615:Generated_Source\PSoC5/USBFS_1.c ****         else
 616:Generated_Source\PSoC5/USBFS_1.c ****         {
 617:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_LPM_CTRL_REG &= (uint32) ~USBFS_1_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBFS_1.c ****         }
 620:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBFS_1.c **** 
 622:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBFS_1.c **** 
 625:Generated_Source\PSoC5/USBFS_1.c **** #else
 626:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 17


 627:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_STALL_IN_OUT;
 285              		.loc 1 627 0
 286 0072 0322     		movs	r2, #3
 287 0074 104B     		ldr	r3, .L14+44
 288 0076 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBFS_1.c **** 
 629:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 289              		.loc 1 630 0
 290 0078 8022     		movs	r2, #128
 291 007a 203B     		subs	r3, r3, #32
 292 007c 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayCycles(USBFS_1_WAIT_CR0_REG_STABILITY);
 293              		.loc 1 631 0
 294 007e 0120     		movs	r0, #1
 295              	.LVL22:
 296 0080 FFF7FEFF 		bl	CyDelayCycles
 297              	.LVL23:
 632:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBFS_1.c **** 
 634:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG = USBFS_1_USBIO_CR1_USBPUEN;
 298              		.loc 1 635 0
 299 0084 0422     		movs	r2, #4
 300 0086 0D4B     		ldr	r3, .L14+48
 301 0088 1A70     		strb	r2, [r3]
 302 008a 10BD     		pop	{r4, pc}
 303              	.L15:
 304              		.align	2
 305              	.L14:
 306 008c 00000000 		.word	USBFS_1_hidProtocol
 307 0090 00000000 		.word	USBFS_1_device
 308 0094 00000000 		.word	USBFS_1_transferState
 309 0098 00000000 		.word	USBFS_1_configurationChanged
 310 009c 00000000 		.word	USBFS_1_configuration
 311 00a0 00000000 		.word	USBFS_1_interfaceNumber
 312 00a4 00000000 		.word	USBFS_1_deviceAddress
 313 00a8 00000000 		.word	USBFS_1_deviceStatus
 314 00ac 00000000 		.word	USBFS_1_lastPacketSize
 315 00b0 00E100E0 		.word	-536813312
 316 00b4 09600040 		.word	1073766409
 317 00b8 28600040 		.word	1073766440
 318 00bc 12600040 		.word	1073766418
 319              		.cfi_endproc
 320              	.LFE2:
 321              		.size	USBFS_1_InitComponent, .-USBFS_1_InitComponent
 322              		.section	.text.USBFS_1_Start,"ax",%progbits
 323              		.align	2
 324              		.global	USBFS_1_Start
 325              		.thumb
 326              		.thumb_func
 327              		.type	USBFS_1_Start, %function
 328              	USBFS_1_Start:
 329              	.LFB0:
 187:Generated_Source\PSoC5/USBFS_1.c ****     if (0u == USBFS_1_initVar)
 330              		.loc 1 187 0
 331              		.cfi_startproc
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 18


 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              	.LVL24:
 335 0000 38B5     		push	{r3, r4, r5, lr}
 336              		.cfi_def_cfa_offset 16
 337              		.cfi_offset 3, -16
 338              		.cfi_offset 4, -12
 339              		.cfi_offset 5, -8
 340              		.cfi_offset 14, -4
 341 0002 0446     		mov	r4, r0
 342 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBFS_1.c ****     {
 343              		.loc 1 188 0
 344 0006 064B     		ldr	r3, .L19
 345 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346 000a 23B9     		cbnz	r3, .L17
 190:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_initVar = 1u;
 347              		.loc 1 190 0
 348 000c FFF7FEFF 		bl	USBFS_1_Init
 349              	.LVL25:
 191:Generated_Source\PSoC5/USBFS_1.c ****     }
 350              		.loc 1 191 0
 351 0010 0122     		movs	r2, #1
 352 0012 034B     		ldr	r3, .L19
 353 0014 1A70     		strb	r2, [r3]
 354              	.L17:
 194:Generated_Source\PSoC5/USBFS_1.c **** }
 355              		.loc 1 194 0
 356 0016 2946     		mov	r1, r5
 357 0018 2046     		mov	r0, r4
 358 001a FFF7FEFF 		bl	USBFS_1_InitComponent
 359              	.LVL26:
 360 001e 38BD     		pop	{r3, r4, r5, pc}
 361              	.L20:
 362              		.align	2
 363              	.L19:
 364 0020 00000000 		.word	.LANCHOR0
 365              		.cfi_endproc
 366              	.LFE0:
 367              		.size	USBFS_1_Start, .-USBFS_1_Start
 368              		.section	.text.USBFS_1_ReInitComponent,"ax",%progbits
 369              		.align	2
 370              		.global	USBFS_1_ReInitComponent
 371              		.thumb
 372              		.thumb_func
 373              		.type	USBFS_1_ReInitComponent, %function
 374              	USBFS_1_ReInitComponent:
 375              	.LFB3:
 636:Generated_Source\PSoC5/USBFS_1.c **** }
 637:Generated_Source\PSoC5/USBFS_1.c **** 
 638:Generated_Source\PSoC5/USBFS_1.c **** 
 639:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReInitComponent
 641:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBFS_1.c **** *
 643:Generated_Source\PSoC5/USBFS_1.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBFS_1.c **** *  intend to be called from the Reset interrupt.
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 19


 645:Generated_Source\PSoC5/USBFS_1.c **** *
 646:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 647:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBFS_1.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBFS_1.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBFS_1.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBFS_1.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBFS_1.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBFS_1.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBFS_1.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBFS_1.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBFS_1.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBFS_1.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBFS_1.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBFS_1.c **** *
 667:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 668:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 669:Generated_Source\PSoC5/USBFS_1.c **** *
 670:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBFS_1.c **** {
 376              		.loc 1 672 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381              	.LVL27:
 673:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBFS_1.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBFS_1.c ****     */
 676:Generated_Source\PSoC5/USBFS_1.c **** #if defined(USBFS_1_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBFS_1.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBFS_1.c **** 
 679:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_INTERFACES_NUMBER; i++)
 382              		.loc 1 679 0
 383 0000 0023     		movs	r3, #0
 384 0002 04E0     		b	.L22
 385              	.LVL28:
 386              	.L23:
 680:Generated_Source\PSoC5/USBFS_1.c ****     {
 681:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_hidProtocol[i] = USBFS_1_PROTOCOL_REPORT;
 387              		.loc 1 681 0 discriminator 3
 388 0004 0121     		movs	r1, #1
 389 0006 0E4A     		ldr	r2, .L24
 390 0008 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC5/USBFS_1.c ****     {
 391              		.loc 1 679 0 discriminator 3
 392 000a 0B44     		add	r3, r3, r1
 393              	.LVL29:
 394 000c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 20


 395              	.LVL30:
 396              	.L22:
 679:Generated_Source\PSoC5/USBFS_1.c ****     {
 397              		.loc 1 679 0 is_stmt 0 discriminator 1
 398 000e 002B     		cmp	r3, #0
 399 0010 F8D0     		beq	.L23
 682:Generated_Source\PSoC5/USBFS_1.c ****     }
 683:Generated_Source\PSoC5/USBFS_1.c **** #endif /* USBFS_1_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBFS_1.c **** 
 685:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_transferState   = USBFS_1_TRANS_STATE_IDLE;
 400              		.loc 1 686 0 is_stmt 1
 401 0012 0023     		movs	r3, #0
 402              	.LVL31:
 403 0014 0B4A     		ldr	r2, .L24+4
 404 0016 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 405              		.loc 1 687 0
 406 0018 0B4A     		ldr	r2, .L24+8
 407 001a 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 408              		.loc 1 688 0
 409 001c 0B4A     		ldr	r2, .L24+12
 410 001e 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 411              		.loc 1 689 0
 412 0020 0B4A     		ldr	r2, .L24+16
 413 0022 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 414              		.loc 1 690 0
 415 0024 0B4A     		ldr	r2, .L24+20
 416 0026 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 417              		.loc 1 691 0
 418 0028 0B4A     		ldr	r2, .L24+24
 419 002a 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_lastPacketSize  = 0u;
 420              		.loc 1 692 0
 421 002c 0B4A     		ldr	r2, .L24+28
 422 002e 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBFS_1.c **** 
 694:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBFS_1.c **** #else
 698:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_STALL_IN_OUT;
 423              		.loc 1 699 0
 424 0030 0322     		movs	r2, #3
 425 0032 0B4B     		ldr	r3, .L24+32
 426 0034 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBFS_1.c **** 
 702:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 427              		.loc 1 703 0
 428 0036 8022     		movs	r2, #128
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 21


 429 0038 203B     		subs	r3, r3, #32
 430 003a 1A70     		strb	r2, [r3]
 431 003c 7047     		bx	lr
 432              	.L25:
 433 003e 00BF     		.align	2
 434              	.L24:
 435 0040 00000000 		.word	USBFS_1_hidProtocol
 436 0044 00000000 		.word	USBFS_1_transferState
 437 0048 00000000 		.word	USBFS_1_configurationChanged
 438 004c 00000000 		.word	USBFS_1_configuration
 439 0050 00000000 		.word	USBFS_1_interfaceNumber
 440 0054 00000000 		.word	USBFS_1_deviceAddress
 441 0058 00000000 		.word	USBFS_1_deviceStatus
 442 005c 00000000 		.word	USBFS_1_lastPacketSize
 443 0060 28600040 		.word	1073766440
 444              		.cfi_endproc
 445              	.LFE3:
 446              		.size	USBFS_1_ReInitComponent, .-USBFS_1_ReInitComponent
 447              		.section	.text.USBFS_1_Stop,"ax",%progbits
 448              		.align	2
 449              		.global	USBFS_1_Stop
 450              		.thumb
 451              		.thumb_func
 452              		.type	USBFS_1_Stop, %function
 453              	USBFS_1_Stop:
 454              	.LFB4:
 704:Generated_Source\PSoC5/USBFS_1.c **** }
 705:Generated_Source\PSoC5/USBFS_1.c **** 
 706:Generated_Source\PSoC5/USBFS_1.c **** 
 707:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Stop
 709:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBFS_1.c **** *
 711:Generated_Source\PSoC5/USBFS_1.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBFS_1.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBFS_1.c **** *
 714:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 715:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configuration
 716:Generated_Source\PSoC5/USBFS_1.c **** *
 717:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBFS_1.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBFS_1.c **** *
 722:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceStatus
 723:Generated_Source\PSoC5/USBFS_1.c **** *
 724:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configurationChanged
 725:Generated_Source\PSoC5/USBFS_1.c **** *
 726:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBFS_1.c **** *
 728:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Stop(void) 
 730:Generated_Source\PSoC5/USBFS_1.c **** {
 455              		.loc 1 730 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 22


 459 0000 08B5     		push	{r3, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBFS_1.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBFS_1.c **** 
 733:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBFS_1.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_Stop_DMA(USBFS_1_MAX_EP);
 736:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBFS_1.c **** 
 738:Generated_Source\PSoC5/USBFS_1.c ****     enableInterrupts = CyEnterCriticalSection();
 463              		.loc 1 738 0
 464 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 465              	.LVL32:
 739:Generated_Source\PSoC5/USBFS_1.c **** 
 740:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG &= (uint8) ~USBFS_1_CR0_ENABLE;
 466              		.loc 1 741 0
 467 0006 1F4A     		ldr	r2, .L28
 468 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 469 000a 03F07F03 		and	r3, r3, #127
 470 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBFS_1.c **** 
 743:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= (uint8) ~ USBFS_1_USBIO_CR1_USBPUEN;
 471              		.loc 1 744 0
 472 0010 0A32     		adds	r2, r2, #10
 473 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 474 0014 03F0FB03 		and	r3, r3, #251
 475 0018 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBFS_1.c **** 
 746:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBFS_1.c **** #else
 750:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_ACT_CFG_REG  &= (uint8) ~USBFS_1_PM_ACT_EN_FSUSB;
 476              		.loc 1 751 0
 477 001a A2F5E352 		sub	r2, r2, #7264
 478 001e 0D3A     		subs	r2, r2, #13
 479 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 480 0022 03F0FE03 		and	r3, r3, #254
 481 0026 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_STBY_CFG_REG &= (uint8) ~USBFS_1_PM_STBY_EN_FSUSB;
 482              		.loc 1 752 0
 483 0028 1032     		adds	r2, r2, #16
 484 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 485 002c 03F0FE03 		and	r3, r3, #254
 486 0030 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBFS_1.c **** 
 754:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBFS_1.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DM_INP_DIS_REG |= (uint8) USBFS_1_DM_MASK;
 487              		.loc 1 756 0
 488 0032 154B     		ldr	r3, .L28+4
 489 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 23


 490 0036 42F08002 		orr	r2, r2, #128
 491 003a 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DP_INP_DIS_REG |= (uint8) USBFS_1_DP_MASK;
 492              		.loc 1 757 0
 493 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 494 003e 42F04002 		orr	r2, r2, #64
 495 0042 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBFS_1.c **** 
 759:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBFS_1.c **** 
 761:Generated_Source\PSoC5/USBFS_1.c ****     CyExitCriticalSection(enableInterrupts);
 496              		.loc 1 761 0
 497 0044 FFF7FEFF 		bl	CyExitCriticalSection
 498              	.LVL33:
 762:Generated_Source\PSoC5/USBFS_1.c **** 
 763:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBFS_1.c **** #else
 769:Generated_Source\PSoC5/USBFS_1.c **** 
 770:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_BUS_RESET_VECT_NUM);
 499              		.loc 1 770 0
 500 0048 104B     		ldr	r3, .L28+8
 501 004a 4FF40002 		mov	r2, #8388608
 502 004e 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_EP_0_VECT_NUM);
 503              		.loc 1 771 0
 504 0050 4FF08072 		mov	r2, #16777216
 505 0054 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBFS_1.c **** 
 773:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_SOF_VECT_NUM);
 775:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBFS_1.c **** 
 777:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_1_VECT_NUM);
 506              		.loc 1 778 0
 507 0056 0222     		movs	r2, #2
 508 0058 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBFS_1.c **** 
 781:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_2_VECT_NUM);
 783:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBFS_1.c **** 
 785:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBFS_1.c **** 
 789:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBFS_1.c **** 
 793:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_5_VECT_NUM);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 24


 795:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBFS_1.c **** 
 797:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* USBFS_1_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBFS_1.c **** 
 801:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBFS_1.c **** 
 805:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBFS_1.c **** 
 809:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBFS_1.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBFS_1.c ****         (void) USBFS_1_Dp_ClearInterrupt();
 509              		.loc 1 811 0
 510 005a FFF7FEFF 		bl	USBFS_1_Dp_ClearInterrupt
 511              	.LVL34:
 812:Generated_Source\PSoC5/USBFS_1.c ****         CyIntClearPending(USBFS_1_DP_INTC_VECT_NUM);
 512              		.loc 1 812 0
 513 005e 4FF48052 		mov	r2, #4096
 514 0062 0B4B     		ldr	r3, .L28+12
 515 0064 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBFS_1.c **** 
 815:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBFS_1.c **** 
 817:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 516              		.loc 1 818 0
 517 0066 0023     		movs	r3, #0
 518 0068 0A4A     		ldr	r2, .L28+16
 519 006a 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 520              		.loc 1 819 0
 521 006c 0A4A     		ldr	r2, .L28+20
 522 006e 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 523              		.loc 1 820 0
 524 0070 0A4A     		ldr	r2, .L28+24
 525 0072 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 526              		.loc 1 821 0
 527 0074 0A4A     		ldr	r2, .L28+28
 528 0076 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 529              		.loc 1 822 0
 530 0078 0A4A     		ldr	r2, .L28+32
 531 007a 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBFS_1.c **** 
 824:Generated_Source\PSoC5/USBFS_1.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_initVar = 0u;
 532              		.loc 1 825 0
 533 007c 0A4A     		ldr	r2, .L28+36
 534 007e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 25


 535 0080 08BD     		pop	{r3, pc}
 536              	.L29:
 537 0082 00BF     		.align	2
 538              	.L28:
 539 0084 08600040 		.word	1073766408
 540 0088 F8510040 		.word	1073762808
 541 008c 80E100E0 		.word	-536813184
 542 0090 80E200E0 		.word	-536812928
 543 0094 00000000 		.word	USBFS_1_configurationChanged
 544 0098 00000000 		.word	USBFS_1_configuration
 545 009c 00000000 		.word	USBFS_1_interfaceNumber
 546 00a0 00000000 		.word	USBFS_1_deviceAddress
 547 00a4 00000000 		.word	USBFS_1_deviceStatus
 548 00a8 00000000 		.word	.LANCHOR0
 549              		.cfi_endproc
 550              	.LFE4:
 551              		.size	USBFS_1_Stop, .-USBFS_1_Stop
 552              		.section	.text.USBFS_1_CheckActivity,"ax",%progbits
 553              		.align	2
 554              		.global	USBFS_1_CheckActivity
 555              		.thumb
 556              		.thumb_func
 557              		.type	USBFS_1_CheckActivity, %function
 558              	USBFS_1_CheckActivity:
 559              	.LFB5:
 826:Generated_Source\PSoC5/USBFS_1.c **** }
 827:Generated_Source\PSoC5/USBFS_1.c **** 
 828:Generated_Source\PSoC5/USBFS_1.c **** 
 829:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_CheckActivity
 831:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBFS_1.c **** *
 833:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBFS_1.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBFS_1.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBFS_1.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBFS_1.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBFS_1.c **** *
 839:Generated_Source\PSoC5/USBFS_1.c **** *
 840:Generated_Source\PSoC5/USBFS_1.c **** * \return
 841:Generated_Source\PSoC5/USBFS_1.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBFS_1.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBFS_1.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBFS_1.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBFS_1.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBFS_1.c **** *
 847:Generated_Source\PSoC5/USBFS_1.c **** *
 848:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBFS_1.c **** {
 560              		.loc 1 850 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr1Reg = USBFS_1_CR1_REG;
 565              		.loc 1 851 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 26


 566 0000 064A     		ldr	r2, .L32
 567 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 568 0004 DBB2     		uxtb	r3, r3
 569              	.LVL35:
 852:Generated_Source\PSoC5/USBFS_1.c **** 
 853:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = (cr1Reg & (uint8) ~USBFS_1_CR1_BUS_ACTIVITY);
 570              		.loc 1 854 0
 571 0006 03F0FB01 		and	r1, r3, #251
 572 000a 1170     		strb	r1, [r2]
 573 000c 03F00403 		and	r3, r3, #4
 574              	.LVL36:
 855:Generated_Source\PSoC5/USBFS_1.c **** 
 856:Generated_Source\PSoC5/USBFS_1.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBFS_1.c ****     return ((0u != (cr1Reg & USBFS_1_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 575              		.loc 1 857 0
 576 0010 03F0FF00 		and	r0, r3, #255
 577 0014 03B1     		cbz	r3, .L31
 578 0016 0120     		movs	r0, #1
 579              	.L31:
 858:Generated_Source\PSoC5/USBFS_1.c **** }
 580              		.loc 1 858 0 discriminator 4
 581 0018 7047     		bx	lr
 582              	.L33:
 583 001a 00BF     		.align	2
 584              	.L32:
 585 001c 09600040 		.word	1073766409
 586              		.cfi_endproc
 587              	.LFE5:
 588              		.size	USBFS_1_CheckActivity, .-USBFS_1_CheckActivity
 589              		.section	.text.USBFS_1_GetConfiguration,"ax",%progbits
 590              		.align	2
 591              		.global	USBFS_1_GetConfiguration
 592              		.thumb
 593              		.thumb_func
 594              		.type	USBFS_1_GetConfiguration, %function
 595              	USBFS_1_GetConfiguration:
 596              	.LFB6:
 859:Generated_Source\PSoC5/USBFS_1.c **** 
 860:Generated_Source\PSoC5/USBFS_1.c **** 
 861:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetConfiguration
 863:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBFS_1.c **** *
 865:Generated_Source\PSoC5/USBFS_1.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBFS_1.c **** *
 867:Generated_Source\PSoC5/USBFS_1.c **** * \return
 868:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBFS_1.c **** *  is not configured
 870:Generated_Source\PSoC5/USBFS_1.c **** *
 871:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBFS_1.c **** {
 597              		.loc 1 873 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 27


 601              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_configuration);
 602              		.loc 1 874 0
 603 0000 014B     		ldr	r3, .L35
 604 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBFS_1.c **** }
 605              		.loc 1 875 0
 606 0004 7047     		bx	lr
 607              	.L36:
 608 0006 00BF     		.align	2
 609              	.L35:
 610 0008 00000000 		.word	USBFS_1_configuration
 611              		.cfi_endproc
 612              	.LFE6:
 613              		.size	USBFS_1_GetConfiguration, .-USBFS_1_GetConfiguration
 614              		.section	.text.USBFS_1_IsConfigurationChanged,"ax",%progbits
 615              		.align	2
 616              		.global	USBFS_1_IsConfigurationChanged
 617              		.thumb
 618              		.thumb_func
 619              		.type	USBFS_1_IsConfigurationChanged, %function
 620              	USBFS_1_IsConfigurationChanged:
 621              	.LFB7:
 876:Generated_Source\PSoC5/USBFS_1.c **** 
 877:Generated_Source\PSoC5/USBFS_1.c **** 
 878:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBFS_1.c **** *
 882:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBFS_1.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBFS_1.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBFS_1.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBFS_1.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBFS_1.c **** *
 888:Generated_Source\PSoC5/USBFS_1.c **** * \return
 889:Generated_Source\PSoC5/USBFS_1.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBFS_1.c **** *  returned.
 891:Generated_Source\PSoC5/USBFS_1.c **** *
 892:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 893:Generated_Source\PSoC5/USBFS_1.c **** *
 894:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBFS_1.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBFS_1.c **** *
 897:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBFS_1.c **** {
 622              		.loc 1 899 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL37:
 900:Generated_Source\PSoC5/USBFS_1.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBFS_1.c **** 
 902:Generated_Source\PSoC5/USBFS_1.c ****     if (USBFS_1_configurationChanged != 0u)
 628              		.loc 1 902 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 28


 629 0000 064B     		ldr	r3, .L40
 630 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 0004 13F0FF0F 		tst	r3, #255
 632 0008 05D0     		beq	.L39
 903:Generated_Source\PSoC5/USBFS_1.c ****     {
 904:Generated_Source\PSoC5/USBFS_1.c ****         res = USBFS_1_configurationChanged;
 633              		.loc 1 904 0
 634 000a 044B     		ldr	r3, .L40
 635 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 636 000e C0B2     		uxtb	r0, r0
 637              	.LVL38:
 905:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_configurationChanged = 0u;
 638              		.loc 1 905 0
 639 0010 0022     		movs	r2, #0
 640 0012 1A70     		strb	r2, [r3]
 641 0014 7047     		bx	lr
 642              	.LVL39:
 643              	.L39:
 900:Generated_Source\PSoC5/USBFS_1.c ****     uint8 res = 0u;
 644              		.loc 1 900 0
 645 0016 0020     		movs	r0, #0
 646              	.LVL40:
 906:Generated_Source\PSoC5/USBFS_1.c ****     }
 907:Generated_Source\PSoC5/USBFS_1.c **** 
 908:Generated_Source\PSoC5/USBFS_1.c ****     return (res);
 909:Generated_Source\PSoC5/USBFS_1.c **** }
 647              		.loc 1 909 0
 648 0018 7047     		bx	lr
 649              	.L41:
 650 001a 00BF     		.align	2
 651              	.L40:
 652 001c 00000000 		.word	USBFS_1_configurationChanged
 653              		.cfi_endproc
 654              	.LFE7:
 655              		.size	USBFS_1_IsConfigurationChanged, .-USBFS_1_IsConfigurationChanged
 656              		.section	.text.USBFS_1_GetInterfaceSetting,"ax",%progbits
 657              		.align	2
 658              		.global	USBFS_1_GetInterfaceSetting
 659              		.thumb
 660              		.thumb_func
 661              		.type	USBFS_1_GetInterfaceSetting, %function
 662              	USBFS_1_GetInterfaceSetting:
 663              	.LFB8:
 910:Generated_Source\PSoC5/USBFS_1.c **** 
 911:Generated_Source\PSoC5/USBFS_1.c **** 
 912:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBFS_1.c **** *
 916:Generated_Source\PSoC5/USBFS_1.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBFS_1.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBFS_1.c **** *  interface.
 919:Generated_Source\PSoC5/USBFS_1.c **** *
 920:Generated_Source\PSoC5/USBFS_1.c **** *  \param
 921:Generated_Source\PSoC5/USBFS_1.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBFS_1.c **** *
 923:Generated_Source\PSoC5/USBFS_1.c **** * \return
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 29


 924:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBFS_1.c **** *
 926:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBFS_1.c **** uint8  USBFS_1_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBFS_1.c ****                                                     
 929:Generated_Source\PSoC5/USBFS_1.c **** {
 664              		.loc 1 929 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LVL41:
 930:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_interfaceSetting[interfaceNumber]);
 670              		.loc 1 930 0
 671 0000 014B     		ldr	r3, .L43
 672 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 673              	.LVL42:
 931:Generated_Source\PSoC5/USBFS_1.c **** }
 674              		.loc 1 931 0
 675 0004 7047     		bx	lr
 676              	.L44:
 677 0006 00BF     		.align	2
 678              	.L43:
 679 0008 00000000 		.word	USBFS_1_interfaceSetting
 680              		.cfi_endproc
 681              	.LFE8:
 682              		.size	USBFS_1_GetInterfaceSetting, .-USBFS_1_GetInterfaceSetting
 683              		.section	.text.USBFS_1_GetEPState,"ax",%progbits
 684              		.align	2
 685              		.global	USBFS_1_GetEPState
 686              		.thumb
 687              		.thumb_func
 688              		.type	USBFS_1_GetEPState, %function
 689              	USBFS_1_GetEPState:
 690              	.LFB9:
 932:Generated_Source\PSoC5/USBFS_1.c **** 
 933:Generated_Source\PSoC5/USBFS_1.c **** 
 934:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPState
 936:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBFS_1.c **** *
 938:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBFS_1.c **** *
 940:Generated_Source\PSoC5/USBFS_1.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBFS_1.c **** *
 942:Generated_Source\PSoC5/USBFS_1.c **** * \return
 943:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBFS_1.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBFS_1.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBFS_1.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBFS_1.c **** *
 948:Generated_Source\PSoC5/USBFS_1.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBFS_1.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 30


 954:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBFS_1.c **** *
 958:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBFS_1.c **** {
 691              		.loc 1 960 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 696              	.LVL43:
 961:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_EP[epNumber].apiEpState);
 697              		.loc 1 961 0
 698 0000 00EB4000 		add	r0, r0, r0, lsl #1
 699              	.LVL44:
 700 0004 8300     		lsls	r3, r0, #2
 701 0006 024A     		ldr	r2, .L46
 702 0008 1344     		add	r3, r3, r2
 703 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBFS_1.c **** }
 704              		.loc 1 962 0
 705 000c 7047     		bx	lr
 706              	.L47:
 707 000e 00BF     		.align	2
 708              	.L46:
 709 0010 00000000 		.word	USBFS_1_EP
 710              		.cfi_endproc
 711              	.LFE9:
 712              		.size	USBFS_1_GetEPState, .-USBFS_1_GetEPState
 713              		.section	.text.USBFS_1_GetEPCount,"ax",%progbits
 714              		.align	2
 715              		.global	USBFS_1_GetEPCount
 716              		.thumb
 717              		.thumb_func
 718              		.type	USBFS_1_GetEPCount, %function
 719              	USBFS_1_GetEPCount:
 720              	.LFB10:
 963:Generated_Source\PSoC5/USBFS_1.c **** 
 964:Generated_Source\PSoC5/USBFS_1.c **** 
 965:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPCount
 967:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBFS_1.c **** *
 969:Generated_Source\PSoC5/USBFS_1.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBFS_1.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBFS_1.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBFS_1.c **** *
 974:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBFS_1.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBFS_1.c **** *
 977:Generated_Source\PSoC5/USBFS_1.c **** * \return
 978:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBFS_1.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 31


 981:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBFS_1.c **** {
 721              		.loc 1 983 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 726              	.LVL45:
 984:Generated_Source\PSoC5/USBFS_1.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBFS_1.c **** 
 986:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 727              		.loc 1 986 0
 728 0000 431E     		subs	r3, r0, #1
 729 0002 DBB2     		uxtb	r3, r3
 730 0004 072B     		cmp	r3, #7
 731 0006 0BD8     		bhi	.L50
 987:Generated_Source\PSoC5/USBFS_1.c ****     {
 988:Generated_Source\PSoC5/USBFS_1.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBFS_1.c ****         cntr  = ((uint16) USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBFS_1_EPX_CNT0_MASK;
 732              		.loc 1 989 0
 733 0008 064B     		ldr	r3, .L51
 734 000a 0001     		lsls	r0, r0, #4
 735              	.LVL46:
 736 000c 1A18     		adds	r2, r3, r0
 737 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 738 0010 00F00F00 		and	r0, r0, #15
 739              	.LVL47:
 990:Generated_Source\PSoC5/USBFS_1.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 740              		.loc 1 990 0
 741 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 742 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 743              	.LVL48:
 991:Generated_Source\PSoC5/USBFS_1.c ****         cntr -= USBFS_1_EPX_CNTX_CRC_COUNT;
 744              		.loc 1 991 0
 745 001a 0238     		subs	r0, r0, #2
 746              	.LVL49:
 747 001c 80B2     		uxth	r0, r0
 748              	.LVL50:
 749 001e 7047     		bx	lr
 750              	.LVL51:
 751              	.L50:
 984:Generated_Source\PSoC5/USBFS_1.c **** 
 752              		.loc 1 984 0
 753 0020 0020     		movs	r0, #0
 754              	.LVL52:
 992:Generated_Source\PSoC5/USBFS_1.c ****     }
 993:Generated_Source\PSoC5/USBFS_1.c **** 
 994:Generated_Source\PSoC5/USBFS_1.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBFS_1.c **** }
 755              		.loc 1 995 0
 756 0022 7047     		bx	lr
 757              	.L52:
 758              		.align	2
 759              	.L51:
 760 0024 FC5F0040 		.word	1073766396
 761              		.cfi_endproc
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 32


 762              	.LFE10:
 763              		.size	USBFS_1_GetEPCount, .-USBFS_1_GetEPCount
 764              		.section	.text.USBFS_1_LoadInEP,"ax",%progbits
 765              		.align	2
 766              		.global	USBFS_1_LoadInEP
 767              		.thumb
 768              		.thumb_func
 769              		.type	USBFS_1_LoadInEP, %function
 770              	USBFS_1_LoadInEP:
 771              	.LFB11:
 996:Generated_Source\PSoC5/USBFS_1.c **** 
 997:Generated_Source\PSoC5/USBFS_1.c **** 
 998:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBFS_1.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_InitEpDma
1002:Generated_Source\PSoC5/USBFS_1.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBFS_1.c ****     *
1004:Generated_Source\PSoC5/USBFS_1.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBFS_1.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBFS_1.c ****     *
1007:Generated_Source\PSoC5/USBFS_1.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBFS_1.c ****     static void USBFS_1_InitEpDma(void)
1009:Generated_Source\PSoC5/USBFS_1.c ****     {
1010:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep1_dma_CHANNEL] = USBFS_1_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBFS_1.c **** 
1014:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep2_dma_CHANNEL] = USBFS_1_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBFS_1.c **** 
1018:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep3_dma_CHANNEL] = USBFS_1_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBFS_1.c **** 
1022:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep4_dma_CHANNEL] = USBFS_1_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBFS_1.c **** 
1026:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep5_dma_CHANNEL] = USBFS_1_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBFS_1.c **** 
1030:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep6_dma_CHANNEL] = USBFS_1_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBFS_1.c **** 
1034:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep7_dma_CHANNEL] = USBFS_1_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBFS_1.c **** 
1038:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep8_dma_CHANNEL] = USBFS_1_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBFS_1.c **** 
1042:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 33


1043:Generated_Source\PSoC5/USBFS_1.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep1_dma_SetInterruptCallback(&USBFS_1_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBFS_1.c **** 
1048:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep2_dma_SetInterruptCallback(&USBFS_1_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBFS_1.c **** 
1052:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep3_dma_SetInterruptCallback(&USBFS_1_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBFS_1.c **** 
1056:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep4_dma_SetInterruptCallback(&USBFS_1_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBFS_1.c **** 
1060:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep5_dma_SetInterruptCallback(&USBFS_1_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBFS_1.c **** 
1064:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep6_dma_SetInterruptCallback(&USBFS_1_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBFS_1.c **** 
1068:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep7_dma_SetInterruptCallback(&USBFS_1_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBFS_1.c **** 
1072:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep8_dma_SetInterruptCallback(&USBFS_1_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBFS_1.c ****     }
1077:Generated_Source\PSoC5/USBFS_1.c **** #else
1078:Generated_Source\PSoC5/USBFS_1.c **** 
1079:Generated_Source\PSoC5/USBFS_1.c **** 
1080:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_InitEP_DMA
1082:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBFS_1.c ****     *
1084:Generated_Source\PSoC5/USBFS_1.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_LoadInEP() or USBFS_1_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBFS_1.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBFS_1.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBFS_1.c ****     *
1089:Generated_Source\PSoC5/USBFS_1.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBFS_1.c ****     *
1091:Generated_Source\PSoC5/USBFS_1.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBFS_1.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBFS_1.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBFS_1.c ****     *
1095:Generated_Source\PSoC5/USBFS_1.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBFS_1.c ****     *
1097:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBFS_1.c ****                                                                     
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 34


1100:Generated_Source\PSoC5/USBFS_1.c ****     {
1101:Generated_Source\PSoC5/USBFS_1.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBFS_1.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBFS_1.c **** 
1104:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBFS_1.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBFS_1.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBFS_1.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBFS_1.c ****     #else
1109:Generated_Source\PSoC5/USBFS_1.c ****         if ((USBFS_1_EP[epNumber].addr & USBFS_1_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBFS_1.c ****         {
1111:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBFS_1.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBFS_1.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBFS_1.c ****         }
1115:Generated_Source\PSoC5/USBFS_1.c ****         else
1116:Generated_Source\PSoC5/USBFS_1.c ****         {
1117:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBFS_1.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBFS_1.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBFS_1.c ****         }
1121:Generated_Source\PSoC5/USBFS_1.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBFS_1.c **** 
1123:Generated_Source\PSoC5/USBFS_1.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBFS_1.c ****         {
1125:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP1:
1127:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep1_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1129:Generated_Source\PSoC5/USBFS_1.c ****             break;
1130:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBFS_1.c **** 
1132:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP2:
1134:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep2_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1136:Generated_Source\PSoC5/USBFS_1.c ****             break;
1137:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBFS_1.c **** 
1139:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP3:
1141:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep3_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1143:Generated_Source\PSoC5/USBFS_1.c ****             break;
1144:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBFS_1.c **** 
1146:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP4:
1148:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep4_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1150:Generated_Source\PSoC5/USBFS_1.c ****             break;
1151:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBFS_1.c **** 
1153:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP5:
1155:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep5_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 35


1157:Generated_Source\PSoC5/USBFS_1.c ****             break;
1158:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBFS_1.c **** 
1160:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP6:
1162:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep6_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1164:Generated_Source\PSoC5/USBFS_1.c ****             break;
1165:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBFS_1.c **** 
1167:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP7:
1169:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep7_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1171:Generated_Source\PSoC5/USBFS_1.c ****             break;
1172:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBFS_1.c **** 
1174:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP8:
1176:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep8_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1178:Generated_Source\PSoC5/USBFS_1.c ****             break;
1179:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBFS_1.c **** 
1181:Generated_Source\PSoC5/USBFS_1.c ****         default:
1182:Generated_Source\PSoC5/USBFS_1.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBFS_1.c ****             break;
1184:Generated_Source\PSoC5/USBFS_1.c ****         }
1185:Generated_Source\PSoC5/USBFS_1.c **** 
1186:Generated_Source\PSoC5/USBFS_1.c ****         if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1187:Generated_Source\PSoC5/USBFS_1.c ****         {
1188:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBFS_1.c **** 
1190:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBFS_1.c ****         }
1194:Generated_Source\PSoC5/USBFS_1.c ****     }
1195:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBFS_1.c **** 
1197:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_Stop_DMA
1199:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBFS_1.c ****     *  
1201:Generated_Source\PSoC5/USBFS_1.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBFS_1.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBFS_1.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBFS_1.c ****     *  to trigger DMA re-configuration when USBFS_1_LoadInEP() or 
1205:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBFS_1.c ****     *  
1207:Generated_Source\PSoC5/USBFS_1.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBFS_1.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBFS_1.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_MAX_EP argument.
1211:Generated_Source\PSoC5/USBFS_1.c ****     *
1212:Generated_Source\PSoC5/USBFS_1.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBFS_1.c ****     *  No.
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 36


1214:Generated_Source\PSoC5/USBFS_1.c ****     *
1215:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBFS_1.c ****     {
1218:Generated_Source\PSoC5/USBFS_1.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBFS_1.c **** 
1220:Generated_Source\PSoC5/USBFS_1.c ****         i = (epNumber < USBFS_1_MAX_EP) ? epNumber : USBFS_1_EP1;
1221:Generated_Source\PSoC5/USBFS_1.c **** 
1222:Generated_Source\PSoC5/USBFS_1.c ****         do
1223:Generated_Source\PSoC5/USBFS_1.c ****         {
1224:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBFS_1.c ****             if (0u != USBFS_1_DmaChan[i])
1226:Generated_Source\PSoC5/USBFS_1.c ****             {
1227:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(USBFS_1_DmaChan[i]);
1228:Generated_Source\PSoC5/USBFS_1.c ****             }
1229:Generated_Source\PSoC5/USBFS_1.c ****         #else
1230:Generated_Source\PSoC5/USBFS_1.c ****             if(USBFS_1_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBFS_1.c ****             {
1232:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[i]);
1233:Generated_Source\PSoC5/USBFS_1.c ****                 CyDmaTdFree(USBFS_1_DmaTd[i]);
1234:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBFS_1.c ****             }
1236:Generated_Source\PSoC5/USBFS_1.c **** 
1237:Generated_Source\PSoC5/USBFS_1.c ****             #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBFS_1.c ****                 if(USBFS_1_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBFS_1.c ****                 {
1240:Generated_Source\PSoC5/USBFS_1.c ****                     CyDmaTdFree(USBFS_1_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBFS_1.c ****                 }
1243:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBFS_1.c **** 
1245:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBFS_1.c ****             i++;
1247:Generated_Source\PSoC5/USBFS_1.c ****         }
1248:Generated_Source\PSoC5/USBFS_1.c ****         while ((i < USBFS_1_MAX_EP) && (epNumber == USBFS_1_MAX_EP));
1249:Generated_Source\PSoC5/USBFS_1.c ****     }
1250:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBFS_1.c **** 
1252:Generated_Source\PSoC5/USBFS_1.c **** 
1253:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_LoadNextInEP
1257:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBFS_1.c ****     *
1259:Generated_Source\PSoC5/USBFS_1.c ****     * Summary:
1260:Generated_Source\PSoC5/USBFS_1.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBFS_1.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBFS_1.c ****     *
1263:Generated_Source\PSoC5/USBFS_1.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBFS_1.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBFS_1.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBFS_1.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBFS_1.c ****     *
1268:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBFS_1.c ****     {
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 37


1271:Generated_Source\PSoC5/USBFS_1.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBFS_1.c **** 
1273:Generated_Source\PSoC5/USBFS_1.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBFS_1.c ****         {
1275:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBFS_1.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, USBFS_1_inLength[epNumber] - USBFS_1_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_1_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBFS_1.c ****                                             USBFS_1_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBFS_1.c ****         }
1286:Generated_Source\PSoC5/USBFS_1.c ****         else
1287:Generated_Source\PSoC5/USBFS_1.c ****         {
1288:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBFS_1.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, USBFS_1_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_1_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBFS_1.c ****                                    (USBFS_1_DMA_BYTES_PER_BURST - USBFS_1_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBFS_1.c ****         }
1298:Generated_Source\PSoC5/USBFS_1.c **** 
1299:Generated_Source\PSoC5/USBFS_1.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBFS_1.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_1_DmaChan[epNumber]].basic_status[1u] = USBFS_1_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBFS_1.c ****     }
1302:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBFS_1.c **** 
1305:Generated_Source\PSoC5/USBFS_1.c **** 
1306:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_LoadInEP
1308:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBFS_1.c **** *
1310:Generated_Source\PSoC5/USBFS_1.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBFS_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBFS_1.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBFS_1.c **** *
1314:Generated_Source\PSoC5/USBFS_1.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBFS_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBFS_1.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBFS_1.c **** *
1318:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBFS_1.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBFS_1.c **** *
1322:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBFS_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBFS_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBFS_1.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 38


1328:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBFS_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBFS_1.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBFS_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBFS_1.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBFS_1.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBFS_1.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBFS_1.c **** *
1337:Generated_Source\PSoC5/USBFS_1.c **** *
1338:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1339:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1340:Generated_Source\PSoC5/USBFS_1.c **** *
1341:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBFS_1.c ****                                                                         
1344:Generated_Source\PSoC5/USBFS_1.c **** {
 772              		.loc 1 1344 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777              	.LVL53:
1345:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 778              		.loc 1 1345 0
 779 0000 431E     		subs	r3, r0, #1
 780 0002 DBB2     		uxtb	r3, r3
 781 0004 072B     		cmp	r3, #7
 782 0006 3CD8     		bhi	.L62
1344:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 783              		.loc 1 1344 0
 784 0008 F0B4     		push	{r4, r5, r6, r7}
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 4, -16
 787              		.cfi_offset 5, -12
 788              		.cfi_offset 6, -8
 789              		.cfi_offset 7, -4
1346:Generated_Source\PSoC5/USBFS_1.c ****     {
1347:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBFS_1.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBFS_1.c ****         if (length > (USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset))
 790              		.loc 1 1349 0
 791 000a 0746     		mov	r7, r0
 792 000c 00EB4004 		add	r4, r0, r0, lsl #1
 793 0010 A300     		lsls	r3, r4, #2
 794 0012 1C4C     		ldr	r4, .L63
 795 0014 2344     		add	r3, r3, r4
 796 0016 DB88     		ldrh	r3, [r3, #6]
 797 0018 9BB2     		uxth	r3, r3
 798 001a C3F50073 		rsb	r3, r3, #512
 799 001e 9A42     		cmp	r2, r3
 800 0020 08D9     		bls	.L55
1350:Generated_Source\PSoC5/USBFS_1.c ****         {
1351:Generated_Source\PSoC5/USBFS_1.c ****             length = USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset;
 801              		.loc 1 1351 0
 802 0022 00EB4002 		add	r2, r0, r0, lsl #1
 803              	.LVL54:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 39


 804 0026 9300     		lsls	r3, r2, #2
 805 0028 2344     		add	r3, r3, r4
 806 002a DA88     		ldrh	r2, [r3, #6]
 807 002c 92B2     		uxth	r2, r2
 808 002e C2F50072 		rsb	r2, r2, #512
 809 0032 92B2     		uxth	r2, r2
 810              	.LVL55:
 811              	.L55:
1352:Generated_Source\PSoC5/USBFS_1.c ****         }
1353:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBFS_1.c **** 
1355:Generated_Source\PSoC5/USBFS_1.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBFS_1_EP[epNumber].epT
 812              		.loc 1 1356 0
 813 0034 00EB4004 		add	r4, r0, r0, lsl #1
 814 0038 A300     		lsls	r3, r4, #2
 815 003a 124C     		ldr	r4, .L63
 816 003c 2344     		add	r3, r3, r4
 817 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 818 0040 43EA1223 		orr	r3, r3, r2, lsr #8
 819 0044 104D     		ldr	r5, .L63+4
 820 0046 0401     		lsls	r4, r0, #4
 821 0048 2E19     		adds	r6, r5, r4
 822 004a 2B55     		strb	r3, [r5, r4]
1357:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 823              		.loc 1 1357 0
 824 004c D3B2     		uxtb	r3, r2
 825 004e 7370     		strb	r3, [r6, #1]
1358:Generated_Source\PSoC5/USBFS_1.c **** 
1359:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != pData)
 826              		.loc 1 1360 0
 827 0050 39B9     		cbnz	r1, .L59
 828              	.LBB2:
 829 0052 09E0     		b	.L57
 830              	.LVL56:
 831              	.L58:
1361:Generated_Source\PSoC5/USBFS_1.c ****         {
1362:Generated_Source\PSoC5/USBFS_1.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBFS_1.c ****             {
1366:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 832              		.loc 1 1366 0 discriminator 3
 833 0054 CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 834 0056 3D01     		lsls	r5, r7, #4
 835 0058 0C4C     		ldr	r4, .L63+8
 836 005a 6655     		strb	r6, [r4, r5]
1364:Generated_Source\PSoC5/USBFS_1.c ****             {
 837              		.loc 1 1364 0 discriminator 3
 838 005c 0133     		adds	r3, r3, #1
 839              	.LVL57:
 840 005e 9BB2     		uxth	r3, r3
 841              	.LVL58:
 842 0060 00E0     		b	.L56
 843              	.LVL59:
 844              	.L59:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 40


 845              	.LBE2:
 846 0062 0023     		movs	r3, #0
 847              	.L56:
 848              	.LVL60:
 849              	.LBB3:
1364:Generated_Source\PSoC5/USBFS_1.c ****             {
 850              		.loc 1 1364 0 is_stmt 0 discriminator 1
 851 0064 9A42     		cmp	r2, r3
 852 0066 F5D8     		bhi	.L58
 853              	.LVL61:
 854              	.L57:
 855              	.LBE3:
1367:Generated_Source\PSoC5/USBFS_1.c ****             }
1368:Generated_Source\PSoC5/USBFS_1.c ****         }
1369:Generated_Source\PSoC5/USBFS_1.c **** 
1370:Generated_Source\PSoC5/USBFS_1.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
 856              		.loc 1 1371 0 is_stmt 1
 857 0068 4200     		lsls	r2, r0, #1
 858              	.LVL62:
 859 006a 0244     		add	r2, r2, r0
 860 006c 9300     		lsls	r3, r2, #2
 861 006e 054A     		ldr	r2, .L63
 862 0070 1344     		add	r3, r3, r2
 863 0072 0022     		movs	r2, #0
 864 0074 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USBFS_1.c **** 
1373:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
 865              		.loc 1 1374 0
 866 0076 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 867 0078 D2B2     		uxtb	r2, r2
 868 007a 0001     		lsls	r0, r0, #4
 869              	.LVL63:
 870 007c 044B     		ldr	r3, .L63+12
 871 007e 1A54     		strb	r2, [r3, r0]
1375:Generated_Source\PSoC5/USBFS_1.c **** 
1376:Generated_Source\PSoC5/USBFS_1.c ****     #else
1377:Generated_Source\PSoC5/USBFS_1.c **** 
1378:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBFS_1.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBFS_1.c ****             if (DMA_INVALID_TD == USBFS_1_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBFS_1.c ****             {
1382:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBFS_1.c ****             }
1384:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBFS_1.c **** 
1386:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBFS_1.c **** 
1390:Generated_Source\PSoC5/USBFS_1.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBFS_1.c ****             {
1392:Generated_Source\PSoC5/USBFS_1.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBFS_1.c **** 
1395:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 41


1396:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBFS_1.c **** 
1398:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_
1401:Generated_Source\PSoC5/USBFS_1.c **** 
1402:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBFS_1.c ****                 --length;
1404:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBFS_1.c **** 
1407:Generated_Source\PSoC5/USBFS_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBFS_1.c **** 
1410:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBFS_1.c ****             #else
1413:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBFS_1.c **** 
1418:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBFS_1.c **** 
1423:Generated_Source\PSoC5/USBFS_1.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBFS_1.c **** 
1427:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBFS_1.c ****             }
1429:Generated_Source\PSoC5/USBFS_1.c ****             else
1430:Generated_Source\PSoC5/USBFS_1.c ****             {
1431:Generated_Source\PSoC5/USBFS_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBFS_1.c ****             }
1434:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBFS_1.c **** 
1436:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBFS_1.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBFS_1.c ****             {
1439:Generated_Source\PSoC5/USBFS_1.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBFS_1.c **** 
1442:Generated_Source\PSoC5/USBFS_1.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBFS_1.c **** 
1445:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBFS_1.c **** 
1448:Generated_Source\PSoC5/USBFS_1.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_
1450:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP_
1451:Generated_Source\PSoC5/USBFS_1.c **** 
1452:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 42


1453:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBFS_1.c **** 
1456:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBFS_1.c **** 
1460:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBFS_1.c **** 
1463:Generated_Source\PSoC5/USBFS_1.c **** 
1464:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBFS_1.c **** 
1467:Generated_Source\PSoC5/USBFS_1.c ****             #else
1468:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBFS_1.c **** 
1470:Generated_Source\PSoC5/USBFS_1.c ****                 #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBFS_1.c **** 
1474:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBFS_1.c ****                         (length > USBFS_1_DMA_BYTES_PER_BURST) ? USBFS_1_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1480:Generated_Source\PSoC5/USBFS_1.c **** 
1481:Generated_Source\PSoC5/USBFS_1.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBFS_1.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBFS_1.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBFS_1.c ****                     */
1485:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBFS_1.c **** 
1489:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBFS_1.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBFS_1.c ****                 #else
1493:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1498:Generated_Source\PSoC5/USBFS_1.c ****                 #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBFS_1.c **** 
1500:Generated_Source\PSoC5/USBFS_1.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBFS_1.c ****             }
1507:Generated_Source\PSoC5/USBFS_1.c ****             else
1508:Generated_Source\PSoC5/USBFS_1.c ****             {
1509:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 43


1510:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBFS_1.c **** 
1512:Generated_Source\PSoC5/USBFS_1.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBFS_1.c ****                 {
1514:Generated_Source\PSoC5/USBFS_1.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBFS_1.c **** 
1518:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBFS_1.c **** 
1521:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBFS_1.c **** 
1524:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBFS_1.c **** 
1527:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBFS_1.c ****                                                                           (USBFS_1_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBFS_1.c ****                                                                           (USBFS_1_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBFS_1.c **** 
1532:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBFS_1.c **** 
1536:Generated_Source\PSoC5/USBFS_1.c **** 
1537:Generated_Source\PSoC5/USBFS_1.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBFS_1.c ****                                                                             USBFS_1_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBFS_1.c **** 
1541:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBFS_1.c **** 
1544:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBFS_1.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBFS_1.c **** 
1549:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBFS_1.c **** 
1553:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBFS_1.c **** 
1557:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBFS_1.c ****                     if (USBFS_1_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBFS_1.c ****                     {
1560:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBFS_1.c ****                     }                   
1562:Generated_Source\PSoC5/USBFS_1.c **** 
1563:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstC
1565:Generated_Source\PSoC5/USBFS_1.c **** 
1566:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA channel: configuration complete. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 44


1567:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBFS_1.c **** 
1569:Generated_Source\PSoC5/USBFS_1.c ****                 #elif (USBFS_1_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBFS_1.c **** 
1573:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaTd[epNumber], (length > USBFS_1_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32)  USBFS_1_inData
1580:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1581:Generated_Source\PSoC5/USBFS_1.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBFS_1.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBFS_1.c **** 
1588:Generated_Source\PSoC5/USBFS_1.c ****                 #if !defined (USBFS_1_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_1_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBFS_1.c ****                 #endif  /* (USBFS_1_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBFS_1.c **** 
1593:Generated_Source\PSoC5/USBFS_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBFS_1.c ****                 }
1595:Generated_Source\PSoC5/USBFS_1.c ****                 else
1596:Generated_Source\PSoC5/USBFS_1.c ****                 {
1597:Generated_Source\PSoC5/USBFS_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBFS_1.c ****                 }
1600:Generated_Source\PSoC5/USBFS_1.c ****             }
1601:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBFS_1.c ****     }
1604:Generated_Source\PSoC5/USBFS_1.c **** }
 872              		.loc 1 1604 0
 873 0080 F0BC     		pop	{r4, r5, r6, r7}
 874              		.cfi_restore 7
 875              		.cfi_restore 6
 876              		.cfi_restore 5
 877              		.cfi_restore 4
 878              		.cfi_def_cfa_offset 0
 879              	.L62:
 880 0082 7047     		bx	lr
 881              	.L64:
 882              		.align	2
 883              	.L63:
 884 0084 00000000 		.word	USBFS_1_EP
 885 0088 FC5F0040 		.word	1073766396
 886 008c 78600040 		.word	1073766520
 887 0090 FE5F0040 		.word	1073766398
 888              		.cfi_endproc
 889              	.LFE11:
 890              		.size	USBFS_1_LoadInEP, .-USBFS_1_LoadInEP
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 45


 891              		.section	.text.USBFS_1_EnableOutEP,"ax",%progbits
 892              		.align	2
 893              		.global	USBFS_1_EnableOutEP
 894              		.thumb
 895              		.thumb_func
 896              		.type	USBFS_1_EnableOutEP, %function
 897              	USBFS_1_EnableOutEP:
 898              	.LFB13:
1605:Generated_Source\PSoC5/USBFS_1.c **** 
1606:Generated_Source\PSoC5/USBFS_1.c **** 
1607:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReadOutEP
1609:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBFS_1.c **** *
1611:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBFS_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBFS_1.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBFS_1.c **** *
1615:Generated_Source\PSoC5/USBFS_1.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBFS_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBFS_1.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBFS_1.c **** *
1621:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBFS_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBFS_1.c **** *   transfer after calling the USBFS_1_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBFS_1.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBFS_1.c **** *
1627:Generated_Source\PSoC5/USBFS_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBFS_1.c **** *
1629:Generated_Source\PSoC5/USBFS_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBFS_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBFS_1.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBFS_1.c **** *
1633:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBFS_1.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBFS_1.c **** *
1637:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBFS_1.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBFS_1.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBFS_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBFS_1.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBFS_1.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBFS_1.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBFS_1.c **** *
1646:Generated_Source\PSoC5/USBFS_1.c **** * \return
1647:Generated_Source\PSoC5/USBFS_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBFS_1.c **** *
1649:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1650:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1651:Generated_Source\PSoC5/USBFS_1.c **** *
1652:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 46


1654:Generated_Source\PSoC5/USBFS_1.c ****                                                                         
1655:Generated_Source\PSoC5/USBFS_1.c **** {
1656:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1657:Generated_Source\PSoC5/USBFS_1.c ****     {
1658:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBFS_1.c ****         length = (length > USBFS_1_GetEPCount(epNumber)) ? USBFS_1_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBFS_1.c **** 
1663:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBFS_1.c ****         {
1665:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBFS_1.c ****             {
1669:Generated_Source\PSoC5/USBFS_1.c ****                 pData[i] = (uint8) USBFS_1_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBFS_1.c ****             }
1671:Generated_Source\PSoC5/USBFS_1.c ****         }
1672:Generated_Source\PSoC5/USBFS_1.c **** 
1673:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBFS_1.c ****     #else
1676:Generated_Source\PSoC5/USBFS_1.c **** 
1677:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBFS_1.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBFS_1.c ****             if (DMA_INVALID_TD == USBFS_1_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBFS_1.c ****             {
1681:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBFS_1.c ****             }
1683:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBFS_1.c **** 
1685:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBFS_1.c ****         {
1688:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBFS_1.c **** 
1690:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBFS_1.c **** 
1693:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBFS_1.c **** 
1697:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBFS_1.c **** 
1701:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBFS_1.c **** 
1704:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBFS_1.c ****         }
1707:Generated_Source\PSoC5/USBFS_1.c ****         #else
1708:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 47


1711:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) &USBFS_1_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBFS_1.c **** 
1713:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBFS_1.c **** 
1718:Generated_Source\PSoC5/USBFS_1.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBFS_1.c **** 
1722:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBFS_1.c ****             */
1725:Generated_Source\PSoC5/USBFS_1.c **** 
1726:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBFS_1.c **** 
1728:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBFS_1.c ****         {
1731:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBFS_1.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBFS_1.c **** 
1734:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBFS_1.c **** 
1737:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBFS_1.c **** 
1740:Generated_Source\PSoC5/USBFS_1.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBFS_1.c **** 
1743:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBFS_1.c ****                                                                   (USBFS_1_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBFS_1.c ****                                                                   (USBFS_1_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBFS_1.c **** 
1748:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBFS_1.c **** 
1752:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (USBFS_1_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_1_
1754:Generated_Source\PSoC5/USBFS_1.c **** 
1755:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBFS_1.c ****                                                                     USBFS_1_DMA_DESCR0_MASK : USBFS
1758:Generated_Source\PSoC5/USBFS_1.c **** 
1759:Generated_Source\PSoC5/USBFS_1.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCntBackup[epNumber]   = USBFS_1_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBFS_1.c **** 
1763:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBFS_1.c **** 
1766:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 48


1768:Generated_Source\PSoC5/USBFS_1.c **** 
1769:Generated_Source\PSoC5/USBFS_1.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBFS_1.c **** 
1773:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBFS_1.c **** 
1776:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBFS_1.c **** 
1780:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBFS_1.c **** 
1784:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBFS_1.c **** 
1787:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBFS_1.c **** 
1790:Generated_Source\PSoC5/USBFS_1.c ****             if (USBFS_1_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBFS_1.c ****             {
1792:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBFS_1.c ****             }
1794:Generated_Source\PSoC5/USBFS_1.c **** 
1795:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBFS_1.c ****         }
1798:Generated_Source\PSoC5/USBFS_1.c ****         #else
1799:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length,  USBFS_1_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) &USBFS_1_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBFS_1.c **** 
1803:Generated_Source\PSoC5/USBFS_1.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBFS_1.c **** 
1806:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBFS_1.c **** 
1811:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBFS_1.c ****             */
1814:Generated_Source\PSoC5/USBFS_1.c **** 
1815:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBFS_1.c ****     }
1818:Generated_Source\PSoC5/USBFS_1.c ****     else
1819:Generated_Source\PSoC5/USBFS_1.c ****     {
1820:Generated_Source\PSoC5/USBFS_1.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBFS_1.c ****     }
1822:Generated_Source\PSoC5/USBFS_1.c **** 
1823:Generated_Source\PSoC5/USBFS_1.c ****     return (length);
1824:Generated_Source\PSoC5/USBFS_1.c **** }
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 49


1825:Generated_Source\PSoC5/USBFS_1.c **** 
1826:Generated_Source\PSoC5/USBFS_1.c **** 
1827:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_LoadInEP16
1830:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBFS_1.c **** *
1832:Generated_Source\PSoC5/USBFS_1.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBFS_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBFS_1.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBFS_1.c **** *
1836:Generated_Source\PSoC5/USBFS_1.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBFS_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBFS_1.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBFS_1.c **** *
1840:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBFS_1.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBFS_1.c **** *
1844:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBFS_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBFS_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBFS_1.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBFS_1.c **** *
1850:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBFS_1.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBFS_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBFS_1.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBFS_1.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBFS_1.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBFS_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBFS_1.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBFS_1.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBFS_1.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBFS_1.c **** *
1861:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1862:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1863:Generated_Source\PSoC5/USBFS_1.c **** *
1864:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBFS_1.c **** {
1867:Generated_Source\PSoC5/USBFS_1.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBFS_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBFS_1.c **** 
1870:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1871:Generated_Source\PSoC5/USBFS_1.c ****     {
1872:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBFS_1.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBFS_1.c ****         if (length > (USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBFS_1.c ****         {
1876:Generated_Source\PSoC5/USBFS_1.c ****             length = USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBFS_1.c ****         }
1878:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBFS_1.c **** 
1880:Generated_Source\PSoC5/USBFS_1.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_1_EP[epNumber].ep
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 50


1882:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBFS_1.c **** 
1884:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBFS_1.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBFS_1.c **** 
1887:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBFS_1.c ****         {
1890:Generated_Source\PSoC5/USBFS_1.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBFS_1.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBFS_1.c **** 
1893:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBFS_1.c ****             {
1897:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBFS_1.c ****             }
1899:Generated_Source\PSoC5/USBFS_1.c ****         }
1900:Generated_Source\PSoC5/USBFS_1.c **** 
1901:Generated_Source\PSoC5/USBFS_1.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBFS_1.c **** 
1904:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBFS_1.c **** 
1907:Generated_Source\PSoC5/USBFS_1.c ****     #else
1908:Generated_Source\PSoC5/USBFS_1.c **** 
1909:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBFS_1.c **** 
1913:Generated_Source\PSoC5/USBFS_1.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBFS_1.c ****             {
1915:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBFS_1.c **** 
1917:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBFS_1.c **** 
1920:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP1
1923:Generated_Source\PSoC5/USBFS_1.c **** 
1924:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBFS_1.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBFS_1.c **** 
1929:Generated_Source\PSoC5/USBFS_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBFS_1.c **** 
1932:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBFS_1.c **** 
1935:Generated_Source\PSoC5/USBFS_1.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_1_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_1_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 51


1939:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBFS_1.c ****             }
1941:Generated_Source\PSoC5/USBFS_1.c ****             else
1942:Generated_Source\PSoC5/USBFS_1.c ****             {
1943:Generated_Source\PSoC5/USBFS_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBFS_1.c ****             }
1946:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBFS_1.c **** 
1948:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBFS_1.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBFS_1.c ****             {
1951:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBFS_1.c **** 
1953:Generated_Source\PSoC5/USBFS_1.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBFS_1.c **** 
1956:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBFS_1.c **** 
1959:Generated_Source\PSoC5/USBFS_1.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP1
1961:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP1
1962:Generated_Source\PSoC5/USBFS_1.c **** 
1963:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBFS_1.c **** 
1967:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBFS_1.c **** 
1971:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBFS_1.c **** 
1974:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBFS_1.c ****             }
1977:Generated_Source\PSoC5/USBFS_1.c ****             else
1978:Generated_Source\PSoC5/USBFS_1.c ****             {
1979:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBFS_1.c **** 
1982:Generated_Source\PSoC5/USBFS_1.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBFS_1.c ****                 {
1984:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBFS_1.c **** 
1987:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBFS_1.c **** 
1990:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBFS_1.c **** 
1993:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 52


1996:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBFS_1.c ****                                                                           ((USBFS_1_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBFS_1.c ****                                                                            (USBFS_1_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBFS_1.c **** 
2001:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBFS_1.c **** 
2005:Generated_Source\PSoC5/USBFS_1.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBFS_1.c ****                                                                             USBFS_1_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBFS_1.c **** 
2009:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBFS_1.c **** 
2012:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBFS_1.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBFS_1.c **** 
2017:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBFS_1.c **** 
2021:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBFS_1.c **** 
2025:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBFS_1.c ****                     if (USBFS_1_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBFS_1.c ****                     {
2028:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBFS_1.c ****                     }
2030:Generated_Source\PSoC5/USBFS_1.c **** 
2031:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstC
2033:Generated_Source\PSoC5/USBFS_1.c **** 
2034:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBFS_1.c **** 
2037:Generated_Source\PSoC5/USBFS_1.c ****                 #if !defined (USBFS_1_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_1_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBFS_1.c ****                 #endif  /* (USBFS_1_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBFS_1.c **** 
2042:Generated_Source\PSoC5/USBFS_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBFS_1.c ****                 }
2044:Generated_Source\PSoC5/USBFS_1.c ****                 else
2045:Generated_Source\PSoC5/USBFS_1.c ****                 {
2046:Generated_Source\PSoC5/USBFS_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBFS_1.c ****                 }
2049:Generated_Source\PSoC5/USBFS_1.c ****             }
2050:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBFS_1.c ****     }
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 53


2053:Generated_Source\PSoC5/USBFS_1.c **** }
2054:Generated_Source\PSoC5/USBFS_1.c **** 
2055:Generated_Source\PSoC5/USBFS_1.c **** 
2056:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReadOutEP16
2058:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBFS_1.c **** *
2060:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBFS_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBFS_1.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBFS_1.c **** *
2064:Generated_Source\PSoC5/USBFS_1.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBFS_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBFS_1.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBFS_1.c **** *
2070:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBFS_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBFS_1.c **** *   transfer after calling the USBFS_1_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBFS_1.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBFS_1.c **** *
2076:Generated_Source\PSoC5/USBFS_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBFS_1.c **** *
2078:Generated_Source\PSoC5/USBFS_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBFS_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBFS_1.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBFS_1.c **** *
2082:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBFS_1.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBFS_1.c **** *
2086:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBFS_1.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBFS_1.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBFS_1.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBFS_1.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBFS_1.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBFS_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBFS_1.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBFS_1.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBFS_1.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBFS_1.c **** *
2097:Generated_Source\PSoC5/USBFS_1.c **** * \return
2098:Generated_Source\PSoC5/USBFS_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBFS_1.c **** *
2100:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2101:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2102:Generated_Source\PSoC5/USBFS_1.c **** *
2103:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBFS_1.c **** {
2106:Generated_Source\PSoC5/USBFS_1.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBFS_1.c **** 
2108:Generated_Source\PSoC5/USBFS_1.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBFS_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 54


2110:Generated_Source\PSoC5/USBFS_1.c **** 
2111:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
2112:Generated_Source\PSoC5/USBFS_1.c ****     {
2113:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBFS_1.c ****         length = (length > USBFS_1_GetEPCount(epNumber)) ? USBFS_1_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBFS_1.c **** 
2118:Generated_Source\PSoC5/USBFS_1.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBFS_1.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBFS_1.c **** 
2121:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBFS_1.c ****         {
2123:Generated_Source\PSoC5/USBFS_1.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBFS_1.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBFS_1.c **** 
2126:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBFS_1.c ****             {
2130:Generated_Source\PSoC5/USBFS_1.c ****                 dataBuf[i] = (uint16) USBFS_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBFS_1.c ****             }
2132:Generated_Source\PSoC5/USBFS_1.c ****         }
2133:Generated_Source\PSoC5/USBFS_1.c **** 
2134:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBFS_1.c ****     #else
2137:Generated_Source\PSoC5/USBFS_1.c **** 
2138:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBFS_1.c ****         {
2140:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBFS_1.c **** 
2142:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBFS_1.c **** 
2145:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBFS_1.c **** 
2149:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBFS_1.c **** 
2153:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBFS_1.c **** 
2156:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBFS_1.c **** 
2159:Generated_Source\PSoC5/USBFS_1.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBFS_1.c **** 
2163:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBFS_1.c ****             */
2166:Generated_Source\PSoC5/USBFS_1.c ****         }
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 55


2167:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBFS_1.c **** 
2169:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBFS_1.c ****         {
2171:Generated_Source\PSoC5/USBFS_1.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBFS_1.c **** 
2174:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBFS_1_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBFS_1.c **** 
2177:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBFS_1_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBFS_1.c **** 
2180:Generated_Source\PSoC5/USBFS_1.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBFS_1.c **** 
2183:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBFS_1.c ****                                                                   ((USBFS_1_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBFS_1.c ****                                                                    (USBFS_1_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBFS_1.c **** 
2188:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBFS_1.c **** 
2192:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBFS_1.c ****                                                                     USBFS_1_DMA_DESCR0_MASK : USBFS
2195:Generated_Source\PSoC5/USBFS_1.c **** 
2196:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (USBFS_1_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_1_
2198:Generated_Source\PSoC5/USBFS_1.c **** 
2199:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= USBFS_1_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBFS_1.c **** 
2202:Generated_Source\PSoC5/USBFS_1.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCntBackup[epNumber]   = USBFS_1_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBFS_1.c **** 
2206:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBFS_1.c **** 
2209:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBFS_1.c **** 
2212:Generated_Source\PSoC5/USBFS_1.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBFS_1.c **** 
2216:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBFS_1.c **** 
2219:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBFS_1.c **** 
2223:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor 1. */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 56


2224:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBFS_1.c **** 
2227:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBFS_1.c **** 
2230:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBFS_1.c ****             
2233:Generated_Source\PSoC5/USBFS_1.c ****             if (USBFS_1_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBFS_1.c ****             {
2235:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBFS_1.c ****             }
2237:Generated_Source\PSoC5/USBFS_1.c **** 
2238:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBFS_1.c **** 
2241:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBFS_1.c ****             */
2244:Generated_Source\PSoC5/USBFS_1.c ****         }
2245:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBFS_1.c ****     }
2248:Generated_Source\PSoC5/USBFS_1.c ****     else
2249:Generated_Source\PSoC5/USBFS_1.c ****     {
2250:Generated_Source\PSoC5/USBFS_1.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBFS_1.c ****     }
2252:Generated_Source\PSoC5/USBFS_1.c **** 
2253:Generated_Source\PSoC5/USBFS_1.c ****     return (length);
2254:Generated_Source\PSoC5/USBFS_1.c **** }
2255:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBFS_1.c **** 
2257:Generated_Source\PSoC5/USBFS_1.c **** 
2258:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_EnableOutEP
2260:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBFS_1.c **** *
2262:Generated_Source\PSoC5/USBFS_1.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBFS_1.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBFS_1.c **** *
2265:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBFS_1.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBFS_1.c **** *
2268:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2269:Generated_Source\PSoC5/USBFS_1.c **** *
2270:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBFS_1.c **** *
2272:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2273:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2274:Generated_Source\PSoC5/USBFS_1.c **** *
2275:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBFS_1.c **** {
 899              		.loc 1 2277 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 57


 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 904              	.LVL64:
2278:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 905              		.loc 1 2278 0
 906 0000 431E     		subs	r3, r0, #1
 907 0002 DBB2     		uxtb	r3, r3
 908 0004 072B     		cmp	r3, #7
 909 0006 0BD8     		bhi	.L65
2279:Generated_Source\PSoC5/USBFS_1.c ****     {
2280:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
 910              		.loc 1 2280 0
 911 0008 4200     		lsls	r2, r0, #1
 912 000a 0244     		add	r2, r2, r0
 913 000c 9300     		lsls	r3, r2, #2
 914 000e 054A     		ldr	r2, .L67
 915 0010 1344     		add	r3, r3, r2
 916 0012 0022     		movs	r2, #0
 917 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBFS_1.c **** 
2282:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
 918              		.loc 1 2283 0
 919 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 920 0018 D2B2     		uxtb	r2, r2
 921 001a 0001     		lsls	r0, r0, #4
 922              	.LVL65:
 923 001c 024B     		ldr	r3, .L67+4
 924 001e 1A54     		strb	r2, [r3, r0]
 925              	.L65:
 926 0020 7047     		bx	lr
 927              	.L68:
 928 0022 00BF     		.align	2
 929              	.L67:
 930 0024 00000000 		.word	USBFS_1_EP
 931 0028 FE5F0040 		.word	1073766398
 932              		.cfi_endproc
 933              	.LFE13:
 934              		.size	USBFS_1_EnableOutEP, .-USBFS_1_EnableOutEP
 935              		.section	.text.USBFS_1_ReadOutEP,"ax",%progbits
 936              		.align	2
 937              		.global	USBFS_1_ReadOutEP
 938              		.thumb
 939              		.thumb_func
 940              		.type	USBFS_1_ReadOutEP, %function
 941              	USBFS_1_ReadOutEP:
 942              	.LFB12:
1655:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 943              		.loc 1 1655 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              	.LVL66:
 948 0000 70B5     		push	{r4, r5, r6, lr}
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 4, -16
 951              		.cfi_offset 5, -12
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 58


 952              		.cfi_offset 6, -8
 953              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USBFS_1.c ****     {
 954              		.loc 1 1656 0
 955 0002 D9B1     		cbz	r1, .L74
 956 0004 0546     		mov	r5, r0
 957 0006 1446     		mov	r4, r2
 958 0008 0E46     		mov	r6, r1
1656:Generated_Source\PSoC5/USBFS_1.c ****     {
 959              		.loc 1 1656 0 is_stmt 0 discriminator 1
 960 000a C8B1     		cbz	r0, .L75
1656:Generated_Source\PSoC5/USBFS_1.c ****     {
 961              		.loc 1 1656 0 discriminator 2
 962 000c 0828     		cmp	r0, #8
 963 000e 19D8     		bhi	.L76
1660:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 964              		.loc 1 1660 0 is_stmt 1
 965 0010 FFF7FEFF 		bl	USBFS_1_GetEPCount
 966              	.LVL67:
 967 0014 A042     		cmp	r0, r4
 968 0016 03D2     		bcs	.L71
1660:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 969              		.loc 1 1660 0 is_stmt 0 discriminator 1
 970 0018 2846     		mov	r0, r5
 971 001a FFF7FEFF 		bl	USBFS_1_GetEPCount
 972              	.LVL68:
 973 001e 0446     		mov	r4, r0
 974              	.L71:
 975              	.LVL69:
 976              	.LBB4:
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 977              		.loc 1 1667 0 is_stmt 1 discriminator 4
 978 0020 0023     		movs	r3, #0
 979 0022 05E0     		b	.L72
 980              	.LVL70:
 981              	.L73:
1669:Generated_Source\PSoC5/USBFS_1.c ****             }
 982              		.loc 1 1669 0 discriminator 3
 983 0024 2901     		lsls	r1, r5, #4
 984 0026 094A     		ldr	r2, .L78
 985 0028 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 986 002a F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 987              		.loc 1 1667 0 discriminator 3
 988 002c 0133     		adds	r3, r3, #1
 989              	.LVL71:
 990 002e 9BB2     		uxth	r3, r3
 991              	.LVL72:
 992              	.L72:
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 993              		.loc 1 1667 0 is_stmt 0 discriminator 1
 994 0030 A342     		cmp	r3, r4
 995 0032 F7D3     		bcc	.L73
 996              	.LBE4:
1674:Generated_Source\PSoC5/USBFS_1.c ****     #else
 997              		.loc 1 1674 0 is_stmt 1
 998 0034 2846     		mov	r0, r5
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 59


 999 0036 FFF7FEFF 		bl	USBFS_1_EnableOutEP
 1000              	.LVL73:
 1001 003a 04E0     		b	.L70
 1002              	.LVL74:
 1003              	.L74:
1820:Generated_Source\PSoC5/USBFS_1.c ****     }
 1004              		.loc 1 1820 0
 1005 003c 0024     		movs	r4, #0
 1006 003e 02E0     		b	.L70
 1007              	.L75:
 1008 0040 0024     		movs	r4, #0
 1009 0042 00E0     		b	.L70
 1010              	.L76:
 1011 0044 0024     		movs	r4, #0
 1012              	.LVL75:
 1013              	.L70:
1824:Generated_Source\PSoC5/USBFS_1.c **** 
 1014              		.loc 1 1824 0
 1015 0046 2046     		mov	r0, r4
 1016 0048 70BD     		pop	{r4, r5, r6, pc}
 1017              	.LVL76:
 1018              	.L79:
 1019 004a 00BF     		.align	2
 1020              	.L78:
 1021 004c 78600040 		.word	1073766520
 1022              		.cfi_endproc
 1023              	.LFE12:
 1024              		.size	USBFS_1_ReadOutEP, .-USBFS_1_ReadOutEP
 1025              		.section	.text.USBFS_1_DisableOutEP,"ax",%progbits
 1026              		.align	2
 1027              		.global	USBFS_1_DisableOutEP
 1028              		.thumb
 1029              		.thumb_func
 1030              		.type	USBFS_1_DisableOutEP, %function
 1031              	USBFS_1_DisableOutEP:
 1032              	.LFB14:
2284:Generated_Source\PSoC5/USBFS_1.c ****         
2285:Generated_Source\PSoC5/USBFS_1.c ****     }
2286:Generated_Source\PSoC5/USBFS_1.c **** }
2287:Generated_Source\PSoC5/USBFS_1.c **** 
2288:Generated_Source\PSoC5/USBFS_1.c **** 
2289:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_DisableOutEP
2291:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBFS_1.c **** *
2293:Generated_Source\PSoC5/USBFS_1.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBFS_1.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBFS_1.c **** *
2296:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBFS_1.c **** *
2299:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBFS_1.c **** {
 1033              		.loc 1 2301 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 60


 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 1038              	.LVL77:
2302:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1039              		.loc 1 2302 0
 1040 0000 431E     		subs	r3, r0, #1
 1041 0002 DBB2     		uxtb	r3, r3
 1042 0004 072B     		cmp	r3, #7
 1043 0006 03D8     		bhi	.L80
2303:Generated_Source\PSoC5/USBFS_1.c ****     {
2304:Generated_Source\PSoC5/USBFS_1.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_MODE_NAK_OUT;
 1044              		.loc 1 2305 0
 1045 0008 0001     		lsls	r0, r0, #4
 1046              	.LVL78:
 1047 000a 024B     		ldr	r3, .L82
 1048 000c 0822     		movs	r2, #8
 1049 000e 1A54     		strb	r2, [r3, r0]
 1050              	.L80:
 1051 0010 7047     		bx	lr
 1052              	.L83:
 1053 0012 00BF     		.align	2
 1054              	.L82:
 1055 0014 FE5F0040 		.word	1073766398
 1056              		.cfi_endproc
 1057              	.LFE14:
 1058              		.size	USBFS_1_DisableOutEP, .-USBFS_1_DisableOutEP
 1059              		.section	.text.USBFS_1_Force,"ax",%progbits
 1060              		.align	2
 1061              		.global	USBFS_1_Force
 1062              		.thumb
 1063              		.thumb_func
 1064              		.type	USBFS_1_Force, %function
 1065              	USBFS_1_Force:
 1066              	.LFB15:
2306:Generated_Source\PSoC5/USBFS_1.c ****     }
2307:Generated_Source\PSoC5/USBFS_1.c **** }
2308:Generated_Source\PSoC5/USBFS_1.c **** 
2309:Generated_Source\PSoC5/USBFS_1.c **** 
2310:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Force
2312:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBFS_1.c **** *
2314:Generated_Source\PSoC5/USBFS_1.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBFS_1.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBFS_1.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBFS_1.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBFS_1.c **** *
2319:Generated_Source\PSoC5/USBFS_1.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBFS_1.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBFS_1.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBFS_1.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 61


2328:Generated_Source\PSoC5/USBFS_1.c **** *
2329:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBFS_1.c **** {
 1067              		.loc 1 2331 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072              	.LVL79:
2332:Generated_Source\PSoC5/USBFS_1.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBFS_1.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBFS_1.c ****     */
2335:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR0_REG = bState;
 1073              		.loc 1 2335 0
 1074 0000 014B     		ldr	r3, .L85
 1075 0002 1870     		strb	r0, [r3]
 1076 0004 7047     		bx	lr
 1077              	.L86:
 1078 0006 00BF     		.align	2
 1079              	.L85:
 1080 0008 10600040 		.word	1073766416
 1081              		.cfi_endproc
 1082              	.LFE15:
 1083              		.size	USBFS_1_Force, .-USBFS_1_Force
 1084              		.section	.text.USBFS_1_GetEPAckState,"ax",%progbits
 1085              		.align	2
 1086              		.global	USBFS_1_GetEPAckState
 1087              		.thumb
 1088              		.thumb_func
 1089              		.type	USBFS_1_GetEPAckState, %function
 1090              	USBFS_1_GetEPAckState:
 1091              	.LFB16:
2336:Generated_Source\PSoC5/USBFS_1.c **** }
2337:Generated_Source\PSoC5/USBFS_1.c **** 
2338:Generated_Source\PSoC5/USBFS_1.c **** 
2339:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPAckState
2341:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBFS_1.c **** *
2343:Generated_Source\PSoC5/USBFS_1.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBFS_1.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBFS_1.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBFS_1.c **** *
2347:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBFS_1.c **** *
2350:Generated_Source\PSoC5/USBFS_1.c **** *  \return
2351:Generated_Source\PSoC5/USBFS_1.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBFS_1.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBFS_1.c **** *
2354:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBFS_1.c **** {
 1092              		.loc 1 2356 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 62


 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 1097              	.LVL80:
2357:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBFS_1.c **** 
2359:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1098              		.loc 1 2359 0
 1099 0000 431E     		subs	r3, r0, #1
 1100 0002 DBB2     		uxtb	r3, r3
 1101 0004 072B     		cmp	r3, #7
 1102 0006 06D8     		bhi	.L89
2360:Generated_Source\PSoC5/USBFS_1.c ****     {
2361:Generated_Source\PSoC5/USBFS_1.c ****         cr = USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBFS_1_MODE_ACKD;
 1103              		.loc 1 2361 0
 1104 0008 0001     		lsls	r0, r0, #4
 1105              	.LVL81:
 1106 000a 044B     		ldr	r3, .L90
 1107 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1108 000e 00F01000 		and	r0, r0, #16
 1109 0012 C0B2     		uxtb	r0, r0
 1110              	.LVL82:
 1111 0014 7047     		bx	lr
 1112              	.LVL83:
 1113              	.L89:
2357:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr = 0u;
 1114              		.loc 1 2357 0
 1115 0016 0020     		movs	r0, #0
 1116              	.LVL84:
2362:Generated_Source\PSoC5/USBFS_1.c ****     }
2363:Generated_Source\PSoC5/USBFS_1.c **** 
2364:Generated_Source\PSoC5/USBFS_1.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBFS_1.c **** }
 1117              		.loc 1 2365 0
 1118 0018 7047     		bx	lr
 1119              	.L91:
 1120 001a 00BF     		.align	2
 1121              	.L90:
 1122 001c FE5F0040 		.word	1073766398
 1123              		.cfi_endproc
 1124              	.LFE16:
 1125              		.size	USBFS_1_GetEPAckState, .-USBFS_1_GetEPAckState
 1126              		.section	.text.USBFS_1_SetPowerStatus,"ax",%progbits
 1127              		.align	2
 1128              		.global	USBFS_1_SetPowerStatus
 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	USBFS_1_SetPowerStatus, %function
 1132              	USBFS_1_SetPowerStatus:
 1133              	.LFB17:
2366:Generated_Source\PSoC5/USBFS_1.c **** 
2367:Generated_Source\PSoC5/USBFS_1.c **** 
2368:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_SetPowerStatus
2370:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBFS_1.c **** *
2372:Generated_Source\PSoC5/USBFS_1.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBFS_1.c **** *  GET_STATUS requests based on this value. This allows the device to properly
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 63


2374:Generated_Source\PSoC5/USBFS_1.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBFS_1.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBFS_1.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBFS_1.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBFS_1.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBFS_1.c **** *
2380:Generated_Source\PSoC5/USBFS_1.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBFS_1.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBFS_1.c **** *        given here:
2383:Generated_Source\PSoC5/USBFS_1.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBFS_1.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBFS_1.c **** *
2388:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2389:Generated_Source\PSoC5/USBFS_1.c **** *
2390:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBFS_1.c **** *
2392:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2393:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2394:Generated_Source\PSoC5/USBFS_1.c **** *
2395:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBFS_1.c **** {
 1134              		.loc 1 2397 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 1139              	.LVL85:
2398:Generated_Source\PSoC5/USBFS_1.c ****     if (powerStatus != USBFS_1_DEVICE_STATUS_BUS_POWERED)
 1140              		.loc 1 2398 0
 1141 0000 28B1     		cbz	r0, .L93
2399:Generated_Source\PSoC5/USBFS_1.c ****     {
2400:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_deviceStatus |= (uint8)  USBFS_1_DEVICE_STATUS_SELF_POWERED;
 1142              		.loc 1 2400 0
 1143 0002 064A     		ldr	r2, .L95
 1144 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1145 0006 43F00103 		orr	r3, r3, #1
 1146 000a 1370     		strb	r3, [r2]
 1147 000c 7047     		bx	lr
 1148              	.L93:
2401:Generated_Source\PSoC5/USBFS_1.c ****     }
2402:Generated_Source\PSoC5/USBFS_1.c ****     else
2403:Generated_Source\PSoC5/USBFS_1.c ****     {
2404:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_deviceStatus &= (uint8) ~USBFS_1_DEVICE_STATUS_SELF_POWERED;
 1149              		.loc 1 2404 0
 1150 000e 034A     		ldr	r2, .L95
 1151 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1152 0012 03F0FE03 		and	r3, r3, #254
 1153 0016 1370     		strb	r3, [r2]
 1154 0018 7047     		bx	lr
 1155              	.L96:
 1156 001a 00BF     		.align	2
 1157              	.L95:
 1158 001c 00000000 		.word	USBFS_1_deviceStatus
 1159              		.cfi_endproc
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 64


 1160              	.LFE17:
 1161              		.size	USBFS_1_SetPowerStatus, .-USBFS_1_SetPowerStatus
 1162              		.section	.text.USBFS_1_RWUEnabled,"ax",%progbits
 1163              		.align	2
 1164              		.global	USBFS_1_RWUEnabled
 1165              		.thumb
 1166              		.thumb_func
 1167              		.type	USBFS_1_RWUEnabled, %function
 1168              	USBFS_1_RWUEnabled:
 1169              	.LFB18:
2405:Generated_Source\PSoC5/USBFS_1.c ****     }
2406:Generated_Source\PSoC5/USBFS_1.c **** }
2407:Generated_Source\PSoC5/USBFS_1.c **** 
2408:Generated_Source\PSoC5/USBFS_1.c **** 
2409:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_VBusPresent
2412:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBFS_1.c ****     *
2414:Generated_Source\PSoC5/USBFS_1.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBFS_1.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBFS_1.c ****     *
2417:Generated_Source\PSoC5/USBFS_1.c ****     * \return
2418:Generated_Source\PSoC5/USBFS_1.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBFS_1.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBFS_1.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBFS_1.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBFS_1.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBFS_1.c ****     *
2424:Generated_Source\PSoC5/USBFS_1.c ****     *
2425:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBFS_1.c ****     uint8 USBFS_1_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBFS_1.c ****     {
2428:Generated_Source\PSoC5/USBFS_1.c ****         return ((0u != (USBFS_1_VBUS_STATUS_REG & USBFS_1_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBFS_1.c ****     }
2430:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBFS_1.c **** 
2432:Generated_Source\PSoC5/USBFS_1.c **** 
2433:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_RWUEnabled
2435:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBFS_1.c **** *
2437:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBFS_1.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBFS_1.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBFS_1.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBFS_1.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBFS_1.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBFS_1.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBFS_1.c **** *
2445:Generated_Source\PSoC5/USBFS_1.c **** *
2446:Generated_Source\PSoC5/USBFS_1.c **** * \return
2447:Generated_Source\PSoC5/USBFS_1.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBFS_1.c **** *
2449:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2450:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 65


2452:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBFS_1.c **** {
 1170              		.loc 1 2454 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175              	.LVL86:
2455:Generated_Source\PSoC5/USBFS_1.c ****     uint8 result = USBFS_1_FALSE;
2456:Generated_Source\PSoC5/USBFS_1.c **** 
2457:Generated_Source\PSoC5/USBFS_1.c ****     if (0u != (USBFS_1_deviceStatus & USBFS_1_DEVICE_STATUS_REMOTE_WAKEUP))
 1176              		.loc 1 2457 0
 1177 0000 044B     		ldr	r3, .L100
 1178 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1179 0004 13F0020F 		tst	r3, #2
 1180 0008 01D1     		bne	.L99
2455:Generated_Source\PSoC5/USBFS_1.c ****     uint8 result = USBFS_1_FALSE;
 1181              		.loc 1 2455 0
 1182 000a 0020     		movs	r0, #0
 1183 000c 7047     		bx	lr
 1184              	.L99:
2458:Generated_Source\PSoC5/USBFS_1.c ****     {
2459:Generated_Source\PSoC5/USBFS_1.c ****         result = USBFS_1_TRUE;
 1185              		.loc 1 2459 0
 1186 000e 0120     		movs	r0, #1
 1187              	.LVL87:
2460:Generated_Source\PSoC5/USBFS_1.c ****     }
2461:Generated_Source\PSoC5/USBFS_1.c **** 
2462:Generated_Source\PSoC5/USBFS_1.c ****     return (result);
2463:Generated_Source\PSoC5/USBFS_1.c **** }
 1188              		.loc 1 2463 0
 1189 0010 7047     		bx	lr
 1190              	.L101:
 1191 0012 00BF     		.align	2
 1192              	.L100:
 1193 0014 00000000 		.word	USBFS_1_deviceStatus
 1194              		.cfi_endproc
 1195              	.LFE18:
 1196              		.size	USBFS_1_RWUEnabled, .-USBFS_1_RWUEnabled
 1197              		.section	.text.USBFS_1_GetDeviceAddress,"ax",%progbits
 1198              		.align	2
 1199              		.global	USBFS_1_GetDeviceAddress
 1200              		.thumb
 1201              		.thumb_func
 1202              		.type	USBFS_1_GetDeviceAddress, %function
 1203              	USBFS_1_GetDeviceAddress:
 1204              	.LFB19:
2464:Generated_Source\PSoC5/USBFS_1.c **** 
2465:Generated_Source\PSoC5/USBFS_1.c **** 
2466:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetDeviceAddress
2468:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBFS_1.c **** *
2470:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBFS_1.c **** *
2472:Generated_Source\PSoC5/USBFS_1.c **** * \return
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 66


2473:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBFS_1.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBFS_1.c **** *
2476:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBFS_1.c **** {
 1205              		.loc 1 2478 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBFS_1.c ****     return (uint8)(USBFS_1_CR0_REG & USBFS_1_CR0_DEVICE_ADDRESS_MASK);
 1210              		.loc 1 2479 0
 1211 0000 024B     		ldr	r3, .L103
 1212 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBFS_1.c **** }
 1213              		.loc 1 2480 0
 1214 0004 00F07F00 		and	r0, r0, #127
 1215 0008 7047     		bx	lr
 1216              	.L104:
 1217 000a 00BF     		.align	2
 1218              	.L103:
 1219 000c 08600040 		.word	1073766408
 1220              		.cfi_endproc
 1221              	.LFE19:
 1222              		.size	USBFS_1_GetDeviceAddress, .-USBFS_1_GetDeviceAddress
 1223              		.section	.text.USBFS_1_EnableSofInt,"ax",%progbits
 1224              		.align	2
 1225              		.global	USBFS_1_EnableSofInt
 1226              		.thumb
 1227              		.thumb_func
 1228              		.type	USBFS_1_EnableSofInt, %function
 1229              	USBFS_1_EnableSofInt:
 1230              	.LFB20:
2481:Generated_Source\PSoC5/USBFS_1.c **** 
2482:Generated_Source\PSoC5/USBFS_1.c **** 
2483:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_EnableSofInt
2485:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBFS_1.c **** *
2487:Generated_Source\PSoC5/USBFS_1.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBFS_1.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBFS_1.c **** *
2490:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBFS_1.c **** {
 1231              		.loc 1 2492 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 1236 0000 7047     		bx	lr
 1237              		.cfi_endproc
 1238              	.LFE20:
 1239              		.size	USBFS_1_EnableSofInt, .-USBFS_1_EnableSofInt
 1240 0002 00BF     		.section	.text.USBFS_1_DisableSofInt,"ax",%progbits
 1241              		.align	2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 67


 1242              		.global	USBFS_1_DisableSofInt
 1243              		.thumb
 1244              		.thumb_func
 1245              		.type	USBFS_1_DisableSofInt, %function
 1246              	USBFS_1_DisableSofInt:
 1247              	.LFB21:
2493:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG |= (uint32) USBFS_1_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBFS_1.c **** #else
2497:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_SOF_VECT_NUM);
2500:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBFS_1.c **** }
2503:Generated_Source\PSoC5/USBFS_1.c **** 
2504:Generated_Source\PSoC5/USBFS_1.c **** 
2505:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_DisableSofInt
2507:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBFS_1.c **** *
2509:Generated_Source\PSoC5/USBFS_1.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBFS_1.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBFS_1.c **** *
2512:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBFS_1.c **** {
 1248              		.loc 1 2514 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 1253 0000 7047     		bx	lr
 1254              		.cfi_endproc
 1255              	.LFE21:
 1256              		.size	USBFS_1_DisableSofInt, .-USBFS_1_DisableSofInt
 1257              		.global	USBFS_1_initVar
 1258 0002 00BF     		.bss
 1259              		.set	.LANCHOR0,. + 0
 1260              		.type	USBFS_1_initVar, %object
 1261              		.size	USBFS_1_initVar, 1
 1262              	USBFS_1_initVar:
 1263 0000 00       		.space	1
 1264              		.text
 1265              	.Letext0:
 1266              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1267              		.file 3 "Generated_Source\\PSoC5\\USBFS_1.h"
 1268              		.file 4 "Generated_Source\\PSoC5\\USBFS_1_pvt.h"
 1269              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1270              		.file 6 "Generated_Source\\PSoC5\\USBFS_1_Dp.h"
 1271              		.section	.debug_info,"",%progbits
 1272              	.Ldebug_info0:
 1273 0000 3E090000 		.4byte	0x93e
 1274 0004 0400     		.2byte	0x4
 1275 0006 00000000 		.4byte	.Ldebug_abbrev0
 1276 000a 04       		.byte	0x4
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 68


 1277 000b 01       		.uleb128 0x1
 1278 000c 51040000 		.4byte	.LASF100
 1279 0010 0C       		.byte	0xc
 1280 0011 04040000 		.4byte	.LASF101
 1281 0015 43050000 		.4byte	.LASF102
 1282 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1283 001d 00000000 		.4byte	0
 1284 0021 00000000 		.4byte	.Ldebug_line0
 1285 0025 02       		.uleb128 0x2
 1286 0026 01       		.byte	0x1
 1287 0027 06       		.byte	0x6
 1288 0028 B5000000 		.4byte	.LASF0
 1289 002c 02       		.uleb128 0x2
 1290 002d 01       		.byte	0x1
 1291 002e 08       		.byte	0x8
 1292 002f F6030000 		.4byte	.LASF1
 1293 0033 02       		.uleb128 0x2
 1294 0034 02       		.byte	0x2
 1295 0035 05       		.byte	0x5
 1296 0036 25040000 		.4byte	.LASF2
 1297 003a 02       		.uleb128 0x2
 1298 003b 02       		.byte	0x2
 1299 003c 07       		.byte	0x7
 1300 003d 5B020000 		.4byte	.LASF3
 1301 0041 02       		.uleb128 0x2
 1302 0042 04       		.byte	0x4
 1303 0043 05       		.byte	0x5
 1304 0044 C6000000 		.4byte	.LASF4
 1305 0048 02       		.uleb128 0x2
 1306 0049 04       		.byte	0x4
 1307 004a 07       		.byte	0x7
 1308 004b D0010000 		.4byte	.LASF5
 1309 004f 02       		.uleb128 0x2
 1310 0050 08       		.byte	0x8
 1311 0051 05       		.byte	0x5
 1312 0052 A7000000 		.4byte	.LASF6
 1313 0056 02       		.uleb128 0x2
 1314 0057 08       		.byte	0x8
 1315 0058 07       		.byte	0x7
 1316 0059 54000000 		.4byte	.LASF7
 1317 005d 03       		.uleb128 0x3
 1318 005e 04       		.byte	0x4
 1319 005f 05       		.byte	0x5
 1320 0060 696E7400 		.ascii	"int\000"
 1321 0064 02       		.uleb128 0x2
 1322 0065 04       		.byte	0x4
 1323 0066 07       		.byte	0x7
 1324 0067 97010000 		.4byte	.LASF8
 1325 006b 04       		.uleb128 0x4
 1326 006c F5000000 		.4byte	.LASF9
 1327 0070 02       		.byte	0x2
 1328 0071 E401     		.2byte	0x1e4
 1329 0073 2C000000 		.4byte	0x2c
 1330 0077 04       		.uleb128 0x4
 1331 0078 00000000 		.4byte	.LASF10
 1332 007c 02       		.byte	0x2
 1333 007d E501     		.2byte	0x1e5
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 69


 1334 007f 3A000000 		.4byte	0x3a
 1335 0083 04       		.uleb128 0x4
 1336 0084 47010000 		.4byte	.LASF11
 1337 0088 02       		.byte	0x2
 1338 0089 E601     		.2byte	0x1e6
 1339 008b 48000000 		.4byte	0x48
 1340 008f 02       		.uleb128 0x2
 1341 0090 04       		.byte	0x4
 1342 0091 04       		.byte	0x4
 1343 0092 90030000 		.4byte	.LASF12
 1344 0096 02       		.uleb128 0x2
 1345 0097 08       		.byte	0x8
 1346 0098 04       		.byte	0x4
 1347 0099 1A010000 		.4byte	.LASF13
 1348 009d 02       		.uleb128 0x2
 1349 009e 01       		.byte	0x1
 1350 009f 08       		.byte	0x8
 1351 00a0 2E050000 		.4byte	.LASF14
 1352 00a4 04       		.uleb128 0x4
 1353 00a5 F1030000 		.4byte	.LASF15
 1354 00a9 02       		.byte	0x2
 1355 00aa 8E02     		.2byte	0x28e
 1356 00ac B0000000 		.4byte	0xb0
 1357 00b0 05       		.uleb128 0x5
 1358 00b1 6B000000 		.4byte	0x6b
 1359 00b5 04       		.uleb128 0x4
 1360 00b6 E7020000 		.4byte	.LASF16
 1361 00ba 02       		.byte	0x2
 1362 00bb 9002     		.2byte	0x290
 1363 00bd C1000000 		.4byte	0xc1
 1364 00c1 05       		.uleb128 0x5
 1365 00c2 83000000 		.4byte	0x83
 1366 00c6 02       		.uleb128 0x2
 1367 00c7 08       		.byte	0x8
 1368 00c8 04       		.byte	0x4
 1369 00c9 2C030000 		.4byte	.LASF17
 1370 00cd 02       		.uleb128 0x2
 1371 00ce 04       		.byte	0x4
 1372 00cf 07       		.byte	0x7
 1373 00d0 10030000 		.4byte	.LASF18
 1374 00d4 06       		.uleb128 0x6
 1375 00d5 0C       		.byte	0xc
 1376 00d6 03       		.byte	0x3
 1377 00d7 92       		.byte	0x92
 1378 00d8 49010000 		.4byte	0x149
 1379 00dc 07       		.uleb128 0x7
 1380 00dd 38030000 		.4byte	.LASF19
 1381 00e1 03       		.byte	0x3
 1382 00e2 94       		.byte	0x94
 1383 00e3 6B000000 		.4byte	0x6b
 1384 00e7 00       		.byte	0
 1385 00e8 07       		.uleb128 0x7
 1386 00e9 AC030000 		.4byte	.LASF20
 1387 00ed 03       		.byte	0x3
 1388 00ee 95       		.byte	0x95
 1389 00ef 6B000000 		.4byte	0x6b
 1390 00f3 01       		.byte	0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 70


 1391 00f4 07       		.uleb128 0x7
 1392 00f5 ED020000 		.4byte	.LASF21
 1393 00f9 03       		.byte	0x3
 1394 00fa 96       		.byte	0x96
 1395 00fb 6B000000 		.4byte	0x6b
 1396 00ff 02       		.byte	0x2
 1397 0100 07       		.uleb128 0x7
 1398 0101 FB000000 		.4byte	.LASF22
 1399 0105 03       		.byte	0x3
 1400 0106 97       		.byte	0x97
 1401 0107 6B000000 		.4byte	0x6b
 1402 010b 03       		.byte	0x3
 1403 010c 07       		.uleb128 0x7
 1404 010d 81000000 		.4byte	.LASF23
 1405 0111 03       		.byte	0x3
 1406 0112 98       		.byte	0x98
 1407 0113 6B000000 		.4byte	0x6b
 1408 0117 04       		.byte	0x4
 1409 0118 07       		.uleb128 0x7
 1410 0119 5A010000 		.4byte	.LASF24
 1411 011d 03       		.byte	0x3
 1412 011e 99       		.byte	0x99
 1413 011f 6B000000 		.4byte	0x6b
 1414 0123 05       		.byte	0x5
 1415 0124 07       		.uleb128 0x7
 1416 0125 96050000 		.4byte	.LASF25
 1417 0129 03       		.byte	0x3
 1418 012a 9A       		.byte	0x9a
 1419 012b 77000000 		.4byte	0x77
 1420 012f 06       		.byte	0x6
 1421 0130 07       		.uleb128 0x7
 1422 0131 38050000 		.4byte	.LASF26
 1423 0135 03       		.byte	0x3
 1424 0136 9B       		.byte	0x9b
 1425 0137 77000000 		.4byte	0x77
 1426 013b 08       		.byte	0x8
 1427 013c 07       		.uleb128 0x7
 1428 013d D6020000 		.4byte	.LASF27
 1429 0141 03       		.byte	0x3
 1430 0142 9C       		.byte	0x9c
 1431 0143 6B000000 		.4byte	0x6b
 1432 0147 0A       		.byte	0xa
 1433 0148 00       		.byte	0
 1434 0149 08       		.uleb128 0x8
 1435 014a 7D020000 		.4byte	.LASF28
 1436 014e 03       		.byte	0x3
 1437 014f 9D       		.byte	0x9d
 1438 0150 D4000000 		.4byte	0xd4
 1439 0154 06       		.uleb128 0x6
 1440 0155 10       		.byte	0x10
 1441 0156 03       		.byte	0x3
 1442 0157 D9       		.byte	0xd9
 1443 0158 8D010000 		.4byte	0x18d
 1444 015c 07       		.uleb128 0x7
 1445 015d 66030000 		.4byte	.LASF29
 1446 0161 03       		.byte	0x3
 1447 0162 DB       		.byte	0xdb
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 71


 1448 0163 6B000000 		.4byte	0x6b
 1449 0167 00       		.byte	0
 1450 0168 07       		.uleb128 0x7
 1451 0169 6D030000 		.4byte	.LASF30
 1452 016d 03       		.byte	0x3
 1453 016e DC       		.byte	0xdc
 1454 016f 6B000000 		.4byte	0x6b
 1455 0173 01       		.byte	0x1
 1456 0174 07       		.uleb128 0x7
 1457 0175 8A030000 		.4byte	.LASF31
 1458 0179 03       		.byte	0x3
 1459 017a DD       		.byte	0xdd
 1460 017b 6B000000 		.4byte	0x6b
 1461 017f 02       		.byte	0x2
 1462 0180 09       		.uleb128 0x9
 1463 0181 67617000 		.ascii	"gap\000"
 1464 0185 03       		.byte	0x3
 1465 0186 DE       		.byte	0xde
 1466 0187 8D010000 		.4byte	0x18d
 1467 018b 03       		.byte	0x3
 1468 018c 00       		.byte	0
 1469 018d 0A       		.uleb128 0xa
 1470 018e 6B000000 		.4byte	0x6b
 1471 0192 9D010000 		.4byte	0x19d
 1472 0196 0B       		.uleb128 0xb
 1473 0197 CD000000 		.4byte	0xcd
 1474 019b 0C       		.byte	0xc
 1475 019c 00       		.byte	0
 1476 019d 08       		.uleb128 0x8
 1477 019e 74030000 		.4byte	.LASF32
 1478 01a2 03       		.byte	0x3
 1479 01a3 DF       		.byte	0xdf
 1480 01a4 54010000 		.4byte	0x154
 1481 01a8 06       		.uleb128 0x6
 1482 01a9 10       		.byte	0x10
 1483 01aa 03       		.byte	0x3
 1484 01ab EB       		.byte	0xeb
 1485 01ac 29020000 		.4byte	0x229
 1486 01b0 07       		.uleb128 0x7
 1487 01b1 86000000 		.4byte	.LASF33
 1488 01b5 03       		.byte	0x3
 1489 01b6 ED       		.byte	0xed
 1490 01b7 6B000000 		.4byte	0x6b
 1491 01bb 00       		.byte	0
 1492 01bc 07       		.uleb128 0x7
 1493 01bd 3C060000 		.4byte	.LASF34
 1494 01c1 03       		.byte	0x3
 1495 01c2 EE       		.byte	0xee
 1496 01c3 6B000000 		.4byte	0x6b
 1497 01c7 01       		.byte	0x1
 1498 01c8 07       		.uleb128 0x7
 1499 01c9 42010000 		.4byte	.LASF35
 1500 01cd 03       		.byte	0x3
 1501 01ce EF       		.byte	0xef
 1502 01cf 6B000000 		.4byte	0x6b
 1503 01d3 02       		.byte	0x2
 1504 01d4 07       		.uleb128 0x7
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 72


 1505 01d5 79010000 		.4byte	.LASF36
 1506 01d9 03       		.byte	0x3
 1507 01da F0       		.byte	0xf0
 1508 01db 6B000000 		.4byte	0x6b
 1509 01df 03       		.byte	0x3
 1510 01e0 07       		.uleb128 0x7
 1511 01e1 04010000 		.4byte	.LASF37
 1512 01e5 03       		.byte	0x3
 1513 01e6 F1       		.byte	0xf1
 1514 01e7 6B000000 		.4byte	0x6b
 1515 01eb 04       		.byte	0x4
 1516 01ec 07       		.uleb128 0x7
 1517 01ed DF040000 		.4byte	.LASF38
 1518 01f1 03       		.byte	0x3
 1519 01f2 F2       		.byte	0xf2
 1520 01f3 6B000000 		.4byte	0x6b
 1521 01f7 05       		.byte	0x5
 1522 01f8 07       		.uleb128 0x7
 1523 01f9 4C040000 		.4byte	.LASF39
 1524 01fd 03       		.byte	0x3
 1525 01fe F3       		.byte	0xf3
 1526 01ff 6B000000 		.4byte	0x6b
 1527 0203 06       		.byte	0x6
 1528 0204 07       		.uleb128 0x7
 1529 0205 5E030000 		.4byte	.LASF40
 1530 0209 03       		.byte	0x3
 1531 020a F4       		.byte	0xf4
 1532 020b 6B000000 		.4byte	0x6b
 1533 020f 07       		.byte	0x7
 1534 0210 07       		.uleb128 0x7
 1535 0211 22060000 		.4byte	.LASF41
 1536 0215 03       		.byte	0x3
 1537 0216 F5       		.byte	0xf5
 1538 0217 6B000000 		.4byte	0x6b
 1539 021b 08       		.byte	0x8
 1540 021c 09       		.uleb128 0x9
 1541 021d 67617000 		.ascii	"gap\000"
 1542 0221 03       		.byte	0x3
 1543 0222 F6       		.byte	0xf6
 1544 0223 29020000 		.4byte	0x229
 1545 0227 09       		.byte	0x9
 1546 0228 00       		.byte	0
 1547 0229 0A       		.uleb128 0xa
 1548 022a 6B000000 		.4byte	0x6b
 1549 022e 39020000 		.4byte	0x239
 1550 0232 0B       		.uleb128 0xb
 1551 0233 CD000000 		.4byte	0xcd
 1552 0237 06       		.byte	0x6
 1553 0238 00       		.byte	0
 1554 0239 08       		.uleb128 0x8
 1555 023a BA010000 		.4byte	.LASF42
 1556 023e 03       		.byte	0x3
 1557 023f F7       		.byte	0xf7
 1558 0240 A8010000 		.4byte	0x1a8
 1559 0244 0C       		.uleb128 0xc
 1560 0245 90       		.byte	0x90
 1561 0246 03       		.byte	0x3
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 73


 1562 0247 1301     		.2byte	0x113
 1563 0249 5B020000 		.4byte	0x25b
 1564 024d 0D       		.uleb128 0xd
 1565 024e 54010000 		.4byte	.LASF43
 1566 0252 03       		.byte	0x3
 1567 0253 1501     		.2byte	0x115
 1568 0255 5B020000 		.4byte	0x25b
 1569 0259 00       		.byte	0
 1570 025a 00       		.byte	0
 1571 025b 0A       		.uleb128 0xa
 1572 025c 9D010000 		.4byte	0x19d
 1573 0260 6B020000 		.4byte	0x26b
 1574 0264 0B       		.uleb128 0xb
 1575 0265 CD000000 		.4byte	0xcd
 1576 0269 08       		.byte	0x8
 1577 026a 00       		.byte	0
 1578 026b 04       		.uleb128 0x4
 1579 026c 06020000 		.4byte	.LASF44
 1580 0270 03       		.byte	0x3
 1581 0271 1601     		.2byte	0x116
 1582 0273 44020000 		.4byte	0x244
 1583 0277 0C       		.uleb128 0xc
 1584 0278 90       		.byte	0x90
 1585 0279 03       		.byte	0x3
 1586 027a 1901     		.2byte	0x119
 1587 027c 8E020000 		.4byte	0x28e
 1588 0280 0D       		.uleb128 0xd
 1589 0281 D0020000 		.4byte	.LASF45
 1590 0285 03       		.byte	0x3
 1591 0286 1B01     		.2byte	0x11b
 1592 0288 8E020000 		.4byte	0x28e
 1593 028c 00       		.byte	0
 1594 028d 00       		.byte	0
 1595 028e 0A       		.uleb128 0xa
 1596 028f 39020000 		.4byte	0x239
 1597 0293 9E020000 		.4byte	0x29e
 1598 0297 0B       		.uleb128 0xb
 1599 0298 CD000000 		.4byte	0xcd
 1600 029c 08       		.byte	0x8
 1601 029d 00       		.byte	0
 1602 029e 04       		.uleb128 0x4
 1603 029f 1D020000 		.4byte	.LASF46
 1604 02a3 03       		.byte	0x3
 1605 02a4 1C01     		.2byte	0x11c
 1606 02a6 77020000 		.4byte	0x277
 1607 02aa 0E       		.uleb128 0xe
 1608 02ab 21050000 		.4byte	.LASF47
 1609 02af 01       		.byte	0x1
 1610 02b0 D3       		.byte	0xd3
 1611 02b1 00000000 		.4byte	.LFB1
 1612 02b5 04010000 		.4byte	.LFE1-.LFB1
 1613 02b9 01       		.uleb128 0x1
 1614 02ba 9C       		.byte	0x9c
 1615 02bb E5030000 		.4byte	0x3e5
 1616 02bf 0F       		.uleb128 0xf
 1617 02c0 11060000 		.4byte	.LASF51
 1618 02c4 01       		.byte	0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 74


 1619 02c5 FA       		.byte	0xfa
 1620 02c6 6B000000 		.4byte	0x6b
 1621 02ca 00000000 		.4byte	.LLST0
 1622 02ce 10       		.uleb128 0x10
 1623 02cf 06000000 		.4byte	.LVL0
 1624 02d3 F4080000 		.4byte	0x8f4
 1625 02d7 11       		.uleb128 0x11
 1626 02d8 3C000000 		.4byte	.LVL2
 1627 02dc FF080000 		.4byte	0x8ff
 1628 02e0 EA020000 		.4byte	0x2ea
 1629 02e4 12       		.uleb128 0x12
 1630 02e5 01       		.uleb128 0x1
 1631 02e6 50       		.byte	0x50
 1632 02e7 01       		.uleb128 0x1
 1633 02e8 30       		.byte	0x30
 1634 02e9 00       		.byte	0
 1635 02ea 11       		.uleb128 0x11
 1636 02eb 5C000000 		.4byte	.LVL3
 1637 02ef FF080000 		.4byte	0x8ff
 1638 02f3 FE020000 		.4byte	0x2fe
 1639 02f7 12       		.uleb128 0x12
 1640 02f8 01       		.uleb128 0x1
 1641 02f9 50       		.byte	0x50
 1642 02fa 02       		.uleb128 0x2
 1643 02fb 75       		.byte	0x75
 1644 02fc 00       		.sleb128 0
 1645 02fd 00       		.byte	0
 1646 02fe 11       		.uleb128 0x11
 1647 02ff 62000000 		.4byte	.LVL4
 1648 0303 FF080000 		.4byte	0x8ff
 1649 0307 12030000 		.4byte	0x312
 1650 030b 12       		.uleb128 0x12
 1651 030c 01       		.uleb128 0x1
 1652 030d 50       		.byte	0x50
 1653 030e 02       		.uleb128 0x2
 1654 030f 08       		.byte	0x8
 1655 0310 28       		.byte	0x28
 1656 0311 00       		.byte	0
 1657 0312 11       		.uleb128 0x11
 1658 0313 80000000 		.4byte	.LVL5
 1659 0317 FF080000 		.4byte	0x8ff
 1660 031b 26030000 		.4byte	0x326
 1661 031f 12       		.uleb128 0x12
 1662 0320 01       		.uleb128 0x1
 1663 0321 50       		.byte	0x50
 1664 0322 02       		.uleb128 0x2
 1665 0323 77       		.byte	0x77
 1666 0324 00       		.sleb128 0
 1667 0325 00       		.byte	0
 1668 0326 11       		.uleb128 0x11
 1669 0327 98000000 		.4byte	.LVL6
 1670 032b 0A090000 		.4byte	0x90a
 1671 032f 3A030000 		.4byte	0x33a
 1672 0333 12       		.uleb128 0x12
 1673 0334 01       		.uleb128 0x1
 1674 0335 50       		.byte	0x50
 1675 0336 02       		.uleb128 0x2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 75


 1676 0337 76       		.byte	0x76
 1677 0338 00       		.sleb128 0
 1678 0339 00       		.byte	0
 1679 033a 11       		.uleb128 0x11
 1680 033b A0000000 		.4byte	.LVL7
 1681 033f 15090000 		.4byte	0x915
 1682 0343 52030000 		.4byte	0x352
 1683 0347 12       		.uleb128 0x12
 1684 0348 01       		.uleb128 0x1
 1685 0349 50       		.byte	0x50
 1686 034a 01       		.uleb128 0x1
 1687 034b 47       		.byte	0x47
 1688 034c 12       		.uleb128 0x12
 1689 034d 01       		.uleb128 0x1
 1690 034e 51       		.byte	0x51
 1691 034f 01       		.uleb128 0x1
 1692 0350 37       		.byte	0x37
 1693 0351 00       		.byte	0
 1694 0352 11       		.uleb128 0x11
 1695 0353 A8000000 		.4byte	.LVL8
 1696 0357 20090000 		.4byte	0x920
 1697 035b 65030000 		.4byte	0x365
 1698 035f 12       		.uleb128 0x12
 1699 0360 01       		.uleb128 0x1
 1700 0361 50       		.byte	0x50
 1701 0362 01       		.uleb128 0x1
 1702 0363 47       		.byte	0x47
 1703 0364 00       		.byte	0
 1704 0365 11       		.uleb128 0x11
 1705 0366 B0000000 		.4byte	.LVL9
 1706 036a 15090000 		.4byte	0x915
 1707 036e 7D030000 		.4byte	0x37d
 1708 0372 12       		.uleb128 0x12
 1709 0373 01       		.uleb128 0x1
 1710 0374 50       		.byte	0x50
 1711 0375 01       		.uleb128 0x1
 1712 0376 48       		.byte	0x48
 1713 0377 12       		.uleb128 0x12
 1714 0378 01       		.uleb128 0x1
 1715 0379 51       		.byte	0x51
 1716 037a 01       		.uleb128 0x1
 1717 037b 37       		.byte	0x37
 1718 037c 00       		.byte	0
 1719 037d 11       		.uleb128 0x11
 1720 037e B8000000 		.4byte	.LVL10
 1721 0382 20090000 		.4byte	0x920
 1722 0386 90030000 		.4byte	0x390
 1723 038a 12       		.uleb128 0x12
 1724 038b 01       		.uleb128 0x1
 1725 038c 50       		.byte	0x50
 1726 038d 01       		.uleb128 0x1
 1727 038e 48       		.byte	0x48
 1728 038f 00       		.byte	0
 1729 0390 11       		.uleb128 0x11
 1730 0391 C0000000 		.4byte	.LVL11
 1731 0395 15090000 		.4byte	0x915
 1732 0399 A9030000 		.4byte	0x3a9
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 76


 1733 039d 12       		.uleb128 0x12
 1734 039e 01       		.uleb128 0x1
 1735 039f 50       		.byte	0x50
 1736 03a0 02       		.uleb128 0x2
 1737 03a1 75       		.byte	0x75
 1738 03a2 00       		.sleb128 0
 1739 03a3 12       		.uleb128 0x12
 1740 03a4 01       		.uleb128 0x1
 1741 03a5 51       		.byte	0x51
 1742 03a6 01       		.uleb128 0x1
 1743 03a7 37       		.byte	0x37
 1744 03a8 00       		.byte	0
 1745 03a9 11       		.uleb128 0x11
 1746 03aa C8000000 		.4byte	.LVL12
 1747 03ae 20090000 		.4byte	0x920
 1748 03b2 BD030000 		.4byte	0x3bd
 1749 03b6 12       		.uleb128 0x12
 1750 03b7 01       		.uleb128 0x1
 1751 03b8 50       		.byte	0x50
 1752 03b9 02       		.uleb128 0x2
 1753 03ba 75       		.byte	0x75
 1754 03bb 00       		.sleb128 0
 1755 03bc 00       		.byte	0
 1756 03bd 11       		.uleb128 0x11
 1757 03be D0000000 		.4byte	.LVL13
 1758 03c2 15090000 		.4byte	0x915
 1759 03c6 D5030000 		.4byte	0x3d5
 1760 03ca 12       		.uleb128 0x12
 1761 03cb 01       		.uleb128 0x1
 1762 03cc 50       		.byte	0x50
 1763 03cd 01       		.uleb128 0x1
 1764 03ce 3C       		.byte	0x3c
 1765 03cf 12       		.uleb128 0x12
 1766 03d0 01       		.uleb128 0x1
 1767 03d1 51       		.byte	0x51
 1768 03d2 01       		.uleb128 0x1
 1769 03d3 37       		.byte	0x37
 1770 03d4 00       		.byte	0
 1771 03d5 13       		.uleb128 0x13
 1772 03d6 D8000000 		.4byte	.LVL14
 1773 03da 20090000 		.4byte	0x920
 1774 03de 12       		.uleb128 0x12
 1775 03df 01       		.uleb128 0x1
 1776 03e0 50       		.byte	0x50
 1777 03e1 01       		.uleb128 0x1
 1778 03e2 3C       		.byte	0x3c
 1779 03e3 00       		.byte	0
 1780 03e4 00       		.byte	0
 1781 03e5 14       		.uleb128 0x14
 1782 03e6 0B050000 		.4byte	.LASF48
 1783 03ea 01       		.byte	0x1
 1784 03eb CC01     		.2byte	0x1cc
 1785 03ed 00000000 		.4byte	.LFB2
 1786 03f1 C0000000 		.4byte	.LFE2-.LFB2
 1787 03f5 01       		.uleb128 0x1
 1788 03f6 9C       		.byte	0x9c
 1789 03f7 39040000 		.4byte	0x439
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 77


 1790 03fb 15       		.uleb128 0x15
 1791 03fc A0000000 		.4byte	.LASF49
 1792 0400 01       		.byte	0x1
 1793 0401 CC01     		.2byte	0x1cc
 1794 0403 6B000000 		.4byte	0x6b
 1795 0407 13000000 		.4byte	.LLST1
 1796 040b 15       		.uleb128 0x15
 1797 040c 33050000 		.4byte	.LASF50
 1798 0410 01       		.byte	0x1
 1799 0411 CC01     		.2byte	0x1cc
 1800 0413 6B000000 		.4byte	0x6b
 1801 0417 34000000 		.4byte	.LLST2
 1802 041b 16       		.uleb128 0x16
 1803 041c 6900     		.ascii	"i\000"
 1804 041e 01       		.byte	0x1
 1805 041f D301     		.2byte	0x1d3
 1806 0421 6B000000 		.4byte	0x6b
 1807 0425 55000000 		.4byte	.LLST3
 1808 0429 13       		.uleb128 0x13
 1809 042a 84000000 		.4byte	.LVL23
 1810 042e 2B090000 		.4byte	0x92b
 1811 0432 12       		.uleb128 0x12
 1812 0433 01       		.uleb128 0x1
 1813 0434 50       		.byte	0x50
 1814 0435 01       		.uleb128 0x1
 1815 0436 31       		.byte	0x31
 1816 0437 00       		.byte	0
 1817 0438 00       		.byte	0
 1818 0439 0E       		.uleb128 0xe
 1819 043a 4D020000 		.4byte	.LASF52
 1820 043e 01       		.byte	0x1
 1821 043f BA       		.byte	0xba
 1822 0440 00000000 		.4byte	.LFB0
 1823 0444 24000000 		.4byte	.LFE0-.LFB0
 1824 0448 01       		.uleb128 0x1
 1825 0449 9C       		.byte	0x9c
 1826 044a 8C040000 		.4byte	0x48c
 1827 044e 17       		.uleb128 0x17
 1828 044f A0000000 		.4byte	.LASF49
 1829 0453 01       		.byte	0x1
 1830 0454 BA       		.byte	0xba
 1831 0455 6B000000 		.4byte	0x6b
 1832 0459 7F000000 		.4byte	.LLST4
 1833 045d 17       		.uleb128 0x17
 1834 045e 33050000 		.4byte	.LASF50
 1835 0462 01       		.byte	0x1
 1836 0463 BA       		.byte	0xba
 1837 0464 6B000000 		.4byte	0x6b
 1838 0468 A0000000 		.4byte	.LLST5
 1839 046c 10       		.uleb128 0x10
 1840 046d 10000000 		.4byte	.LVL25
 1841 0471 AA020000 		.4byte	0x2aa
 1842 0475 13       		.uleb128 0x13
 1843 0476 1E000000 		.4byte	.LVL26
 1844 047a E5030000 		.4byte	0x3e5
 1845 047e 12       		.uleb128 0x12
 1846 047f 01       		.uleb128 0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 78


 1847 0480 50       		.byte	0x50
 1848 0481 02       		.uleb128 0x2
 1849 0482 74       		.byte	0x74
 1850 0483 00       		.sleb128 0
 1851 0484 12       		.uleb128 0x12
 1852 0485 01       		.uleb128 0x1
 1853 0486 51       		.byte	0x51
 1854 0487 02       		.uleb128 0x2
 1855 0488 75       		.byte	0x75
 1856 0489 00       		.sleb128 0
 1857 048a 00       		.byte	0
 1858 048b 00       		.byte	0
 1859 048c 14       		.uleb128 0x14
 1860 048d 77060000 		.4byte	.LASF53
 1861 0491 01       		.byte	0x1
 1862 0492 9F02     		.2byte	0x29f
 1863 0494 00000000 		.4byte	.LFB3
 1864 0498 64000000 		.4byte	.LFE3-.LFB3
 1865 049c 01       		.uleb128 0x1
 1866 049d 9C       		.byte	0x9c
 1867 049e B1040000 		.4byte	0x4b1
 1868 04a2 16       		.uleb128 0x16
 1869 04a3 6900     		.ascii	"i\000"
 1870 04a5 01       		.byte	0x1
 1871 04a6 A502     		.2byte	0x2a5
 1872 04a8 6B000000 		.4byte	0x6b
 1873 04ac C1000000 		.4byte	.LLST6
 1874 04b0 00       		.byte	0
 1875 04b1 14       		.uleb128 0x14
 1876 04b2 E2010000 		.4byte	.LASF54
 1877 04b6 01       		.byte	0x1
 1878 04b7 D902     		.2byte	0x2d9
 1879 04b9 00000000 		.4byte	.LFB4
 1880 04bd AC000000 		.4byte	.LFE4-.LFB4
 1881 04c1 01       		.uleb128 0x1
 1882 04c2 9C       		.byte	0x9c
 1883 04c3 F3040000 		.4byte	0x4f3
 1884 04c7 18       		.uleb128 0x18
 1885 04c8 11060000 		.4byte	.LASF51
 1886 04cc 01       		.byte	0x1
 1887 04cd DB02     		.2byte	0x2db
 1888 04cf 6B000000 		.4byte	0x6b
 1889 04d3 EB000000 		.4byte	.LLST7
 1890 04d7 10       		.uleb128 0x10
 1891 04d8 06000000 		.4byte	.LVL32
 1892 04dc F4080000 		.4byte	0x8f4
 1893 04e0 10       		.uleb128 0x10
 1894 04e1 48000000 		.4byte	.LVL33
 1895 04e5 0A090000 		.4byte	0x90a
 1896 04e9 10       		.uleb128 0x10
 1897 04ea 5E000000 		.4byte	.LVL34
 1898 04ee 36090000 		.4byte	0x936
 1899 04f2 00       		.byte	0
 1900 04f3 19       		.uleb128 0x19
 1901 04f4 2E000000 		.4byte	.LASF56
 1902 04f8 01       		.byte	0x1
 1903 04f9 5103     		.2byte	0x351
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 79


 1904 04fb 6B000000 		.4byte	0x6b
 1905 04ff 00000000 		.4byte	.LFB5
 1906 0503 20000000 		.4byte	.LFE5-.LFB5
 1907 0507 01       		.uleb128 0x1
 1908 0508 9C       		.byte	0x9c
 1909 0509 1E050000 		.4byte	0x51e
 1910 050d 18       		.uleb128 0x18
 1911 050e E0020000 		.4byte	.LASF55
 1912 0512 01       		.byte	0x1
 1913 0513 5303     		.2byte	0x353
 1914 0515 6B000000 		.4byte	0x6b
 1915 0519 FE000000 		.4byte	.LLST8
 1916 051d 00       		.byte	0
 1917 051e 1A       		.uleb128 0x1a
 1918 051f F7020000 		.4byte	.LASF77
 1919 0523 01       		.byte	0x1
 1920 0524 6803     		.2byte	0x368
 1921 0526 6B000000 		.4byte	0x6b
 1922 052a 00000000 		.4byte	.LFB6
 1923 052e 0C000000 		.4byte	.LFE6-.LFB6
 1924 0532 01       		.uleb128 0x1
 1925 0533 9C       		.byte	0x9c
 1926 0534 19       		.uleb128 0x19
 1927 0535 3F030000 		.4byte	.LASF57
 1928 0539 01       		.byte	0x1
 1929 053a 8203     		.2byte	0x382
 1930 053c 6B000000 		.4byte	0x6b
 1931 0540 00000000 		.4byte	.LFB7
 1932 0544 20000000 		.4byte	.LFE7-.LFB7
 1933 0548 01       		.uleb128 0x1
 1934 0549 9C       		.byte	0x9c
 1935 054a 5F050000 		.4byte	0x55f
 1936 054e 16       		.uleb128 0x16
 1937 054f 72657300 		.ascii	"res\000"
 1938 0553 01       		.byte	0x1
 1939 0554 8403     		.2byte	0x384
 1940 0556 6B000000 		.4byte	0x6b
 1941 055a 11010000 		.4byte	.LLST9
 1942 055e 00       		.byte	0
 1943 055f 19       		.uleb128 0x19
 1944 0560 5B060000 		.4byte	.LASF58
 1945 0564 01       		.byte	0x1
 1946 0565 9F03     		.2byte	0x39f
 1947 0567 6B000000 		.4byte	0x6b
 1948 056b 00000000 		.4byte	.LFB8
 1949 056f 0C000000 		.4byte	.LFE8-.LFB8
 1950 0573 01       		.uleb128 0x1
 1951 0574 9C       		.byte	0x9c
 1952 0575 8A050000 		.4byte	0x58a
 1953 0579 15       		.uleb128 0x15
 1954 057a A1050000 		.4byte	.LASF59
 1955 057e 01       		.byte	0x1
 1956 057f 9F03     		.2byte	0x39f
 1957 0581 6B000000 		.4byte	0x6b
 1958 0585 47010000 		.4byte	.LLST10
 1959 0589 00       		.byte	0
 1960 058a 19       		.uleb128 0x19
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 80


 1961 058b 19030000 		.4byte	.LASF60
 1962 058f 01       		.byte	0x1
 1963 0590 BF03     		.2byte	0x3bf
 1964 0592 6B000000 		.4byte	0x6b
 1965 0596 00000000 		.4byte	.LFB9
 1966 059a 14000000 		.4byte	.LFE9-.LFB9
 1967 059e 01       		.uleb128 0x1
 1968 059f 9C       		.byte	0x9c
 1969 05a0 B5050000 		.4byte	0x5b5
 1970 05a4 15       		.uleb128 0x15
 1971 05a5 97000000 		.4byte	.LASF61
 1972 05a9 01       		.byte	0x1
 1973 05aa BF03     		.2byte	0x3bf
 1974 05ac 6B000000 		.4byte	0x6b
 1975 05b0 68010000 		.4byte	.LLST11
 1976 05b4 00       		.byte	0
 1977 05b5 19       		.uleb128 0x19
 1978 05b6 DE030000 		.4byte	.LASF62
 1979 05ba 01       		.byte	0x1
 1980 05bb D603     		.2byte	0x3d6
 1981 05bd 77000000 		.4byte	0x77
 1982 05c1 00000000 		.4byte	.LFB10
 1983 05c5 28000000 		.4byte	.LFE10-.LFB10
 1984 05c9 01       		.uleb128 0x1
 1985 05ca 9C       		.byte	0x9c
 1986 05cb F0050000 		.4byte	0x5f0
 1987 05cf 15       		.uleb128 0x15
 1988 05d0 97000000 		.4byte	.LASF61
 1989 05d4 01       		.byte	0x1
 1990 05d5 D603     		.2byte	0x3d6
 1991 05d7 6B000000 		.4byte	0x6b
 1992 05db 89010000 		.4byte	.LLST12
 1993 05df 18       		.uleb128 0x18
 1994 05e0 C1000000 		.4byte	.LASF63
 1995 05e4 01       		.byte	0x1
 1996 05e5 D803     		.2byte	0x3d8
 1997 05e7 77000000 		.4byte	0x77
 1998 05eb C3010000 		.4byte	.LLST13
 1999 05ef 00       		.byte	0
 2000 05f0 14       		.uleb128 0x14
 2001 05f1 07000000 		.4byte	.LASF64
 2002 05f5 01       		.byte	0x1
 2003 05f6 3E05     		.2byte	0x53e
 2004 05f8 00000000 		.4byte	.LFB11
 2005 05fc 94000000 		.4byte	.LFE11-.LFB11
 2006 0600 01       		.uleb128 0x1
 2007 0601 9C       		.byte	0x9c
 2008 0602 49060000 		.4byte	0x649
 2009 0606 15       		.uleb128 0x15
 2010 0607 97000000 		.4byte	.LASF61
 2011 060b 01       		.byte	0x1
 2012 060c 3E05     		.2byte	0x53e
 2013 060e 6B000000 		.4byte	0x6b
 2014 0612 11020000 		.4byte	.LLST14
 2015 0616 1B       		.uleb128 0x1b
 2016 0617 4E010000 		.4byte	.LASF65
 2017 061b 01       		.byte	0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 81


 2018 061c 3E05     		.2byte	0x53e
 2019 061e 49060000 		.4byte	0x649
 2020 0622 01       		.uleb128 0x1
 2021 0623 51       		.byte	0x51
 2022 0624 15       		.uleb128 0x15
 2023 0625 0A060000 		.4byte	.LASF66
 2024 0629 01       		.byte	0x1
 2025 062a 3E05     		.2byte	0x53e
 2026 062c 77000000 		.4byte	0x77
 2027 0630 32020000 		.4byte	.LLST15
 2028 0634 1C       		.uleb128 0x1c
 2029 0635 00000000 		.4byte	.Ldebug_ranges0+0
 2030 0639 16       		.uleb128 0x16
 2031 063a 6900     		.ascii	"i\000"
 2032 063c 01       		.byte	0x1
 2033 063d 5305     		.2byte	0x553
 2034 063f 77000000 		.4byte	0x77
 2035 0643 5E020000 		.4byte	.LLST16
 2036 0647 00       		.byte	0
 2037 0648 00       		.byte	0
 2038 0649 1D       		.uleb128 0x1d
 2039 064a 04       		.byte	0x4
 2040 064b 4F060000 		.4byte	0x64f
 2041 064f 1E       		.uleb128 0x1e
 2042 0650 6B000000 		.4byte	0x6b
 2043 0654 14       		.uleb128 0x14
 2044 0655 AB020000 		.4byte	.LASF67
 2045 0659 01       		.byte	0x1
 2046 065a E408     		.2byte	0x8e4
 2047 065c 00000000 		.4byte	.LFB13
 2048 0660 2C000000 		.4byte	.LFE13-.LFB13
 2049 0664 01       		.uleb128 0x1
 2050 0665 9C       		.byte	0x9c
 2051 0666 7B060000 		.4byte	0x67b
 2052 066a 15       		.uleb128 0x15
 2053 066b 97000000 		.4byte	.LASF61
 2054 066f 01       		.byte	0x1
 2055 0670 E408     		.2byte	0x8e4
 2056 0672 6B000000 		.4byte	0x6b
 2057 0676 87020000 		.4byte	.LLST17
 2058 067a 00       		.byte	0
 2059 067b 19       		.uleb128 0x19
 2060 067c E3000000 		.4byte	.LASF68
 2061 0680 01       		.byte	0x1
 2062 0681 7506     		.2byte	0x675
 2063 0683 77000000 		.4byte	0x77
 2064 0687 00000000 		.4byte	.LFB12
 2065 068b 50000000 		.4byte	.LFE12-.LFB12
 2066 068f 01       		.uleb128 0x1
 2067 0690 9C       		.byte	0x9c
 2068 0691 1A070000 		.4byte	0x71a
 2069 0695 15       		.uleb128 0x15
 2070 0696 97000000 		.4byte	.LASF61
 2071 069a 01       		.byte	0x1
 2072 069b 7506     		.2byte	0x675
 2073 069d 6B000000 		.4byte	0x6b
 2074 06a1 A8020000 		.4byte	.LLST18
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 82


 2075 06a5 15       		.uleb128 0x15
 2076 06a6 4E010000 		.4byte	.LASF65
 2077 06aa 01       		.byte	0x1
 2078 06ab 7506     		.2byte	0x675
 2079 06ad 1A070000 		.4byte	0x71a
 2080 06b1 E2020000 		.4byte	.LLST19
 2081 06b5 15       		.uleb128 0x15
 2082 06b6 0A060000 		.4byte	.LASF66
 2083 06ba 01       		.byte	0x1
 2084 06bb 7506     		.2byte	0x675
 2085 06bd 77000000 		.4byte	0x77
 2086 06c1 19030000 		.4byte	.LLST20
 2087 06c5 1F       		.uleb128 0x1f
 2088 06c6 20000000 		.4byte	.LBB4
 2089 06ca 14000000 		.4byte	.LBE4-.LBB4
 2090 06ce E1060000 		.4byte	0x6e1
 2091 06d2 16       		.uleb128 0x16
 2092 06d3 6900     		.ascii	"i\000"
 2093 06d5 01       		.byte	0x1
 2094 06d6 8206     		.2byte	0x682
 2095 06d8 77000000 		.4byte	0x77
 2096 06dc 5B030000 		.4byte	.LLST21
 2097 06e0 00       		.byte	0
 2098 06e1 11       		.uleb128 0x11
 2099 06e2 14000000 		.4byte	.LVL67
 2100 06e6 B5050000 		.4byte	0x5b5
 2101 06ea F5060000 		.4byte	0x6f5
 2102 06ee 12       		.uleb128 0x12
 2103 06ef 01       		.uleb128 0x1
 2104 06f0 50       		.byte	0x50
 2105 06f1 02       		.uleb128 0x2
 2106 06f2 75       		.byte	0x75
 2107 06f3 00       		.sleb128 0
 2108 06f4 00       		.byte	0
 2109 06f5 11       		.uleb128 0x11
 2110 06f6 1E000000 		.4byte	.LVL68
 2111 06fa B5050000 		.4byte	0x5b5
 2112 06fe 09070000 		.4byte	0x709
 2113 0702 12       		.uleb128 0x12
 2114 0703 01       		.uleb128 0x1
 2115 0704 50       		.byte	0x50
 2116 0705 02       		.uleb128 0x2
 2117 0706 75       		.byte	0x75
 2118 0707 00       		.sleb128 0
 2119 0708 00       		.byte	0
 2120 0709 13       		.uleb128 0x13
 2121 070a 3A000000 		.4byte	.LVL73
 2122 070e 54060000 		.4byte	0x654
 2123 0712 12       		.uleb128 0x12
 2124 0713 01       		.uleb128 0x1
 2125 0714 50       		.byte	0x50
 2126 0715 02       		.uleb128 0x2
 2127 0716 75       		.byte	0x75
 2128 0717 00       		.sleb128 0
 2129 0718 00       		.byte	0
 2130 0719 00       		.byte	0
 2131 071a 1D       		.uleb128 0x1d
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 83


 2132 071b 04       		.byte	0x4
 2133 071c 6B000000 		.4byte	0x6b
 2134 0720 14       		.uleb128 0x14
 2135 0721 82010000 		.4byte	.LASF69
 2136 0725 01       		.byte	0x1
 2137 0726 FC08     		.2byte	0x8fc
 2138 0728 00000000 		.4byte	.LFB14
 2139 072c 18000000 		.4byte	.LFE14-.LFB14
 2140 0730 01       		.uleb128 0x1
 2141 0731 9C       		.byte	0x9c
 2142 0732 47070000 		.4byte	0x747
 2143 0736 15       		.uleb128 0x15
 2144 0737 97000000 		.4byte	.LASF61
 2145 073b 01       		.byte	0x1
 2146 073c FC08     		.2byte	0x8fc
 2147 073e 6B000000 		.4byte	0x6b
 2148 0742 85030000 		.4byte	.LLST22
 2149 0746 00       		.byte	0
 2150 0747 14       		.uleb128 0x14
 2151 0748 3E040000 		.4byte	.LASF70
 2152 074c 01       		.byte	0x1
 2153 074d 1A09     		.2byte	0x91a
 2154 074f 00000000 		.4byte	.LFB15
 2155 0753 0C000000 		.4byte	.LFE15-.LFB15
 2156 0757 01       		.uleb128 0x1
 2157 0758 9C       		.byte	0x9c
 2158 0759 6C070000 		.4byte	0x76c
 2159 075d 1B       		.uleb128 0x1b
 2160 075e E7040000 		.4byte	.LASF71
 2161 0762 01       		.byte	0x1
 2162 0763 1A09     		.2byte	0x91a
 2163 0765 6B000000 		.4byte	0x6b
 2164 0769 01       		.uleb128 0x1
 2165 076a 50       		.byte	0x50
 2166 076b 00       		.byte	0
 2167 076c 19       		.uleb128 0x19
 2168 076d 18000000 		.4byte	.LASF72
 2169 0771 01       		.byte	0x1
 2170 0772 3309     		.2byte	0x933
 2171 0774 6B000000 		.4byte	0x6b
 2172 0778 00000000 		.4byte	.LFB16
 2173 077c 20000000 		.4byte	.LFE16-.LFB16
 2174 0780 01       		.uleb128 0x1
 2175 0781 9C       		.byte	0x9c
 2176 0782 A6070000 		.4byte	0x7a6
 2177 0786 15       		.uleb128 0x15
 2178 0787 97000000 		.4byte	.LASF61
 2179 078b 01       		.byte	0x1
 2180 078c 3309     		.2byte	0x933
 2181 078e 6B000000 		.4byte	0x6b
 2182 0792 A6030000 		.4byte	.LLST23
 2183 0796 16       		.uleb128 0x16
 2184 0797 637200   		.ascii	"cr\000"
 2185 079a 01       		.byte	0x1
 2186 079b 3509     		.2byte	0x935
 2187 079d 6B000000 		.4byte	0x6b
 2188 07a1 E0030000 		.4byte	.LLST24
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 84


 2189 07a5 00       		.byte	0
 2190 07a6 14       		.uleb128 0x14
 2191 07a7 94020000 		.4byte	.LASF73
 2192 07ab 01       		.byte	0x1
 2193 07ac 5C09     		.2byte	0x95c
 2194 07ae 00000000 		.4byte	.LFB17
 2195 07b2 20000000 		.4byte	.LFE17-.LFB17
 2196 07b6 01       		.uleb128 0x1
 2197 07b7 9C       		.byte	0x9c
 2198 07b8 CB070000 		.4byte	0x7cb
 2199 07bc 1B       		.uleb128 0x1b
 2200 07bd 21010000 		.4byte	.LASF74
 2201 07c1 01       		.byte	0x1
 2202 07c2 5C09     		.2byte	0x95c
 2203 07c4 6B000000 		.4byte	0x6b
 2204 07c8 01       		.uleb128 0x1
 2205 07c9 50       		.byte	0x50
 2206 07ca 00       		.byte	0
 2207 07cb 19       		.uleb128 0x19
 2208 07cc E1050000 		.4byte	.LASF75
 2209 07d0 01       		.byte	0x1
 2210 07d1 9509     		.2byte	0x995
 2211 07d3 6B000000 		.4byte	0x6b
 2212 07d7 00000000 		.4byte	.LFB18
 2213 07db 18000000 		.4byte	.LFE18-.LFB18
 2214 07df 01       		.uleb128 0x1
 2215 07e0 9C       		.byte	0x9c
 2216 07e1 F6070000 		.4byte	0x7f6
 2217 07e5 18       		.uleb128 0x18
 2218 07e6 09010000 		.4byte	.LASF76
 2219 07ea 01       		.byte	0x1
 2220 07eb 9709     		.2byte	0x997
 2221 07ed 6B000000 		.4byte	0x6b
 2222 07f1 16040000 		.4byte	.LLST25
 2223 07f5 00       		.byte	0
 2224 07f6 1A       		.uleb128 0x1a
 2225 07f7 34020000 		.4byte	.LASF78
 2226 07fb 01       		.byte	0x1
 2227 07fc AD09     		.2byte	0x9ad
 2228 07fe 6B000000 		.4byte	0x6b
 2229 0802 00000000 		.4byte	.LFB19
 2230 0806 10000000 		.4byte	.LFE19-.LFB19
 2231 080a 01       		.uleb128 0x1
 2232 080b 9C       		.byte	0x9c
 2233 080c 20       		.uleb128 0x20
 2234 080d 27060000 		.4byte	.LASF79
 2235 0811 01       		.byte	0x1
 2236 0812 BB09     		.2byte	0x9bb
 2237 0814 00000000 		.4byte	.LFB20
 2238 0818 02000000 		.4byte	.LFE20-.LFB20
 2239 081c 01       		.uleb128 0x1
 2240 081d 9C       		.byte	0x9c
 2241 081e 20       		.uleb128 0x20
 2242 081f 6B000000 		.4byte	.LASF80
 2243 0823 01       		.byte	0x1
 2244 0824 D109     		.2byte	0x9d1
 2245 0826 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 85


 2246 082a 02000000 		.4byte	.LFE21-.LFB21
 2247 082e 01       		.uleb128 0x1
 2248 082f 9C       		.byte	0x9c
 2249 0830 21       		.uleb128 0x21
 2250 0831 44000000 		.4byte	.LASF81
 2251 0835 01       		.byte	0x1
 2252 0836 28       		.byte	0x28
 2253 0837 6B000000 		.4byte	0x6b
 2254 083b 05       		.uleb128 0x5
 2255 083c 03       		.byte	0x3
 2256 083d 00000000 		.4byte	USBFS_1_initVar
 2257 0841 22       		.uleb128 0x22
 2258 0842 2F040000 		.4byte	.LASF82
 2259 0846 03       		.byte	0x3
 2260 0847 D702     		.2byte	0x2d7
 2261 0849 B0000000 		.4byte	0xb0
 2262 084d 22       		.uleb128 0x22
 2263 084e B1050000 		.4byte	.LASF83
 2264 0852 03       		.byte	0x3
 2265 0853 D802     		.2byte	0x2d8
 2266 0855 B0000000 		.4byte	0xb0
 2267 0859 22       		.uleb128 0x22
 2268 085a A4010000 		.4byte	.LASF84
 2269 085e 03       		.byte	0x3
 2270 085f D902     		.2byte	0x2d9
 2271 0861 B0000000 		.4byte	0xb0
 2272 0865 22       		.uleb128 0x22
 2273 0866 EE040000 		.4byte	.LASF85
 2274 086a 03       		.byte	0x3
 2275 086b DA02     		.2byte	0x2da
 2276 086d B0000000 		.4byte	0xb0
 2277 0871 22       		.uleb128 0x22
 2278 0872 2D010000 		.4byte	.LASF86
 2279 0876 03       		.byte	0x3
 2280 0877 DB02     		.2byte	0x2db
 2281 0879 B0000000 		.4byte	0xb0
 2282 087d 0A       		.uleb128 0xa
 2283 087e B0000000 		.4byte	0xb0
 2284 0882 8D080000 		.4byte	0x88d
 2285 0886 0B       		.uleb128 0xb
 2286 0887 CD000000 		.4byte	0xcd
 2287 088b 00       		.byte	0
 2288 088c 00       		.byte	0
 2289 088d 22       		.uleb128 0x22
 2290 088e CF000000 		.4byte	.LASF87
 2291 0892 03       		.byte	0x3
 2292 0893 E402     		.2byte	0x2e4
 2293 0895 99080000 		.4byte	0x899
 2294 0899 05       		.uleb128 0x5
 2295 089a 7D080000 		.4byte	0x87d
 2296 089e 23       		.uleb128 0x23
 2297 089f 61010000 		.4byte	.LASF88
 2298 08a3 04       		.byte	0x4
 2299 08a4 7C       		.byte	0x7c
 2300 08a5 B0000000 		.4byte	0xb0
 2301 08a9 23       		.uleb128 0x23
 2302 08aa B7030000 		.4byte	.LASF89
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 86


 2303 08ae 04       		.byte	0x4
 2304 08af 7D       		.byte	0x7d
 2305 08b0 B4080000 		.4byte	0x8b4
 2306 08b4 05       		.uleb128 0x5
 2307 08b5 7D080000 		.4byte	0x87d
 2308 08b9 23       		.uleb128 0x23
 2309 08ba F4050000 		.4byte	.LASF90
 2310 08be 04       		.byte	0x4
 2311 08bf 7F       		.byte	0x7f
 2312 08c0 B0000000 		.4byte	0xb0
 2313 08c4 0A       		.uleb128 0xa
 2314 08c5 D4080000 		.4byte	0x8d4
 2315 08c9 D4080000 		.4byte	0x8d4
 2316 08cd 0B       		.uleb128 0xb
 2317 08ce CD000000 		.4byte	0xcd
 2318 08d2 08       		.byte	0x8
 2319 08d3 00       		.byte	0
 2320 08d4 05       		.uleb128 0x5
 2321 08d5 49010000 		.4byte	0x149
 2322 08d9 23       		.uleb128 0x23
 2323 08da 8C000000 		.4byte	.LASF91
 2324 08de 04       		.byte	0x4
 2325 08df 83       		.byte	0x83
 2326 08e0 E4080000 		.4byte	0x8e4
 2327 08e4 05       		.uleb128 0x5
 2328 08e5 C4080000 		.4byte	0x8c4
 2329 08e9 23       		.uleb128 0x23
 2330 08ea 44060000 		.4byte	.LASF92
 2331 08ee 04       		.byte	0x4
 2332 08ef A5       		.byte	0xa5
 2333 08f0 B0000000 		.4byte	0xb0
 2334 08f4 24       		.uleb128 0x24
 2335 08f5 EF010000 		.4byte	.LASF93
 2336 08f9 EF010000 		.4byte	.LASF93
 2337 08fd 05       		.byte	0x5
 2338 08fe 7D       		.byte	0x7d
 2339 08ff 24       		.uleb128 0x24
 2340 0900 10010000 		.4byte	.LASF94
 2341 0904 10010000 		.4byte	.LASF94
 2342 0908 05       		.byte	0x5
 2343 0909 77       		.byte	0x77
 2344 090a 24       		.uleb128 0x24
 2345 090b 96030000 		.4byte	.LASF95
 2346 090f 96030000 		.4byte	.LASF95
 2347 0913 05       		.byte	0x5
 2348 0914 7E       		.byte	0x7e
 2349 0915 24       		.uleb128 0x24
 2350 0916 BF020000 		.4byte	.LASF96
 2351 091a BF020000 		.4byte	.LASF96
 2352 091e 05       		.byte	0x5
 2353 091f 8B       		.byte	0x8b
 2354 0920 24       		.uleb128 0x24
 2355 0921 6E020000 		.4byte	.LASF97
 2356 0925 6E020000 		.4byte	.LASF97
 2357 0929 05       		.byte	0x5
 2358 092a 88       		.byte	0x88
 2359 092b 24       		.uleb128 0x24
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 87


 2360 092c D0030000 		.4byte	.LASF98
 2361 0930 D0030000 		.4byte	.LASF98
 2362 0934 05       		.byte	0x5
 2363 0935 79       		.byte	0x79
 2364 0936 24       		.uleb128 0x24
 2365 0937 C7050000 		.4byte	.LASF99
 2366 093b C7050000 		.4byte	.LASF99
 2367 093f 06       		.byte	0x6
 2368 0940 2B       		.byte	0x2b
 2369 0941 00       		.byte	0
 2370              		.section	.debug_abbrev,"",%progbits
 2371              	.Ldebug_abbrev0:
 2372 0000 01       		.uleb128 0x1
 2373 0001 11       		.uleb128 0x11
 2374 0002 01       		.byte	0x1
 2375 0003 25       		.uleb128 0x25
 2376 0004 0E       		.uleb128 0xe
 2377 0005 13       		.uleb128 0x13
 2378 0006 0B       		.uleb128 0xb
 2379 0007 03       		.uleb128 0x3
 2380 0008 0E       		.uleb128 0xe
 2381 0009 1B       		.uleb128 0x1b
 2382 000a 0E       		.uleb128 0xe
 2383 000b 55       		.uleb128 0x55
 2384 000c 17       		.uleb128 0x17
 2385 000d 11       		.uleb128 0x11
 2386 000e 01       		.uleb128 0x1
 2387 000f 10       		.uleb128 0x10
 2388 0010 17       		.uleb128 0x17
 2389 0011 00       		.byte	0
 2390 0012 00       		.byte	0
 2391 0013 02       		.uleb128 0x2
 2392 0014 24       		.uleb128 0x24
 2393 0015 00       		.byte	0
 2394 0016 0B       		.uleb128 0xb
 2395 0017 0B       		.uleb128 0xb
 2396 0018 3E       		.uleb128 0x3e
 2397 0019 0B       		.uleb128 0xb
 2398 001a 03       		.uleb128 0x3
 2399 001b 0E       		.uleb128 0xe
 2400 001c 00       		.byte	0
 2401 001d 00       		.byte	0
 2402 001e 03       		.uleb128 0x3
 2403 001f 24       		.uleb128 0x24
 2404 0020 00       		.byte	0
 2405 0021 0B       		.uleb128 0xb
 2406 0022 0B       		.uleb128 0xb
 2407 0023 3E       		.uleb128 0x3e
 2408 0024 0B       		.uleb128 0xb
 2409 0025 03       		.uleb128 0x3
 2410 0026 08       		.uleb128 0x8
 2411 0027 00       		.byte	0
 2412 0028 00       		.byte	0
 2413 0029 04       		.uleb128 0x4
 2414 002a 16       		.uleb128 0x16
 2415 002b 00       		.byte	0
 2416 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 88


 2417 002d 0E       		.uleb128 0xe
 2418 002e 3A       		.uleb128 0x3a
 2419 002f 0B       		.uleb128 0xb
 2420 0030 3B       		.uleb128 0x3b
 2421 0031 05       		.uleb128 0x5
 2422 0032 49       		.uleb128 0x49
 2423 0033 13       		.uleb128 0x13
 2424 0034 00       		.byte	0
 2425 0035 00       		.byte	0
 2426 0036 05       		.uleb128 0x5
 2427 0037 35       		.uleb128 0x35
 2428 0038 00       		.byte	0
 2429 0039 49       		.uleb128 0x49
 2430 003a 13       		.uleb128 0x13
 2431 003b 00       		.byte	0
 2432 003c 00       		.byte	0
 2433 003d 06       		.uleb128 0x6
 2434 003e 13       		.uleb128 0x13
 2435 003f 01       		.byte	0x1
 2436 0040 0B       		.uleb128 0xb
 2437 0041 0B       		.uleb128 0xb
 2438 0042 3A       		.uleb128 0x3a
 2439 0043 0B       		.uleb128 0xb
 2440 0044 3B       		.uleb128 0x3b
 2441 0045 0B       		.uleb128 0xb
 2442 0046 01       		.uleb128 0x1
 2443 0047 13       		.uleb128 0x13
 2444 0048 00       		.byte	0
 2445 0049 00       		.byte	0
 2446 004a 07       		.uleb128 0x7
 2447 004b 0D       		.uleb128 0xd
 2448 004c 00       		.byte	0
 2449 004d 03       		.uleb128 0x3
 2450 004e 0E       		.uleb128 0xe
 2451 004f 3A       		.uleb128 0x3a
 2452 0050 0B       		.uleb128 0xb
 2453 0051 3B       		.uleb128 0x3b
 2454 0052 0B       		.uleb128 0xb
 2455 0053 49       		.uleb128 0x49
 2456 0054 13       		.uleb128 0x13
 2457 0055 38       		.uleb128 0x38
 2458 0056 0B       		.uleb128 0xb
 2459 0057 00       		.byte	0
 2460 0058 00       		.byte	0
 2461 0059 08       		.uleb128 0x8
 2462 005a 16       		.uleb128 0x16
 2463 005b 00       		.byte	0
 2464 005c 03       		.uleb128 0x3
 2465 005d 0E       		.uleb128 0xe
 2466 005e 3A       		.uleb128 0x3a
 2467 005f 0B       		.uleb128 0xb
 2468 0060 3B       		.uleb128 0x3b
 2469 0061 0B       		.uleb128 0xb
 2470 0062 49       		.uleb128 0x49
 2471 0063 13       		.uleb128 0x13
 2472 0064 00       		.byte	0
 2473 0065 00       		.byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 89


 2474 0066 09       		.uleb128 0x9
 2475 0067 0D       		.uleb128 0xd
 2476 0068 00       		.byte	0
 2477 0069 03       		.uleb128 0x3
 2478 006a 08       		.uleb128 0x8
 2479 006b 3A       		.uleb128 0x3a
 2480 006c 0B       		.uleb128 0xb
 2481 006d 3B       		.uleb128 0x3b
 2482 006e 0B       		.uleb128 0xb
 2483 006f 49       		.uleb128 0x49
 2484 0070 13       		.uleb128 0x13
 2485 0071 38       		.uleb128 0x38
 2486 0072 0B       		.uleb128 0xb
 2487 0073 00       		.byte	0
 2488 0074 00       		.byte	0
 2489 0075 0A       		.uleb128 0xa
 2490 0076 01       		.uleb128 0x1
 2491 0077 01       		.byte	0x1
 2492 0078 49       		.uleb128 0x49
 2493 0079 13       		.uleb128 0x13
 2494 007a 01       		.uleb128 0x1
 2495 007b 13       		.uleb128 0x13
 2496 007c 00       		.byte	0
 2497 007d 00       		.byte	0
 2498 007e 0B       		.uleb128 0xb
 2499 007f 21       		.uleb128 0x21
 2500 0080 00       		.byte	0
 2501 0081 49       		.uleb128 0x49
 2502 0082 13       		.uleb128 0x13
 2503 0083 2F       		.uleb128 0x2f
 2504 0084 0B       		.uleb128 0xb
 2505 0085 00       		.byte	0
 2506 0086 00       		.byte	0
 2507 0087 0C       		.uleb128 0xc
 2508 0088 13       		.uleb128 0x13
 2509 0089 01       		.byte	0x1
 2510 008a 0B       		.uleb128 0xb
 2511 008b 0B       		.uleb128 0xb
 2512 008c 3A       		.uleb128 0x3a
 2513 008d 0B       		.uleb128 0xb
 2514 008e 3B       		.uleb128 0x3b
 2515 008f 05       		.uleb128 0x5
 2516 0090 01       		.uleb128 0x1
 2517 0091 13       		.uleb128 0x13
 2518 0092 00       		.byte	0
 2519 0093 00       		.byte	0
 2520 0094 0D       		.uleb128 0xd
 2521 0095 0D       		.uleb128 0xd
 2522 0096 00       		.byte	0
 2523 0097 03       		.uleb128 0x3
 2524 0098 0E       		.uleb128 0xe
 2525 0099 3A       		.uleb128 0x3a
 2526 009a 0B       		.uleb128 0xb
 2527 009b 3B       		.uleb128 0x3b
 2528 009c 05       		.uleb128 0x5
 2529 009d 49       		.uleb128 0x49
 2530 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 90


 2531 009f 38       		.uleb128 0x38
 2532 00a0 0B       		.uleb128 0xb
 2533 00a1 00       		.byte	0
 2534 00a2 00       		.byte	0
 2535 00a3 0E       		.uleb128 0xe
 2536 00a4 2E       		.uleb128 0x2e
 2537 00a5 01       		.byte	0x1
 2538 00a6 3F       		.uleb128 0x3f
 2539 00a7 19       		.uleb128 0x19
 2540 00a8 03       		.uleb128 0x3
 2541 00a9 0E       		.uleb128 0xe
 2542 00aa 3A       		.uleb128 0x3a
 2543 00ab 0B       		.uleb128 0xb
 2544 00ac 3B       		.uleb128 0x3b
 2545 00ad 0B       		.uleb128 0xb
 2546 00ae 27       		.uleb128 0x27
 2547 00af 19       		.uleb128 0x19
 2548 00b0 11       		.uleb128 0x11
 2549 00b1 01       		.uleb128 0x1
 2550 00b2 12       		.uleb128 0x12
 2551 00b3 06       		.uleb128 0x6
 2552 00b4 40       		.uleb128 0x40
 2553 00b5 18       		.uleb128 0x18
 2554 00b6 9742     		.uleb128 0x2117
 2555 00b8 19       		.uleb128 0x19
 2556 00b9 01       		.uleb128 0x1
 2557 00ba 13       		.uleb128 0x13
 2558 00bb 00       		.byte	0
 2559 00bc 00       		.byte	0
 2560 00bd 0F       		.uleb128 0xf
 2561 00be 34       		.uleb128 0x34
 2562 00bf 00       		.byte	0
 2563 00c0 03       		.uleb128 0x3
 2564 00c1 0E       		.uleb128 0xe
 2565 00c2 3A       		.uleb128 0x3a
 2566 00c3 0B       		.uleb128 0xb
 2567 00c4 3B       		.uleb128 0x3b
 2568 00c5 0B       		.uleb128 0xb
 2569 00c6 49       		.uleb128 0x49
 2570 00c7 13       		.uleb128 0x13
 2571 00c8 02       		.uleb128 0x2
 2572 00c9 17       		.uleb128 0x17
 2573 00ca 00       		.byte	0
 2574 00cb 00       		.byte	0
 2575 00cc 10       		.uleb128 0x10
 2576 00cd 898201   		.uleb128 0x4109
 2577 00d0 00       		.byte	0
 2578 00d1 11       		.uleb128 0x11
 2579 00d2 01       		.uleb128 0x1
 2580 00d3 31       		.uleb128 0x31
 2581 00d4 13       		.uleb128 0x13
 2582 00d5 00       		.byte	0
 2583 00d6 00       		.byte	0
 2584 00d7 11       		.uleb128 0x11
 2585 00d8 898201   		.uleb128 0x4109
 2586 00db 01       		.byte	0x1
 2587 00dc 11       		.uleb128 0x11
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 91


 2588 00dd 01       		.uleb128 0x1
 2589 00de 31       		.uleb128 0x31
 2590 00df 13       		.uleb128 0x13
 2591 00e0 01       		.uleb128 0x1
 2592 00e1 13       		.uleb128 0x13
 2593 00e2 00       		.byte	0
 2594 00e3 00       		.byte	0
 2595 00e4 12       		.uleb128 0x12
 2596 00e5 8A8201   		.uleb128 0x410a
 2597 00e8 00       		.byte	0
 2598 00e9 02       		.uleb128 0x2
 2599 00ea 18       		.uleb128 0x18
 2600 00eb 9142     		.uleb128 0x2111
 2601 00ed 18       		.uleb128 0x18
 2602 00ee 00       		.byte	0
 2603 00ef 00       		.byte	0
 2604 00f0 13       		.uleb128 0x13
 2605 00f1 898201   		.uleb128 0x4109
 2606 00f4 01       		.byte	0x1
 2607 00f5 11       		.uleb128 0x11
 2608 00f6 01       		.uleb128 0x1
 2609 00f7 31       		.uleb128 0x31
 2610 00f8 13       		.uleb128 0x13
 2611 00f9 00       		.byte	0
 2612 00fa 00       		.byte	0
 2613 00fb 14       		.uleb128 0x14
 2614 00fc 2E       		.uleb128 0x2e
 2615 00fd 01       		.byte	0x1
 2616 00fe 3F       		.uleb128 0x3f
 2617 00ff 19       		.uleb128 0x19
 2618 0100 03       		.uleb128 0x3
 2619 0101 0E       		.uleb128 0xe
 2620 0102 3A       		.uleb128 0x3a
 2621 0103 0B       		.uleb128 0xb
 2622 0104 3B       		.uleb128 0x3b
 2623 0105 05       		.uleb128 0x5
 2624 0106 27       		.uleb128 0x27
 2625 0107 19       		.uleb128 0x19
 2626 0108 11       		.uleb128 0x11
 2627 0109 01       		.uleb128 0x1
 2628 010a 12       		.uleb128 0x12
 2629 010b 06       		.uleb128 0x6
 2630 010c 40       		.uleb128 0x40
 2631 010d 18       		.uleb128 0x18
 2632 010e 9742     		.uleb128 0x2117
 2633 0110 19       		.uleb128 0x19
 2634 0111 01       		.uleb128 0x1
 2635 0112 13       		.uleb128 0x13
 2636 0113 00       		.byte	0
 2637 0114 00       		.byte	0
 2638 0115 15       		.uleb128 0x15
 2639 0116 05       		.uleb128 0x5
 2640 0117 00       		.byte	0
 2641 0118 03       		.uleb128 0x3
 2642 0119 0E       		.uleb128 0xe
 2643 011a 3A       		.uleb128 0x3a
 2644 011b 0B       		.uleb128 0xb
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 92


 2645 011c 3B       		.uleb128 0x3b
 2646 011d 05       		.uleb128 0x5
 2647 011e 49       		.uleb128 0x49
 2648 011f 13       		.uleb128 0x13
 2649 0120 02       		.uleb128 0x2
 2650 0121 17       		.uleb128 0x17
 2651 0122 00       		.byte	0
 2652 0123 00       		.byte	0
 2653 0124 16       		.uleb128 0x16
 2654 0125 34       		.uleb128 0x34
 2655 0126 00       		.byte	0
 2656 0127 03       		.uleb128 0x3
 2657 0128 08       		.uleb128 0x8
 2658 0129 3A       		.uleb128 0x3a
 2659 012a 0B       		.uleb128 0xb
 2660 012b 3B       		.uleb128 0x3b
 2661 012c 05       		.uleb128 0x5
 2662 012d 49       		.uleb128 0x49
 2663 012e 13       		.uleb128 0x13
 2664 012f 02       		.uleb128 0x2
 2665 0130 17       		.uleb128 0x17
 2666 0131 00       		.byte	0
 2667 0132 00       		.byte	0
 2668 0133 17       		.uleb128 0x17
 2669 0134 05       		.uleb128 0x5
 2670 0135 00       		.byte	0
 2671 0136 03       		.uleb128 0x3
 2672 0137 0E       		.uleb128 0xe
 2673 0138 3A       		.uleb128 0x3a
 2674 0139 0B       		.uleb128 0xb
 2675 013a 3B       		.uleb128 0x3b
 2676 013b 0B       		.uleb128 0xb
 2677 013c 49       		.uleb128 0x49
 2678 013d 13       		.uleb128 0x13
 2679 013e 02       		.uleb128 0x2
 2680 013f 17       		.uleb128 0x17
 2681 0140 00       		.byte	0
 2682 0141 00       		.byte	0
 2683 0142 18       		.uleb128 0x18
 2684 0143 34       		.uleb128 0x34
 2685 0144 00       		.byte	0
 2686 0145 03       		.uleb128 0x3
 2687 0146 0E       		.uleb128 0xe
 2688 0147 3A       		.uleb128 0x3a
 2689 0148 0B       		.uleb128 0xb
 2690 0149 3B       		.uleb128 0x3b
 2691 014a 05       		.uleb128 0x5
 2692 014b 49       		.uleb128 0x49
 2693 014c 13       		.uleb128 0x13
 2694 014d 02       		.uleb128 0x2
 2695 014e 17       		.uleb128 0x17
 2696 014f 00       		.byte	0
 2697 0150 00       		.byte	0
 2698 0151 19       		.uleb128 0x19
 2699 0152 2E       		.uleb128 0x2e
 2700 0153 01       		.byte	0x1
 2701 0154 3F       		.uleb128 0x3f
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 93


 2702 0155 19       		.uleb128 0x19
 2703 0156 03       		.uleb128 0x3
 2704 0157 0E       		.uleb128 0xe
 2705 0158 3A       		.uleb128 0x3a
 2706 0159 0B       		.uleb128 0xb
 2707 015a 3B       		.uleb128 0x3b
 2708 015b 05       		.uleb128 0x5
 2709 015c 27       		.uleb128 0x27
 2710 015d 19       		.uleb128 0x19
 2711 015e 49       		.uleb128 0x49
 2712 015f 13       		.uleb128 0x13
 2713 0160 11       		.uleb128 0x11
 2714 0161 01       		.uleb128 0x1
 2715 0162 12       		.uleb128 0x12
 2716 0163 06       		.uleb128 0x6
 2717 0164 40       		.uleb128 0x40
 2718 0165 18       		.uleb128 0x18
 2719 0166 9742     		.uleb128 0x2117
 2720 0168 19       		.uleb128 0x19
 2721 0169 01       		.uleb128 0x1
 2722 016a 13       		.uleb128 0x13
 2723 016b 00       		.byte	0
 2724 016c 00       		.byte	0
 2725 016d 1A       		.uleb128 0x1a
 2726 016e 2E       		.uleb128 0x2e
 2727 016f 00       		.byte	0
 2728 0170 3F       		.uleb128 0x3f
 2729 0171 19       		.uleb128 0x19
 2730 0172 03       		.uleb128 0x3
 2731 0173 0E       		.uleb128 0xe
 2732 0174 3A       		.uleb128 0x3a
 2733 0175 0B       		.uleb128 0xb
 2734 0176 3B       		.uleb128 0x3b
 2735 0177 05       		.uleb128 0x5
 2736 0178 27       		.uleb128 0x27
 2737 0179 19       		.uleb128 0x19
 2738 017a 49       		.uleb128 0x49
 2739 017b 13       		.uleb128 0x13
 2740 017c 11       		.uleb128 0x11
 2741 017d 01       		.uleb128 0x1
 2742 017e 12       		.uleb128 0x12
 2743 017f 06       		.uleb128 0x6
 2744 0180 40       		.uleb128 0x40
 2745 0181 18       		.uleb128 0x18
 2746 0182 9742     		.uleb128 0x2117
 2747 0184 19       		.uleb128 0x19
 2748 0185 00       		.byte	0
 2749 0186 00       		.byte	0
 2750 0187 1B       		.uleb128 0x1b
 2751 0188 05       		.uleb128 0x5
 2752 0189 00       		.byte	0
 2753 018a 03       		.uleb128 0x3
 2754 018b 0E       		.uleb128 0xe
 2755 018c 3A       		.uleb128 0x3a
 2756 018d 0B       		.uleb128 0xb
 2757 018e 3B       		.uleb128 0x3b
 2758 018f 05       		.uleb128 0x5
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 94


 2759 0190 49       		.uleb128 0x49
 2760 0191 13       		.uleb128 0x13
 2761 0192 02       		.uleb128 0x2
 2762 0193 18       		.uleb128 0x18
 2763 0194 00       		.byte	0
 2764 0195 00       		.byte	0
 2765 0196 1C       		.uleb128 0x1c
 2766 0197 0B       		.uleb128 0xb
 2767 0198 01       		.byte	0x1
 2768 0199 55       		.uleb128 0x55
 2769 019a 17       		.uleb128 0x17
 2770 019b 00       		.byte	0
 2771 019c 00       		.byte	0
 2772 019d 1D       		.uleb128 0x1d
 2773 019e 0F       		.uleb128 0xf
 2774 019f 00       		.byte	0
 2775 01a0 0B       		.uleb128 0xb
 2776 01a1 0B       		.uleb128 0xb
 2777 01a2 49       		.uleb128 0x49
 2778 01a3 13       		.uleb128 0x13
 2779 01a4 00       		.byte	0
 2780 01a5 00       		.byte	0
 2781 01a6 1E       		.uleb128 0x1e
 2782 01a7 26       		.uleb128 0x26
 2783 01a8 00       		.byte	0
 2784 01a9 49       		.uleb128 0x49
 2785 01aa 13       		.uleb128 0x13
 2786 01ab 00       		.byte	0
 2787 01ac 00       		.byte	0
 2788 01ad 1F       		.uleb128 0x1f
 2789 01ae 0B       		.uleb128 0xb
 2790 01af 01       		.byte	0x1
 2791 01b0 11       		.uleb128 0x11
 2792 01b1 01       		.uleb128 0x1
 2793 01b2 12       		.uleb128 0x12
 2794 01b3 06       		.uleb128 0x6
 2795 01b4 01       		.uleb128 0x1
 2796 01b5 13       		.uleb128 0x13
 2797 01b6 00       		.byte	0
 2798 01b7 00       		.byte	0
 2799 01b8 20       		.uleb128 0x20
 2800 01b9 2E       		.uleb128 0x2e
 2801 01ba 00       		.byte	0
 2802 01bb 3F       		.uleb128 0x3f
 2803 01bc 19       		.uleb128 0x19
 2804 01bd 03       		.uleb128 0x3
 2805 01be 0E       		.uleb128 0xe
 2806 01bf 3A       		.uleb128 0x3a
 2807 01c0 0B       		.uleb128 0xb
 2808 01c1 3B       		.uleb128 0x3b
 2809 01c2 05       		.uleb128 0x5
 2810 01c3 27       		.uleb128 0x27
 2811 01c4 19       		.uleb128 0x19
 2812 01c5 11       		.uleb128 0x11
 2813 01c6 01       		.uleb128 0x1
 2814 01c7 12       		.uleb128 0x12
 2815 01c8 06       		.uleb128 0x6
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 95


 2816 01c9 40       		.uleb128 0x40
 2817 01ca 18       		.uleb128 0x18
 2818 01cb 9742     		.uleb128 0x2117
 2819 01cd 19       		.uleb128 0x19
 2820 01ce 00       		.byte	0
 2821 01cf 00       		.byte	0
 2822 01d0 21       		.uleb128 0x21
 2823 01d1 34       		.uleb128 0x34
 2824 01d2 00       		.byte	0
 2825 01d3 03       		.uleb128 0x3
 2826 01d4 0E       		.uleb128 0xe
 2827 01d5 3A       		.uleb128 0x3a
 2828 01d6 0B       		.uleb128 0xb
 2829 01d7 3B       		.uleb128 0x3b
 2830 01d8 0B       		.uleb128 0xb
 2831 01d9 49       		.uleb128 0x49
 2832 01da 13       		.uleb128 0x13
 2833 01db 3F       		.uleb128 0x3f
 2834 01dc 19       		.uleb128 0x19
 2835 01dd 02       		.uleb128 0x2
 2836 01de 18       		.uleb128 0x18
 2837 01df 00       		.byte	0
 2838 01e0 00       		.byte	0
 2839 01e1 22       		.uleb128 0x22
 2840 01e2 34       		.uleb128 0x34
 2841 01e3 00       		.byte	0
 2842 01e4 03       		.uleb128 0x3
 2843 01e5 0E       		.uleb128 0xe
 2844 01e6 3A       		.uleb128 0x3a
 2845 01e7 0B       		.uleb128 0xb
 2846 01e8 3B       		.uleb128 0x3b
 2847 01e9 05       		.uleb128 0x5
 2848 01ea 49       		.uleb128 0x49
 2849 01eb 13       		.uleb128 0x13
 2850 01ec 3F       		.uleb128 0x3f
 2851 01ed 19       		.uleb128 0x19
 2852 01ee 3C       		.uleb128 0x3c
 2853 01ef 19       		.uleb128 0x19
 2854 01f0 00       		.byte	0
 2855 01f1 00       		.byte	0
 2856 01f2 23       		.uleb128 0x23
 2857 01f3 34       		.uleb128 0x34
 2858 01f4 00       		.byte	0
 2859 01f5 03       		.uleb128 0x3
 2860 01f6 0E       		.uleb128 0xe
 2861 01f7 3A       		.uleb128 0x3a
 2862 01f8 0B       		.uleb128 0xb
 2863 01f9 3B       		.uleb128 0x3b
 2864 01fa 0B       		.uleb128 0xb
 2865 01fb 49       		.uleb128 0x49
 2866 01fc 13       		.uleb128 0x13
 2867 01fd 3F       		.uleb128 0x3f
 2868 01fe 19       		.uleb128 0x19
 2869 01ff 3C       		.uleb128 0x3c
 2870 0200 19       		.uleb128 0x19
 2871 0201 00       		.byte	0
 2872 0202 00       		.byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 96


 2873 0203 24       		.uleb128 0x24
 2874 0204 2E       		.uleb128 0x2e
 2875 0205 00       		.byte	0
 2876 0206 3F       		.uleb128 0x3f
 2877 0207 19       		.uleb128 0x19
 2878 0208 3C       		.uleb128 0x3c
 2879 0209 19       		.uleb128 0x19
 2880 020a 6E       		.uleb128 0x6e
 2881 020b 0E       		.uleb128 0xe
 2882 020c 03       		.uleb128 0x3
 2883 020d 0E       		.uleb128 0xe
 2884 020e 3A       		.uleb128 0x3a
 2885 020f 0B       		.uleb128 0xb
 2886 0210 3B       		.uleb128 0x3b
 2887 0211 0B       		.uleb128 0xb
 2888 0212 00       		.byte	0
 2889 0213 00       		.byte	0
 2890 0214 00       		.byte	0
 2891              		.section	.debug_loc,"",%progbits
 2892              	.Ldebug_loc0:
 2893              	.LLST0:
 2894 0000 08000000 		.4byte	.LVL1
 2895 0004 DA000000 		.4byte	.LVL15
 2896 0008 0100     		.2byte	0x1
 2897 000a 56       		.byte	0x56
 2898 000b 00000000 		.4byte	0
 2899 000f 00000000 		.4byte	0
 2900              	.LLST1:
 2901 0013 00000000 		.4byte	.LVL16
 2902 0017 80000000 		.4byte	.LVL22
 2903 001b 0100     		.2byte	0x1
 2904 001d 50       		.byte	0x50
 2905 001e 80000000 		.4byte	.LVL22
 2906 0022 C0000000 		.4byte	.LFE2
 2907 0026 0400     		.2byte	0x4
 2908 0028 F3       		.byte	0xf3
 2909 0029 01       		.uleb128 0x1
 2910 002a 50       		.byte	0x50
 2911 002b 9F       		.byte	0x9f
 2912 002c 00000000 		.4byte	0
 2913 0030 00000000 		.4byte	0
 2914              	.LLST2:
 2915 0034 00000000 		.4byte	.LVL16
 2916 0038 83000000 		.4byte	.LVL23-1
 2917 003c 0100     		.2byte	0x1
 2918 003e 51       		.byte	0x51
 2919 003f 83000000 		.4byte	.LVL23-1
 2920 0043 C0000000 		.4byte	.LFE2
 2921 0047 0400     		.2byte	0x4
 2922 0049 F3       		.byte	0xf3
 2923 004a 01       		.uleb128 0x1
 2924 004b 51       		.byte	0x51
 2925 004c 9F       		.byte	0x9f
 2926 004d 00000000 		.4byte	0
 2927 0051 00000000 		.4byte	0
 2928              	.LLST3:
 2929 0055 02000000 		.4byte	.LVL17
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 97


 2930 0059 06000000 		.4byte	.LVL18
 2931 005d 0200     		.2byte	0x2
 2932 005f 30       		.byte	0x30
 2933 0060 9F       		.byte	0x9f
 2934 0061 06000000 		.4byte	.LVL18
 2935 0065 0E000000 		.4byte	.LVL19
 2936 0069 0100     		.2byte	0x1
 2937 006b 53       		.byte	0x53
 2938 006c 10000000 		.4byte	.LVL20
 2939 0070 16000000 		.4byte	.LVL21
 2940 0074 0100     		.2byte	0x1
 2941 0076 53       		.byte	0x53
 2942 0077 00000000 		.4byte	0
 2943 007b 00000000 		.4byte	0
 2944              	.LLST4:
 2945 007f 00000000 		.4byte	.LVL24
 2946 0083 0F000000 		.4byte	.LVL25-1
 2947 0087 0100     		.2byte	0x1
 2948 0089 50       		.byte	0x50
 2949 008a 0F000000 		.4byte	.LVL25-1
 2950 008e 24000000 		.4byte	.LFE0
 2951 0092 0400     		.2byte	0x4
 2952 0094 F3       		.byte	0xf3
 2953 0095 01       		.uleb128 0x1
 2954 0096 50       		.byte	0x50
 2955 0097 9F       		.byte	0x9f
 2956 0098 00000000 		.4byte	0
 2957 009c 00000000 		.4byte	0
 2958              	.LLST5:
 2959 00a0 00000000 		.4byte	.LVL24
 2960 00a4 0F000000 		.4byte	.LVL25-1
 2961 00a8 0100     		.2byte	0x1
 2962 00aa 51       		.byte	0x51
 2963 00ab 0F000000 		.4byte	.LVL25-1
 2964 00af 24000000 		.4byte	.LFE0
 2965 00b3 0400     		.2byte	0x4
 2966 00b5 F3       		.byte	0xf3
 2967 00b6 01       		.uleb128 0x1
 2968 00b7 51       		.byte	0x51
 2969 00b8 9F       		.byte	0x9f
 2970 00b9 00000000 		.4byte	0
 2971 00bd 00000000 		.4byte	0
 2972              	.LLST6:
 2973 00c1 00000000 		.4byte	.LVL27
 2974 00c5 04000000 		.4byte	.LVL28
 2975 00c9 0200     		.2byte	0x2
 2976 00cb 30       		.byte	0x30
 2977 00cc 9F       		.byte	0x9f
 2978 00cd 04000000 		.4byte	.LVL28
 2979 00d1 0C000000 		.4byte	.LVL29
 2980 00d5 0100     		.2byte	0x1
 2981 00d7 53       		.byte	0x53
 2982 00d8 0E000000 		.4byte	.LVL30
 2983 00dc 14000000 		.4byte	.LVL31
 2984 00e0 0100     		.2byte	0x1
 2985 00e2 53       		.byte	0x53
 2986 00e3 00000000 		.4byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 98


 2987 00e7 00000000 		.4byte	0
 2988              	.LLST7:
 2989 00eb 06000000 		.4byte	.LVL32
 2990 00ef 47000000 		.4byte	.LVL33-1
 2991 00f3 0100     		.2byte	0x1
 2992 00f5 50       		.byte	0x50
 2993 00f6 00000000 		.4byte	0
 2994 00fa 00000000 		.4byte	0
 2995              	.LLST8:
 2996 00fe 06000000 		.4byte	.LVL35
 2997 0102 10000000 		.4byte	.LVL36
 2998 0106 0100     		.2byte	0x1
 2999 0108 53       		.byte	0x53
 3000 0109 00000000 		.4byte	0
 3001 010d 00000000 		.4byte	0
 3002              	.LLST9:
 3003 0111 00000000 		.4byte	.LVL37
 3004 0115 10000000 		.4byte	.LVL38
 3005 0119 0200     		.2byte	0x2
 3006 011b 30       		.byte	0x30
 3007 011c 9F       		.byte	0x9f
 3008 011d 10000000 		.4byte	.LVL38
 3009 0121 16000000 		.4byte	.LVL39
 3010 0125 0100     		.2byte	0x1
 3011 0127 50       		.byte	0x50
 3012 0128 16000000 		.4byte	.LVL39
 3013 012c 18000000 		.4byte	.LVL40
 3014 0130 0200     		.2byte	0x2
 3015 0132 30       		.byte	0x30
 3016 0133 9F       		.byte	0x9f
 3017 0134 18000000 		.4byte	.LVL40
 3018 0138 20000000 		.4byte	.LFE7
 3019 013c 0100     		.2byte	0x1
 3020 013e 50       		.byte	0x50
 3021 013f 00000000 		.4byte	0
 3022 0143 00000000 		.4byte	0
 3023              	.LLST10:
 3024 0147 00000000 		.4byte	.LVL41
 3025 014b 04000000 		.4byte	.LVL42
 3026 014f 0100     		.2byte	0x1
 3027 0151 50       		.byte	0x50
 3028 0152 04000000 		.4byte	.LVL42
 3029 0156 0C000000 		.4byte	.LFE8
 3030 015a 0400     		.2byte	0x4
 3031 015c F3       		.byte	0xf3
 3032 015d 01       		.uleb128 0x1
 3033 015e 50       		.byte	0x50
 3034 015f 9F       		.byte	0x9f
 3035 0160 00000000 		.4byte	0
 3036 0164 00000000 		.4byte	0
 3037              	.LLST11:
 3038 0168 00000000 		.4byte	.LVL43
 3039 016c 04000000 		.4byte	.LVL44
 3040 0170 0100     		.2byte	0x1
 3041 0172 50       		.byte	0x50
 3042 0173 04000000 		.4byte	.LVL44
 3043 0177 14000000 		.4byte	.LFE9
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 99


 3044 017b 0400     		.2byte	0x4
 3045 017d F3       		.byte	0xf3
 3046 017e 01       		.uleb128 0x1
 3047 017f 50       		.byte	0x50
 3048 0180 9F       		.byte	0x9f
 3049 0181 00000000 		.4byte	0
 3050 0185 00000000 		.4byte	0
 3051              	.LLST12:
 3052 0189 00000000 		.4byte	.LVL45
 3053 018d 0C000000 		.4byte	.LVL46
 3054 0191 0100     		.2byte	0x1
 3055 0193 50       		.byte	0x50
 3056 0194 0C000000 		.4byte	.LVL46
 3057 0198 20000000 		.4byte	.LVL51
 3058 019c 0400     		.2byte	0x4
 3059 019e F3       		.byte	0xf3
 3060 019f 01       		.uleb128 0x1
 3061 01a0 50       		.byte	0x50
 3062 01a1 9F       		.byte	0x9f
 3063 01a2 20000000 		.4byte	.LVL51
 3064 01a6 22000000 		.4byte	.LVL52
 3065 01aa 0100     		.2byte	0x1
 3066 01ac 50       		.byte	0x50
 3067 01ad 22000000 		.4byte	.LVL52
 3068 01b1 28000000 		.4byte	.LFE10
 3069 01b5 0400     		.2byte	0x4
 3070 01b7 F3       		.byte	0xf3
 3071 01b8 01       		.uleb128 0x1
 3072 01b9 50       		.byte	0x50
 3073 01ba 9F       		.byte	0x9f
 3074 01bb 00000000 		.4byte	0
 3075 01bf 00000000 		.4byte	0
 3076              	.LLST13:
 3077 01c3 00000000 		.4byte	.LVL45
 3078 01c7 14000000 		.4byte	.LVL47
 3079 01cb 0200     		.2byte	0x2
 3080 01cd 30       		.byte	0x30
 3081 01ce 9F       		.byte	0x9f
 3082 01cf 14000000 		.4byte	.LVL47
 3083 01d3 1C000000 		.4byte	.LVL49
 3084 01d7 0100     		.2byte	0x1
 3085 01d9 50       		.byte	0x50
 3086 01da 1C000000 		.4byte	.LVL49
 3087 01de 1E000000 		.4byte	.LVL50
 3088 01e2 0300     		.2byte	0x3
 3089 01e4 70       		.byte	0x70
 3090 01e5 02       		.sleb128 2
 3091 01e6 9F       		.byte	0x9f
 3092 01e7 1E000000 		.4byte	.LVL50
 3093 01eb 20000000 		.4byte	.LVL51
 3094 01ef 0100     		.2byte	0x1
 3095 01f1 50       		.byte	0x50
 3096 01f2 20000000 		.4byte	.LVL51
 3097 01f6 22000000 		.4byte	.LVL52
 3098 01fa 0200     		.2byte	0x2
 3099 01fc 30       		.byte	0x30
 3100 01fd 9F       		.byte	0x9f
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 100


 3101 01fe 22000000 		.4byte	.LVL52
 3102 0202 28000000 		.4byte	.LFE10
 3103 0206 0100     		.2byte	0x1
 3104 0208 50       		.byte	0x50
 3105 0209 00000000 		.4byte	0
 3106 020d 00000000 		.4byte	0
 3107              	.LLST14:
 3108 0211 00000000 		.4byte	.LVL53
 3109 0215 7C000000 		.4byte	.LVL63
 3110 0219 0100     		.2byte	0x1
 3111 021b 50       		.byte	0x50
 3112 021c 7C000000 		.4byte	.LVL63
 3113 0220 94000000 		.4byte	.LFE11
 3114 0224 0400     		.2byte	0x4
 3115 0226 F3       		.byte	0xf3
 3116 0227 01       		.uleb128 0x1
 3117 0228 50       		.byte	0x50
 3118 0229 9F       		.byte	0x9f
 3119 022a 00000000 		.4byte	0
 3120 022e 00000000 		.4byte	0
 3121              	.LLST15:
 3122 0232 00000000 		.4byte	.LVL53
 3123 0236 26000000 		.4byte	.LVL54
 3124 023a 0100     		.2byte	0x1
 3125 023c 52       		.byte	0x52
 3126 023d 26000000 		.4byte	.LVL54
 3127 0241 34000000 		.4byte	.LVL55
 3128 0245 0400     		.2byte	0x4
 3129 0247 F3       		.byte	0xf3
 3130 0248 01       		.uleb128 0x1
 3131 0249 52       		.byte	0x52
 3132 024a 9F       		.byte	0x9f
 3133 024b 34000000 		.4byte	.LVL55
 3134 024f 6A000000 		.4byte	.LVL62
 3135 0253 0100     		.2byte	0x1
 3136 0255 52       		.byte	0x52
 3137 0256 00000000 		.4byte	0
 3138 025a 00000000 		.4byte	0
 3139              	.LLST16:
 3140 025e 54000000 		.4byte	.LVL56
 3141 0262 5E000000 		.4byte	.LVL57
 3142 0266 0100     		.2byte	0x1
 3143 0268 53       		.byte	0x53
 3144 0269 60000000 		.4byte	.LVL58
 3145 026d 62000000 		.4byte	.LVL59
 3146 0271 0100     		.2byte	0x1
 3147 0273 53       		.byte	0x53
 3148 0274 64000000 		.4byte	.LVL60
 3149 0278 68000000 		.4byte	.LVL61
 3150 027c 0100     		.2byte	0x1
 3151 027e 53       		.byte	0x53
 3152 027f 00000000 		.4byte	0
 3153 0283 00000000 		.4byte	0
 3154              	.LLST17:
 3155 0287 00000000 		.4byte	.LVL64
 3156 028b 1C000000 		.4byte	.LVL65
 3157 028f 0100     		.2byte	0x1
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 101


 3158 0291 50       		.byte	0x50
 3159 0292 1C000000 		.4byte	.LVL65
 3160 0296 2C000000 		.4byte	.LFE13
 3161 029a 0400     		.2byte	0x4
 3162 029c F3       		.byte	0xf3
 3163 029d 01       		.uleb128 0x1
 3164 029e 50       		.byte	0x50
 3165 029f 9F       		.byte	0x9f
 3166 02a0 00000000 		.4byte	0
 3167 02a4 00000000 		.4byte	0
 3168              	.LLST18:
 3169 02a8 00000000 		.4byte	.LVL66
 3170 02ac 13000000 		.4byte	.LVL67-1
 3171 02b0 0100     		.2byte	0x1
 3172 02b2 50       		.byte	0x50
 3173 02b3 13000000 		.4byte	.LVL67-1
 3174 02b7 3C000000 		.4byte	.LVL74
 3175 02bb 0400     		.2byte	0x4
 3176 02bd F3       		.byte	0xf3
 3177 02be 01       		.uleb128 0x1
 3178 02bf 50       		.byte	0x50
 3179 02c0 9F       		.byte	0x9f
 3180 02c1 3C000000 		.4byte	.LVL74
 3181 02c5 46000000 		.4byte	.LVL75
 3182 02c9 0100     		.2byte	0x1
 3183 02cb 50       		.byte	0x50
 3184 02cc 46000000 		.4byte	.LVL75
 3185 02d0 50000000 		.4byte	.LFE12
 3186 02d4 0400     		.2byte	0x4
 3187 02d6 F3       		.byte	0xf3
 3188 02d7 01       		.uleb128 0x1
 3189 02d8 50       		.byte	0x50
 3190 02d9 9F       		.byte	0x9f
 3191 02da 00000000 		.4byte	0
 3192 02de 00000000 		.4byte	0
 3193              	.LLST19:
 3194 02e2 00000000 		.4byte	.LVL66
 3195 02e6 13000000 		.4byte	.LVL67-1
 3196 02ea 0100     		.2byte	0x1
 3197 02ec 51       		.byte	0x51
 3198 02ed 13000000 		.4byte	.LVL67-1
 3199 02f1 3C000000 		.4byte	.LVL74
 3200 02f5 0100     		.2byte	0x1
 3201 02f7 56       		.byte	0x56
 3202 02f8 3C000000 		.4byte	.LVL74
 3203 02fc 46000000 		.4byte	.LVL75
 3204 0300 0100     		.2byte	0x1
 3205 0302 51       		.byte	0x51
 3206 0303 46000000 		.4byte	.LVL75
 3207 0307 50000000 		.4byte	.LFE12
 3208 030b 0400     		.2byte	0x4
 3209 030d F3       		.byte	0xf3
 3210 030e 01       		.uleb128 0x1
 3211 030f 51       		.byte	0x51
 3212 0310 9F       		.byte	0x9f
 3213 0311 00000000 		.4byte	0
 3214 0315 00000000 		.4byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 102


 3215              	.LLST20:
 3216 0319 00000000 		.4byte	.LVL66
 3217 031d 13000000 		.4byte	.LVL67-1
 3218 0321 0100     		.2byte	0x1
 3219 0323 52       		.byte	0x52
 3220 0324 13000000 		.4byte	.LVL67-1
 3221 0328 20000000 		.4byte	.LVL69
 3222 032c 0400     		.2byte	0x4
 3223 032e F3       		.byte	0xf3
 3224 032f 01       		.uleb128 0x1
 3225 0330 52       		.byte	0x52
 3226 0331 9F       		.byte	0x9f
 3227 0332 20000000 		.4byte	.LVL69
 3228 0336 3C000000 		.4byte	.LVL74
 3229 033a 0100     		.2byte	0x1
 3230 033c 54       		.byte	0x54
 3231 033d 3C000000 		.4byte	.LVL74
 3232 0341 46000000 		.4byte	.LVL75
 3233 0345 0100     		.2byte	0x1
 3234 0347 52       		.byte	0x52
 3235 0348 46000000 		.4byte	.LVL75
 3236 034c 4A000000 		.4byte	.LVL76
 3237 0350 0100     		.2byte	0x1
 3238 0352 54       		.byte	0x54
 3239 0353 00000000 		.4byte	0
 3240 0357 00000000 		.4byte	0
 3241              	.LLST21:
 3242 035b 20000000 		.4byte	.LVL69
 3243 035f 24000000 		.4byte	.LVL70
 3244 0363 0200     		.2byte	0x2
 3245 0365 30       		.byte	0x30
 3246 0366 9F       		.byte	0x9f
 3247 0367 24000000 		.4byte	.LVL70
 3248 036b 2E000000 		.4byte	.LVL71
 3249 036f 0100     		.2byte	0x1
 3250 0371 53       		.byte	0x53
 3251 0372 30000000 		.4byte	.LVL72
 3252 0376 39000000 		.4byte	.LVL73-1
 3253 037a 0100     		.2byte	0x1
 3254 037c 53       		.byte	0x53
 3255 037d 00000000 		.4byte	0
 3256 0381 00000000 		.4byte	0
 3257              	.LLST22:
 3258 0385 00000000 		.4byte	.LVL77
 3259 0389 0A000000 		.4byte	.LVL78
 3260 038d 0100     		.2byte	0x1
 3261 038f 50       		.byte	0x50
 3262 0390 0A000000 		.4byte	.LVL78
 3263 0394 18000000 		.4byte	.LFE14
 3264 0398 0400     		.2byte	0x4
 3265 039a F3       		.byte	0xf3
 3266 039b 01       		.uleb128 0x1
 3267 039c 50       		.byte	0x50
 3268 039d 9F       		.byte	0x9f
 3269 039e 00000000 		.4byte	0
 3270 03a2 00000000 		.4byte	0
 3271              	.LLST23:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 103


 3272 03a6 00000000 		.4byte	.LVL80
 3273 03aa 0A000000 		.4byte	.LVL81
 3274 03ae 0100     		.2byte	0x1
 3275 03b0 50       		.byte	0x50
 3276 03b1 0A000000 		.4byte	.LVL81
 3277 03b5 16000000 		.4byte	.LVL83
 3278 03b9 0400     		.2byte	0x4
 3279 03bb F3       		.byte	0xf3
 3280 03bc 01       		.uleb128 0x1
 3281 03bd 50       		.byte	0x50
 3282 03be 9F       		.byte	0x9f
 3283 03bf 16000000 		.4byte	.LVL83
 3284 03c3 18000000 		.4byte	.LVL84
 3285 03c7 0100     		.2byte	0x1
 3286 03c9 50       		.byte	0x50
 3287 03ca 18000000 		.4byte	.LVL84
 3288 03ce 20000000 		.4byte	.LFE16
 3289 03d2 0400     		.2byte	0x4
 3290 03d4 F3       		.byte	0xf3
 3291 03d5 01       		.uleb128 0x1
 3292 03d6 50       		.byte	0x50
 3293 03d7 9F       		.byte	0x9f
 3294 03d8 00000000 		.4byte	0
 3295 03dc 00000000 		.4byte	0
 3296              	.LLST24:
 3297 03e0 00000000 		.4byte	.LVL80
 3298 03e4 14000000 		.4byte	.LVL82
 3299 03e8 0200     		.2byte	0x2
 3300 03ea 30       		.byte	0x30
 3301 03eb 9F       		.byte	0x9f
 3302 03ec 14000000 		.4byte	.LVL82
 3303 03f0 16000000 		.4byte	.LVL83
 3304 03f4 0100     		.2byte	0x1
 3305 03f6 50       		.byte	0x50
 3306 03f7 16000000 		.4byte	.LVL83
 3307 03fb 18000000 		.4byte	.LVL84
 3308 03ff 0200     		.2byte	0x2
 3309 0401 30       		.byte	0x30
 3310 0402 9F       		.byte	0x9f
 3311 0403 18000000 		.4byte	.LVL84
 3312 0407 20000000 		.4byte	.LFE16
 3313 040b 0100     		.2byte	0x1
 3314 040d 50       		.byte	0x50
 3315 040e 00000000 		.4byte	0
 3316 0412 00000000 		.4byte	0
 3317              	.LLST25:
 3318 0416 00000000 		.4byte	.LVL86
 3319 041a 10000000 		.4byte	.LVL87
 3320 041e 0200     		.2byte	0x2
 3321 0420 30       		.byte	0x30
 3322 0421 9F       		.byte	0x9f
 3323 0422 10000000 		.4byte	.LVL87
 3324 0426 18000000 		.4byte	.LFE18
 3325 042a 0100     		.2byte	0x1
 3326 042c 50       		.byte	0x50
 3327 042d 00000000 		.4byte	0
 3328 0431 00000000 		.4byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 104


 3329              		.section	.debug_aranges,"",%progbits
 3330 0000 C4000000 		.4byte	0xc4
 3331 0004 0200     		.2byte	0x2
 3332 0006 00000000 		.4byte	.Ldebug_info0
 3333 000a 04       		.byte	0x4
 3334 000b 00       		.byte	0
 3335 000c 0000     		.2byte	0
 3336 000e 0000     		.2byte	0
 3337 0010 00000000 		.4byte	.LFB1
 3338 0014 04010000 		.4byte	.LFE1-.LFB1
 3339 0018 00000000 		.4byte	.LFB2
 3340 001c C0000000 		.4byte	.LFE2-.LFB2
 3341 0020 00000000 		.4byte	.LFB0
 3342 0024 24000000 		.4byte	.LFE0-.LFB0
 3343 0028 00000000 		.4byte	.LFB3
 3344 002c 64000000 		.4byte	.LFE3-.LFB3
 3345 0030 00000000 		.4byte	.LFB4
 3346 0034 AC000000 		.4byte	.LFE4-.LFB4
 3347 0038 00000000 		.4byte	.LFB5
 3348 003c 20000000 		.4byte	.LFE5-.LFB5
 3349 0040 00000000 		.4byte	.LFB6
 3350 0044 0C000000 		.4byte	.LFE6-.LFB6
 3351 0048 00000000 		.4byte	.LFB7
 3352 004c 20000000 		.4byte	.LFE7-.LFB7
 3353 0050 00000000 		.4byte	.LFB8
 3354 0054 0C000000 		.4byte	.LFE8-.LFB8
 3355 0058 00000000 		.4byte	.LFB9
 3356 005c 14000000 		.4byte	.LFE9-.LFB9
 3357 0060 00000000 		.4byte	.LFB10
 3358 0064 28000000 		.4byte	.LFE10-.LFB10
 3359 0068 00000000 		.4byte	.LFB11
 3360 006c 94000000 		.4byte	.LFE11-.LFB11
 3361 0070 00000000 		.4byte	.LFB13
 3362 0074 2C000000 		.4byte	.LFE13-.LFB13
 3363 0078 00000000 		.4byte	.LFB12
 3364 007c 50000000 		.4byte	.LFE12-.LFB12
 3365 0080 00000000 		.4byte	.LFB14
 3366 0084 18000000 		.4byte	.LFE14-.LFB14
 3367 0088 00000000 		.4byte	.LFB15
 3368 008c 0C000000 		.4byte	.LFE15-.LFB15
 3369 0090 00000000 		.4byte	.LFB16
 3370 0094 20000000 		.4byte	.LFE16-.LFB16
 3371 0098 00000000 		.4byte	.LFB17
 3372 009c 20000000 		.4byte	.LFE17-.LFB17
 3373 00a0 00000000 		.4byte	.LFB18
 3374 00a4 18000000 		.4byte	.LFE18-.LFB18
 3375 00a8 00000000 		.4byte	.LFB19
 3376 00ac 10000000 		.4byte	.LFE19-.LFB19
 3377 00b0 00000000 		.4byte	.LFB20
 3378 00b4 02000000 		.4byte	.LFE20-.LFB20
 3379 00b8 00000000 		.4byte	.LFB21
 3380 00bc 02000000 		.4byte	.LFE21-.LFB21
 3381 00c0 00000000 		.4byte	0
 3382 00c4 00000000 		.4byte	0
 3383              		.section	.debug_ranges,"",%progbits
 3384              	.Ldebug_ranges0:
 3385 0000 52000000 		.4byte	.LBB2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 105


 3386 0004 62000000 		.4byte	.LBE2
 3387 0008 64000000 		.4byte	.LBB3
 3388 000c 68000000 		.4byte	.LBE3
 3389 0010 00000000 		.4byte	0
 3390 0014 00000000 		.4byte	0
 3391 0018 00000000 		.4byte	.LFB1
 3392 001c 04010000 		.4byte	.LFE1
 3393 0020 00000000 		.4byte	.LFB2
 3394 0024 C0000000 		.4byte	.LFE2
 3395 0028 00000000 		.4byte	.LFB0
 3396 002c 24000000 		.4byte	.LFE0
 3397 0030 00000000 		.4byte	.LFB3
 3398 0034 64000000 		.4byte	.LFE3
 3399 0038 00000000 		.4byte	.LFB4
 3400 003c AC000000 		.4byte	.LFE4
 3401 0040 00000000 		.4byte	.LFB5
 3402 0044 20000000 		.4byte	.LFE5
 3403 0048 00000000 		.4byte	.LFB6
 3404 004c 0C000000 		.4byte	.LFE6
 3405 0050 00000000 		.4byte	.LFB7
 3406 0054 20000000 		.4byte	.LFE7
 3407 0058 00000000 		.4byte	.LFB8
 3408 005c 0C000000 		.4byte	.LFE8
 3409 0060 00000000 		.4byte	.LFB9
 3410 0064 14000000 		.4byte	.LFE9
 3411 0068 00000000 		.4byte	.LFB10
 3412 006c 28000000 		.4byte	.LFE10
 3413 0070 00000000 		.4byte	.LFB11
 3414 0074 94000000 		.4byte	.LFE11
 3415 0078 00000000 		.4byte	.LFB13
 3416 007c 2C000000 		.4byte	.LFE13
 3417 0080 00000000 		.4byte	.LFB12
 3418 0084 50000000 		.4byte	.LFE12
 3419 0088 00000000 		.4byte	.LFB14
 3420 008c 18000000 		.4byte	.LFE14
 3421 0090 00000000 		.4byte	.LFB15
 3422 0094 0C000000 		.4byte	.LFE15
 3423 0098 00000000 		.4byte	.LFB16
 3424 009c 20000000 		.4byte	.LFE16
 3425 00a0 00000000 		.4byte	.LFB17
 3426 00a4 20000000 		.4byte	.LFE17
 3427 00a8 00000000 		.4byte	.LFB18
 3428 00ac 18000000 		.4byte	.LFE18
 3429 00b0 00000000 		.4byte	.LFB19
 3430 00b4 10000000 		.4byte	.LFE19
 3431 00b8 00000000 		.4byte	.LFB20
 3432 00bc 02000000 		.4byte	.LFE20
 3433 00c0 00000000 		.4byte	.LFB21
 3434 00c4 02000000 		.4byte	.LFE21
 3435 00c8 00000000 		.4byte	0
 3436 00cc 00000000 		.4byte	0
 3437              		.section	.debug_line,"",%progbits
 3438              	.Ldebug_line0:
 3439 0000 EC020000 		.section	.debug_str,"MS",%progbits,1
 3439      02007D00 
 3439      00000201 
 3439      FB0E0D00 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 106


 3439      01010101 
 3440              	.LASF10:
 3441 0000 75696E74 		.ascii	"uint16\000"
 3441      313600
 3442              	.LASF64:
 3443 0007 55534246 		.ascii	"USBFS_1_LoadInEP\000"
 3443      535F315F 
 3443      4C6F6164 
 3443      496E4550 
 3443      00
 3444              	.LASF72:
 3445 0018 55534246 		.ascii	"USBFS_1_GetEPAckState\000"
 3445      535F315F 
 3445      47657445 
 3445      5041636B 
 3445      53746174 
 3446              	.LASF56:
 3447 002e 55534246 		.ascii	"USBFS_1_CheckActivity\000"
 3447      535F315F 
 3447      43686563 
 3447      6B416374 
 3447      69766974 
 3448              	.LASF81:
 3449 0044 55534246 		.ascii	"USBFS_1_initVar\000"
 3449      535F315F 
 3449      696E6974 
 3449      56617200 
 3450              	.LASF7:
 3451 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 3451      206C6F6E 
 3451      6720756E 
 3451      7369676E 
 3451      65642069 
 3452              	.LASF80:
 3453 006b 55534246 		.ascii	"USBFS_1_DisableSofInt\000"
 3453      535F315F 
 3453      44697361 
 3453      626C6553 
 3453      6F66496E 
 3454              	.LASF23:
 3455 0081 61646472 		.ascii	"addr\000"
 3455      00
 3456              	.LASF33:
 3457 0086 65704366 		.ascii	"epCfg\000"
 3457      6700
 3458              	.LASF91:
 3459 008c 55534246 		.ascii	"USBFS_1_EP\000"
 3459      535F315F 
 3459      455000
 3460              	.LASF61:
 3461 0097 65704E75 		.ascii	"epNumber\000"
 3461      6D626572 
 3461      00
 3462              	.LASF49:
 3463 00a0 64657669 		.ascii	"device\000"
 3463      636500
 3464              	.LASF6:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 107


 3465 00a7 6C6F6E67 		.ascii	"long long int\000"
 3465      206C6F6E 
 3465      6720696E 
 3465      7400
 3466              	.LASF0:
 3467 00b5 7369676E 		.ascii	"signed char\000"
 3467      65642063 
 3467      68617200 
 3468              	.LASF63:
 3469 00c1 636E7472 		.ascii	"cntr\000"
 3469      00
 3470              	.LASF4:
 3471 00c6 6C6F6E67 		.ascii	"long int\000"
 3471      20696E74 
 3471      00
 3472              	.LASF87:
 3473 00cf 55534246 		.ascii	"USBFS_1_hidProtocol\000"
 3473      535F315F 
 3473      68696450 
 3473      726F746F 
 3473      636F6C00 
 3474              	.LASF68:
 3475 00e3 55534246 		.ascii	"USBFS_1_ReadOutEP\000"
 3475      535F315F 
 3475      52656164 
 3475      4F757445 
 3475      5000
 3476              	.LASF9:
 3477 00f5 75696E74 		.ascii	"uint8\000"
 3477      3800
 3478              	.LASF22:
 3479 00fb 6570546F 		.ascii	"epToggle\000"
 3479      67676C65 
 3479      00
 3480              	.LASF37:
 3481 0104 72775761 		.ascii	"rwWa\000"
 3481      00
 3482              	.LASF76:
 3483 0109 72657375 		.ascii	"result\000"
 3483      6C7400
 3484              	.LASF94:
 3485 0110 43794465 		.ascii	"CyDelayUs\000"
 3485      6C617955 
 3485      7300
 3486              	.LASF13:
 3487 011a 646F7562 		.ascii	"double\000"
 3487      6C6500
 3488              	.LASF74:
 3489 0121 706F7765 		.ascii	"powerStatus\000"
 3489      72537461 
 3489      74757300 
 3490              	.LASF86:
 3491 012d 55534246 		.ascii	"USBFS_1_deviceStatus\000"
 3491      535F315F 
 3491      64657669 
 3491      63655374 
 3491      61747573 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 108


 3492              	.LASF35:
 3493 0142 65705372 		.ascii	"epSr\000"
 3493      00
 3494              	.LASF11:
 3495 0147 75696E74 		.ascii	"uint32\000"
 3495      333200
 3496              	.LASF65:
 3497 014e 70446174 		.ascii	"pData\000"
 3497      6100
 3498              	.LASF43:
 3499 0154 73696545 		.ascii	"sieEp\000"
 3499      7000
 3500              	.LASF24:
 3501 015a 65704D6F 		.ascii	"epMode\000"
 3501      646500
 3502              	.LASF88:
 3503 0161 55534246 		.ascii	"USBFS_1_interfaceNumber\000"
 3503      535F315F 
 3503      696E7465 
 3503      72666163 
 3503      654E756D 
 3504              	.LASF36:
 3505 0179 72657365 		.ascii	"reserved\000"
 3505      72766564 
 3505      00
 3506              	.LASF69:
 3507 0182 55534246 		.ascii	"USBFS_1_DisableOutEP\000"
 3507      535F315F 
 3507      44697361 
 3507      626C654F 
 3507      75744550 
 3508              	.LASF8:
 3509 0197 756E7369 		.ascii	"unsigned int\000"
 3509      676E6564 
 3509      20696E74 
 3509      00
 3510              	.LASF84:
 3511 01a4 55534246 		.ascii	"USBFS_1_configuration\000"
 3511      535F315F 
 3511      636F6E66 
 3511      69677572 
 3511      6174696F 
 3512              	.LASF42:
 3513 01ba 55534246 		.ascii	"USBFS_1_arb_ep_struct\000"
 3513      535F315F 
 3513      6172625F 
 3513      65705F73 
 3513      74727563 
 3514              	.LASF5:
 3515 01d0 6C6F6E67 		.ascii	"long unsigned int\000"
 3515      20756E73 
 3515      69676E65 
 3515      6420696E 
 3515      7400
 3516              	.LASF54:
 3517 01e2 55534246 		.ascii	"USBFS_1_Stop\000"
 3517      535F315F 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 109


 3517      53746F70 
 3517      00
 3518              	.LASF93:
 3519 01ef 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3519      74657243 
 3519      72697469 
 3519      63616C53 
 3519      65637469 
 3520              	.LASF44:
 3521 0206 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 3521      535F315F 
 3521      7369655F 
 3521      6570735F 
 3521      73747275 
 3522              	.LASF46:
 3523 021d 55534246 		.ascii	"USBFS_1_arb_eps_struct\000"
 3523      535F315F 
 3523      6172625F 
 3523      6570735F 
 3523      73747275 
 3524              	.LASF78:
 3525 0234 55534246 		.ascii	"USBFS_1_GetDeviceAddress\000"
 3525      535F315F 
 3525      47657444 
 3525      65766963 
 3525      65416464 
 3526              	.LASF52:
 3527 024d 55534246 		.ascii	"USBFS_1_Start\000"
 3527      535F315F 
 3527      53746172 
 3527      7400
 3528              	.LASF3:
 3529 025b 73686F72 		.ascii	"short unsigned int\000"
 3529      7420756E 
 3529      7369676E 
 3529      65642069 
 3529      6E7400
 3530              	.LASF97:
 3531 026e 4379496E 		.ascii	"CyIntSetVector\000"
 3531      74536574 
 3531      56656374 
 3531      6F7200
 3532              	.LASF28:
 3533 027d 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
 3533      4246535F 
 3533      315F4550 
 3533      5F43544C 
 3533      5F424C4F 
 3534              	.LASF73:
 3535 0294 55534246 		.ascii	"USBFS_1_SetPowerStatus\000"
 3535      535F315F 
 3535      53657450 
 3535      6F776572 
 3535      53746174 
 3536              	.LASF67:
 3537 02ab 55534246 		.ascii	"USBFS_1_EnableOutEP\000"
 3537      535F315F 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 110


 3537      456E6162 
 3537      6C654F75 
 3537      74455000 
 3538              	.LASF96:
 3539 02bf 4379496E 		.ascii	"CyIntSetPriority\000"
 3539      74536574 
 3539      5072696F 
 3539      72697479 
 3539      00
 3540              	.LASF45:
 3541 02d0 61726245 		.ascii	"arbEp\000"
 3541      7000
 3542              	.LASF27:
 3543 02d6 696E7465 		.ascii	"interface\000"
 3543      72666163 
 3543      6500
 3544              	.LASF55:
 3545 02e0 63723152 		.ascii	"cr1Reg\000"
 3545      656700
 3546              	.LASF16:
 3547 02e7 72656733 		.ascii	"reg32\000"
 3547      3200
 3548              	.LASF21:
 3549 02ed 68774570 		.ascii	"hwEpState\000"
 3549      53746174 
 3549      6500
 3550              	.LASF77:
 3551 02f7 55534246 		.ascii	"USBFS_1_GetConfiguration\000"
 3551      535F315F 
 3551      47657443 
 3551      6F6E6669 
 3551      67757261 
 3552              	.LASF18:
 3553 0310 73697A65 		.ascii	"sizetype\000"
 3553      74797065 
 3553      00
 3554              	.LASF60:
 3555 0319 55534246 		.ascii	"USBFS_1_GetEPState\000"
 3555      535F315F 
 3555      47657445 
 3555      50537461 
 3555      746500
 3556              	.LASF17:
 3557 032c 6C6F6E67 		.ascii	"long double\000"
 3557      20646F75 
 3557      626C6500 
 3558              	.LASF19:
 3559 0338 61747472 		.ascii	"attrib\000"
 3559      696200
 3560              	.LASF57:
 3561 033f 55534246 		.ascii	"USBFS_1_IsConfigurationChanged\000"
 3561      535F315F 
 3561      4973436F 
 3561      6E666967 
 3561      75726174 
 3562              	.LASF40:
 3563 035e 72775261 		.ascii	"rwRaMsb\000"
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 111


 3563      4D736200 
 3564              	.LASF29:
 3565 0366 6570436E 		.ascii	"epCnt0\000"
 3565      743000
 3566              	.LASF30:
 3567 036d 6570436E 		.ascii	"epCnt1\000"
 3567      743100
 3568              	.LASF32:
 3569 0374 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 3569      535F315F 
 3569      7369655F 
 3569      65705F73 
 3569      74727563 
 3570              	.LASF31:
 3571 038a 65704372 		.ascii	"epCr0\000"
 3571      3000
 3572              	.LASF12:
 3573 0390 666C6F61 		.ascii	"float\000"
 3573      7400
 3574              	.LASF95:
 3575 0396 43794578 		.ascii	"CyExitCriticalSection\000"
 3575      69744372 
 3575      69746963 
 3575      616C5365 
 3575      6374696F 
 3576              	.LASF20:
 3577 03ac 61706945 		.ascii	"apiEpState\000"
 3577      70537461 
 3577      746500
 3578              	.LASF89:
 3579 03b7 55534246 		.ascii	"USBFS_1_interfaceSetting\000"
 3579      535F315F 
 3579      696E7465 
 3579      72666163 
 3579      65536574 
 3580              	.LASF98:
 3581 03d0 43794465 		.ascii	"CyDelayCycles\000"
 3581      6C617943 
 3581      79636C65 
 3581      7300
 3582              	.LASF62:
 3583 03de 55534246 		.ascii	"USBFS_1_GetEPCount\000"
 3583      535F315F 
 3583      47657445 
 3583      50436F75 
 3583      6E7400
 3584              	.LASF15:
 3585 03f1 72656738 		.ascii	"reg8\000"
 3585      00
 3586              	.LASF1:
 3587 03f6 756E7369 		.ascii	"unsigned char\000"
 3587      676E6564 
 3587      20636861 
 3587      7200
 3588              	.LASF101:
 3589 0404 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_1.c\000"
 3589      72617465 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 112


 3589      645F536F 
 3589      75726365 
 3589      5C50536F 
 3590              	.LASF2:
 3591 0425 73686F72 		.ascii	"short int\000"
 3591      7420696E 
 3591      7400
 3592              	.LASF82:
 3593 042f 55534246 		.ascii	"USBFS_1_device\000"
 3593      535F315F 
 3593      64657669 
 3593      636500
 3594              	.LASF70:
 3595 043e 55534246 		.ascii	"USBFS_1_Force\000"
 3595      535F315F 
 3595      466F7263 
 3595      6500
 3596              	.LASF39:
 3597 044c 72775261 		.ascii	"rwRa\000"
 3597      00
 3598              	.LASF100:
 3599 0451 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3599      43313120 
 3599      352E342E 
 3599      31203230 
 3599      31363036 
 3600 0484 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3600      20726576 
 3600      6973696F 
 3600      6E203233 
 3600      37373135 
 3601 04b7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3601      66756E63 
 3601      74696F6E 
 3601      2D736563 
 3601      74696F6E 
 3602              	.LASF38:
 3603 04df 72775761 		.ascii	"rwWaMsb\000"
 3603      4D736200 
 3604              	.LASF71:
 3605 04e7 62537461 		.ascii	"bState\000"
 3605      746500
 3606              	.LASF85:
 3607 04ee 55534246 		.ascii	"USBFS_1_configurationChanged\000"
 3607      535F315F 
 3607      636F6E66 
 3607      69677572 
 3607      6174696F 
 3608              	.LASF48:
 3609 050b 55534246 		.ascii	"USBFS_1_InitComponent\000"
 3609      535F315F 
 3609      496E6974 
 3609      436F6D70 
 3609      6F6E656E 
 3610              	.LASF47:
 3611 0521 55534246 		.ascii	"USBFS_1_Init\000"
 3611      535F315F 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 113


 3611      496E6974 
 3611      00
 3612              	.LASF14:
 3613 052e 63686172 		.ascii	"char\000"
 3613      00
 3614              	.LASF50:
 3615 0533 6D6F6465 		.ascii	"mode\000"
 3615      00
 3616              	.LASF26:
 3617 0538 62756666 		.ascii	"bufferSize\000"
 3617      65725369 
 3617      7A6500
 3618              	.LASF102:
 3619 0543 433A5C55 		.ascii	"C:\\Users\\bkettle\\OneDrive\\School\\6.115\\projec"
 3619      73657273 
 3619      5C626B65 
 3619      74746C65 
 3619      5C4F6E65 
 3620 0570 745C7073 		.ascii	"t\\psoc\\Password Keeper\\Complete.cydsn\000"
 3620      6F635C50 
 3620      61737377 
 3620      6F726420 
 3620      4B656570 
 3621              	.LASF25:
 3622 0596 62756666 		.ascii	"buffOffset\000"
 3622      4F666673 
 3622      657400
 3623              	.LASF59:
 3624 05a1 696E7465 		.ascii	"interfaceNumber\000"
 3624      72666163 
 3624      654E756D 
 3624      62657200 
 3625              	.LASF83:
 3626 05b1 55534246 		.ascii	"USBFS_1_transferState\000"
 3626      535F315F 
 3626      7472616E 
 3626      73666572 
 3626      53746174 
 3627              	.LASF99:
 3628 05c7 55534246 		.ascii	"USBFS_1_Dp_ClearInterrupt\000"
 3628      535F315F 
 3628      44705F43 
 3628      6C656172 
 3628      496E7465 
 3629              	.LASF75:
 3630 05e1 55534246 		.ascii	"USBFS_1_RWUEnabled\000"
 3630      535F315F 
 3630      52575545 
 3630      6E61626C 
 3630      656400
 3631              	.LASF90:
 3632 05f4 55534246 		.ascii	"USBFS_1_deviceAddress\000"
 3632      535F315F 
 3632      64657669 
 3632      63654164 
 3632      64726573 
 3633              	.LASF66:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\cc2v871z.s 			page 114


 3634 060a 6C656E67 		.ascii	"length\000"
 3634      746800
 3635              	.LASF51:
 3636 0611 656E6162 		.ascii	"enableInterrupts\000"
 3636      6C65496E 
 3636      74657272 
 3636      75707473 
 3636      00
 3637              	.LASF41:
 3638 0622 72774472 		.ascii	"rwDr\000"
 3638      00
 3639              	.LASF79:
 3640 0627 55534246 		.ascii	"USBFS_1_EnableSofInt\000"
 3640      535F315F 
 3640      456E6162 
 3640      6C65536F 
 3640      66496E74 
 3641              	.LASF34:
 3642 063c 6570496E 		.ascii	"epIntEn\000"
 3642      74456E00 
 3643              	.LASF92:
 3644 0644 55534246 		.ascii	"USBFS_1_lastPacketSize\000"
 3644      535F315F 
 3644      6C617374 
 3644      5061636B 
 3644      65745369 
 3645              	.LASF58:
 3646 065b 55534246 		.ascii	"USBFS_1_GetInterfaceSetting\000"
 3646      535F315F 
 3646      47657449 
 3646      6E746572 
 3646      66616365 
 3647              	.LASF53:
 3648 0677 55534246 		.ascii	"USBFS_1_ReInitComponent\000"
 3648      535F315F 
 3648      5265496E 
 3648      6974436F 
 3648      6D706F6E 
 3649              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
