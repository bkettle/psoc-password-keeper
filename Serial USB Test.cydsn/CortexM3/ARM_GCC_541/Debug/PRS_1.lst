ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PRS_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PRS_1_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PRS_1_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PRS_1_Enable, %function
  25              	PRS_1_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\PRS_1.c"
   1:Generated_Source\PSoC5/PRS_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PRS_1.c **** * File Name: PRS_1.c
   3:Generated_Source\PSoC5/PRS_1.c **** * Version 2.40
   4:Generated_Source\PSoC5/PRS_1.c **** *
   5:Generated_Source\PSoC5/PRS_1.c **** * Description:
   6:Generated_Source\PSoC5/PRS_1.c **** *  This file provides the source code to the API for the PRS component
   7:Generated_Source\PSoC5/PRS_1.c **** *
   8:Generated_Source\PSoC5/PRS_1.c **** * Note:
   9:Generated_Source\PSoC5/PRS_1.c **** *  None
  10:Generated_Source\PSoC5/PRS_1.c **** *
  11:Generated_Source\PSoC5/PRS_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/PRS_1.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/PRS_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/PRS_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/PRS_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/PRS_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/PRS_1.c **** 
  18:Generated_Source\PSoC5/PRS_1.c **** #include "PRS_1.h"
  19:Generated_Source\PSoC5/PRS_1.c **** 
  20:Generated_Source\PSoC5/PRS_1.c **** uint8 PRS_1_initVar = 0u;
  21:Generated_Source\PSoC5/PRS_1.c **** 
  22:Generated_Source\PSoC5/PRS_1.c **** PRS_1_BACKUP_STRUCT PRS_1_backup =
  23:Generated_Source\PSoC5/PRS_1.c **** {
  24:Generated_Source\PSoC5/PRS_1.c ****     0x00u, /* enableState; */
  25:Generated_Source\PSoC5/PRS_1.c **** 
  26:Generated_Source\PSoC5/PRS_1.c ****     #if (PRS_1_WAKEUP_BEHAVIOUR == PRS_1__RESUMEWORK)
  27:Generated_Source\PSoC5/PRS_1.c ****         /* Save dff register for time mult */
  28:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_TIME_MULTIPLEXING_ENABLE)
  29:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_INIT_STATE, /* dffStatus; */
  30:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End PRS_1_TIME_MULTIPLEXING_ENABLE */
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 2


  31:Generated_Source\PSoC5/PRS_1.c **** 
  32:Generated_Source\PSoC5/PRS_1.c ****         /* Save A0 and A1 registers are none-retention */
  33:Generated_Source\PSoC5/PRS_1.c ****         #if(PRS_1_PRS_SIZE <= 32u)
  34:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_DEFAULT_SEED, /* seed */
  35:Generated_Source\PSoC5/PRS_1.c **** 
  36:Generated_Source\PSoC5/PRS_1.c ****         #else
  37:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_DEFAULT_SEED_UPPER, /* seedUpper; */
  38:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_DEFAULT_SEED_LOWER, /* seedLower; */
  39:Generated_Source\PSoC5/PRS_1.c **** 
  40:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
  41:Generated_Source\PSoC5/PRS_1.c **** 
  42:Generated_Source\PSoC5/PRS_1.c ****     #endif  /* End (PRS_1_WAKEUP_BEHAVIOUR == PRS_1__RESUMEWORK) */
  43:Generated_Source\PSoC5/PRS_1.c **** };
  44:Generated_Source\PSoC5/PRS_1.c **** 
  45:Generated_Source\PSoC5/PRS_1.c **** 
  46:Generated_Source\PSoC5/PRS_1.c **** /*******************************************************************************
  47:Generated_Source\PSoC5/PRS_1.c **** * Function Name: PRS_1_Init
  48:Generated_Source\PSoC5/PRS_1.c **** ********************************************************************************
  49:Generated_Source\PSoC5/PRS_1.c **** *
  50:Generated_Source\PSoC5/PRS_1.c **** * Summary:
  51:Generated_Source\PSoC5/PRS_1.c **** *  Initializes seed and polynomial registers with initial values.
  52:Generated_Source\PSoC5/PRS_1.c **** *
  53:Generated_Source\PSoC5/PRS_1.c **** * Parameters:
  54:Generated_Source\PSoC5/PRS_1.c **** *  void
  55:Generated_Source\PSoC5/PRS_1.c **** *
  56:Generated_Source\PSoC5/PRS_1.c **** * Return:
  57:Generated_Source\PSoC5/PRS_1.c **** *  void
  58:Generated_Source\PSoC5/PRS_1.c **** *
  59:Generated_Source\PSoC5/PRS_1.c **** *******************************************************************************/
  60:Generated_Source\PSoC5/PRS_1.c **** void PRS_1_Init(void) 
  61:Generated_Source\PSoC5/PRS_1.c **** {
  62:Generated_Source\PSoC5/PRS_1.c ****     /* Writes seed value and ponynom value provided for customizer */
  63:Generated_Source\PSoC5/PRS_1.c ****     #if (PRS_1_PRS_SIZE <= 32u)
  64:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_WritePolynomial(PRS_1_DEFAULT_POLYNOM);
  65:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_WriteSeed(PRS_1_DEFAULT_SEED);
  66:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_RUN_MODE == PRS_1__CLOCKED)
  67:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_ResetSeedInit(PRS_1_DEFAULT_SEED);
  68:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End (PRS_1_RUN_MODE == PRS_1__CLOCKED) */
  69:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_Enable();
  70:Generated_Source\PSoC5/PRS_1.c ****     #else
  71:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_WritePolynomialUpper(PRS_1_DEFAULT_POLYNOM_UPPER);
  72:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_WritePolynomialLower(PRS_1_DEFAULT_POLYNOM_LOWER);
  73:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_WriteSeedUpper(PRS_1_DEFAULT_SEED_UPPER);
  74:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_WriteSeedLower(PRS_1_DEFAULT_SEED_LOWER);
  75:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_RUN_MODE == PRS_1__CLOCKED)
  76:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_ResetSeedInitUpper(PRS_1_DEFAULT_SEED_UPPER);
  77:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_ResetSeedInitLower(PRS_1_DEFAULT_SEED_LOWER);
  78:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End (PRS_1_RUN_MODE == PRS_1__CLOCKED) */
  79:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_Enable();
  80:Generated_Source\PSoC5/PRS_1.c ****     #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
  81:Generated_Source\PSoC5/PRS_1.c **** }
  82:Generated_Source\PSoC5/PRS_1.c **** 
  83:Generated_Source\PSoC5/PRS_1.c **** 
  84:Generated_Source\PSoC5/PRS_1.c **** /*******************************************************************************
  85:Generated_Source\PSoC5/PRS_1.c **** * Function Name: PRS_1_Enable
  86:Generated_Source\PSoC5/PRS_1.c **** ********************************************************************************
  87:Generated_Source\PSoC5/PRS_1.c **** *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 3


  88:Generated_Source\PSoC5/PRS_1.c **** * Summary:
  89:Generated_Source\PSoC5/PRS_1.c **** *  Starts PRS computation on rising edge of input clock.
  90:Generated_Source\PSoC5/PRS_1.c **** *
  91:Generated_Source\PSoC5/PRS_1.c **** * Parameters:
  92:Generated_Source\PSoC5/PRS_1.c **** *  void
  93:Generated_Source\PSoC5/PRS_1.c **** *
  94:Generated_Source\PSoC5/PRS_1.c **** * Return:
  95:Generated_Source\PSoC5/PRS_1.c **** *  void
  96:Generated_Source\PSoC5/PRS_1.c **** *
  97:Generated_Source\PSoC5/PRS_1.c **** *******************************************************************************/
  98:Generated_Source\PSoC5/PRS_1.c **** void PRS_1_Enable(void) 
  99:Generated_Source\PSoC5/PRS_1.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_CONTROL_REG |= PRS_1_CTRL_ENABLE;
  33              		.loc 1 100 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00103 		orr	r3, r3, #1
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7B650040 		.word	1073767803
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	PRS_1_Enable, .-PRS_1_Enable
  46              		.section	.text.PRS_1_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PRS_1_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PRS_1_Stop, %function
  52              	PRS_1_Stop:
  53              	.LFB3:
 101:Generated_Source\PSoC5/PRS_1.c **** }
 102:Generated_Source\PSoC5/PRS_1.c **** 
 103:Generated_Source\PSoC5/PRS_1.c **** 
 104:Generated_Source\PSoC5/PRS_1.c **** /*******************************************************************************
 105:Generated_Source\PSoC5/PRS_1.c **** * Function Name: PRS_1_Start
 106:Generated_Source\PSoC5/PRS_1.c **** ********************************************************************************
 107:Generated_Source\PSoC5/PRS_1.c **** *
 108:Generated_Source\PSoC5/PRS_1.c **** * Summary:
 109:Generated_Source\PSoC5/PRS_1.c **** *  Initializes seed and polynomial registers with initial values. Computation
 110:Generated_Source\PSoC5/PRS_1.c **** *  of PRS starts on rising edge of input clock.
 111:Generated_Source\PSoC5/PRS_1.c **** *
 112:Generated_Source\PSoC5/PRS_1.c **** * Parameters:
 113:Generated_Source\PSoC5/PRS_1.c **** *  void
 114:Generated_Source\PSoC5/PRS_1.c **** *
 115:Generated_Source\PSoC5/PRS_1.c **** * Return:
 116:Generated_Source\PSoC5/PRS_1.c **** *  void
 117:Generated_Source\PSoC5/PRS_1.c **** *
 118:Generated_Source\PSoC5/PRS_1.c **** * Global variables:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 4


 119:Generated_Source\PSoC5/PRS_1.c **** *  PRS_1_initVar: global variable is used to indicate initial
 120:Generated_Source\PSoC5/PRS_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 121:Generated_Source\PSoC5/PRS_1.c **** *  to 1 the first time PRS_1_Start() is called. This allows
 122:Generated_Source\PSoC5/PRS_1.c **** *  enable/disable component without re-initialization in all subsequent calls
 123:Generated_Source\PSoC5/PRS_1.c **** *  to the PRS_1_Start() routine.
 124:Generated_Source\PSoC5/PRS_1.c **** *
 125:Generated_Source\PSoC5/PRS_1.c **** *******************************************************************************/
 126:Generated_Source\PSoC5/PRS_1.c **** void PRS_1_Start(void) 
 127:Generated_Source\PSoC5/PRS_1.c **** {
 128:Generated_Source\PSoC5/PRS_1.c ****     /* Writes seed value and ponynom value provided from customizer */
 129:Generated_Source\PSoC5/PRS_1.c ****     if (PRS_1_initVar == 0u)
 130:Generated_Source\PSoC5/PRS_1.c ****     {
 131:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_Init();
 132:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_initVar = 1u;
 133:Generated_Source\PSoC5/PRS_1.c ****     }
 134:Generated_Source\PSoC5/PRS_1.c **** 
 135:Generated_Source\PSoC5/PRS_1.c ****     PRS_1_Enable();
 136:Generated_Source\PSoC5/PRS_1.c **** }
 137:Generated_Source\PSoC5/PRS_1.c **** 
 138:Generated_Source\PSoC5/PRS_1.c **** 
 139:Generated_Source\PSoC5/PRS_1.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/PRS_1.c **** * Function Name: PRS_1_Stop
 141:Generated_Source\PSoC5/PRS_1.c **** ********************************************************************************
 142:Generated_Source\PSoC5/PRS_1.c **** *
 143:Generated_Source\PSoC5/PRS_1.c **** * Summary:
 144:Generated_Source\PSoC5/PRS_1.c **** *  Stops PRS computation.
 145:Generated_Source\PSoC5/PRS_1.c **** *
 146:Generated_Source\PSoC5/PRS_1.c **** * Parameters:
 147:Generated_Source\PSoC5/PRS_1.c **** *  void
 148:Generated_Source\PSoC5/PRS_1.c **** *
 149:Generated_Source\PSoC5/PRS_1.c **** * Return:
 150:Generated_Source\PSoC5/PRS_1.c **** *  void
 151:Generated_Source\PSoC5/PRS_1.c **** *
 152:Generated_Source\PSoC5/PRS_1.c **** *******************************************************************************/
 153:Generated_Source\PSoC5/PRS_1.c **** void PRS_1_Stop(void) 
 154:Generated_Source\PSoC5/PRS_1.c **** {
  54              		.loc 1 154 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 155:Generated_Source\PSoC5/PRS_1.c ****     PRS_1_CONTROL_REG &= ((uint8)~PRS_1_CTRL_ENABLE);
  59              		.loc 1 155 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F0FE03 		and	r3, r3, #254
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7B650040 		.word	1073767803
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PRS_1_Stop, .-PRS_1_Stop
  72              		.section	.text.PRS_1_Step,"ax",%progbits
  73              		.align	2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 5


  74              		.global	PRS_1_Step
  75              		.thumb
  76              		.thumb_func
  77              		.type	PRS_1_Step, %function
  78              	PRS_1_Step:
  79              	.LFB4:
 156:Generated_Source\PSoC5/PRS_1.c **** }
 157:Generated_Source\PSoC5/PRS_1.c **** 
 158:Generated_Source\PSoC5/PRS_1.c **** 
 159:Generated_Source\PSoC5/PRS_1.c **** #if (PRS_1_RUN_MODE == PRS_1__APISINGLESTEP)
 160:Generated_Source\PSoC5/PRS_1.c ****     /*******************************************************************************
 161:Generated_Source\PSoC5/PRS_1.c ****     * FUNCTION NAME: PRS_1_Step
 162:Generated_Source\PSoC5/PRS_1.c ****     ********************************************************************************
 163:Generated_Source\PSoC5/PRS_1.c ****     *
 164:Generated_Source\PSoC5/PRS_1.c ****     * Summary:
 165:Generated_Source\PSoC5/PRS_1.c ****     *  Increments the PRS by one when API single step mode is used.
 166:Generated_Source\PSoC5/PRS_1.c ****     *
 167:Generated_Source\PSoC5/PRS_1.c ****     * Parameters:
 168:Generated_Source\PSoC5/PRS_1.c ****     *  void
 169:Generated_Source\PSoC5/PRS_1.c ****     *
 170:Generated_Source\PSoC5/PRS_1.c ****     * Return:
 171:Generated_Source\PSoC5/PRS_1.c ****     *  void
 172:Generated_Source\PSoC5/PRS_1.c ****     *
 173:Generated_Source\PSoC5/PRS_1.c ****     *******************************************************************************/
 174:Generated_Source\PSoC5/PRS_1.c ****     void PRS_1_Step(void) 
 175:Generated_Source\PSoC5/PRS_1.c ****     {
  80              		.loc 1 175 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
 176:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_TIME_MULTIPLEXING_ENABLE)
 177:Generated_Source\PSoC5/PRS_1.c ****             /* Makes 4 pulse, 4x for Time Mult */
 178:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_EXECUTE_STEP;
 179:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_EXECUTE_STEP;
 180:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_EXECUTE_STEP;
 181:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_EXECUTE_STEP;
 182:Generated_Source\PSoC5/PRS_1.c **** 
 183:Generated_Source\PSoC5/PRS_1.c ****         #else
 184:Generated_Source\PSoC5/PRS_1.c ****             /* One pulse without Time mult required */
 185:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_EXECUTE_STEP;
  85              		.loc 1 185 0
  86 0000 044B     		ldr	r3, .L8
  87 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  88 0004 42F00202 		orr	r2, r2, #2
  89 0008 1A70     		strb	r2, [r3]
  90 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  91 000c 02F0FD02 		and	r2, r2, #253
  92 0010 1A70     		strb	r2, [r3]
  93 0012 7047     		bx	lr
  94              	.L9:
  95              		.align	2
  96              	.L8:
  97 0014 7B650040 		.word	1073767803
  98              		.cfi_endproc
  99              	.LFE4:
 100              		.size	PRS_1_Step, .-PRS_1_Step
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 6


 101              		.section	.text.PRS_1_Read,"ax",%progbits
 102              		.align	2
 103              		.global	PRS_1_Read
 104              		.thumb
 105              		.thumb_func
 106              		.type	PRS_1_Read, %function
 107              	PRS_1_Read:
 108              	.LFB5:
 186:Generated_Source\PSoC5/PRS_1.c **** 
 187:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End PRS_1_TIME_MULTIPLEXING_ENABLE */
 188:Generated_Source\PSoC5/PRS_1.c ****     }
 189:Generated_Source\PSoC5/PRS_1.c **** #endif  /* End (PRS_1_RUN_MODE == PRS_1__APISINGLESTEP) */
 190:Generated_Source\PSoC5/PRS_1.c **** 
 191:Generated_Source\PSoC5/PRS_1.c **** 
 192:Generated_Source\PSoC5/PRS_1.c **** #if (PRS_1_RUN_MODE == PRS_1__CLOCKED)
 193:Generated_Source\PSoC5/PRS_1.c ****     #if (PRS_1_PRS_SIZE <= 32u) /* 8-32 bits PRS */
 194:Generated_Source\PSoC5/PRS_1.c ****         /*******************************************************************************
 195:Generated_Source\PSoC5/PRS_1.c ****         * FUNCTION NAME: PRS_1_ResetSeedInit
 196:Generated_Source\PSoC5/PRS_1.c ****         ********************************************************************************
 197:Generated_Source\PSoC5/PRS_1.c ****         *
 198:Generated_Source\PSoC5/PRS_1.c ****         * Summary:
 199:Generated_Source\PSoC5/PRS_1.c ****         *  Increments the PRS by one when API single step mode is used.
 200:Generated_Source\PSoC5/PRS_1.c ****         *
 201:Generated_Source\PSoC5/PRS_1.c ****         * Parameters:
 202:Generated_Source\PSoC5/PRS_1.c ****         *  void
 203:Generated_Source\PSoC5/PRS_1.c ****         *
 204:Generated_Source\PSoC5/PRS_1.c ****         * Return:
 205:Generated_Source\PSoC5/PRS_1.c ****         *  void
 206:Generated_Source\PSoC5/PRS_1.c ****         *
 207:Generated_Source\PSoC5/PRS_1.c ****         *******************************************************************************/
 208:Generated_Source\PSoC5/PRS_1.c ****         void PRS_1_ResetSeedInit(uint16 seed)
 209:Generated_Source\PSoC5/PRS_1.c ****                                             
 210:Generated_Source\PSoC5/PRS_1.c ****         {
 211:Generated_Source\PSoC5/PRS_1.c ****             uint8 enableInterrupts;
 212:Generated_Source\PSoC5/PRS_1.c **** 
 213:Generated_Source\PSoC5/PRS_1.c ****             /* Mask the Seed to cut unused bits */
 214:Generated_Source\PSoC5/PRS_1.c ****             seed &= PRS_1_MASK;
 215:Generated_Source\PSoC5/PRS_1.c **** 
 216:Generated_Source\PSoC5/PRS_1.c ****             /* Change AuxControl reg, need to be safety */
 217:Generated_Source\PSoC5/PRS_1.c ****             enableInterrupts = CyEnterCriticalSection();
 218:Generated_Source\PSoC5/PRS_1.c **** 
 219:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_TIME_MULTIPLEXING_ENABLE)
 220:Generated_Source\PSoC5/PRS_1.c ****                 /* Set FIFOs to single register */
 221:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_AUX_CONTROL_A_REG |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 222:Generated_Source\PSoC5/PRS_1.c **** 
 223:Generated_Source\PSoC5/PRS_1.c ****                 #if(PRS_1_PRS_SIZE > 16u)       /* 17-32 bits PRS */
 224:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_B_REG |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 225:Generated_Source\PSoC5/PRS_1.c ****                 #endif  /* End (PRS_1_PRS_SIZE <= 8u) */
 226:Generated_Source\PSoC5/PRS_1.c **** 
 227:Generated_Source\PSoC5/PRS_1.c ****                 /* AuxControl reg settings are done */
 228:Generated_Source\PSoC5/PRS_1.c ****                 CyExitCriticalSection(enableInterrupts);
 229:Generated_Source\PSoC5/PRS_1.c **** 
 230:Generated_Source\PSoC5/PRS_1.c ****                 /* Write Seed COPY */
 231:Generated_Source\PSoC5/PRS_1.c ****                 #if (PRS_1_PRS_SIZE <= 16u)          /* 16 bits PRS */
 232:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_A__A1_REG = HI8(seed);
 233:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_A__A0_REG = LO8(seed);
 234:Generated_Source\PSoC5/PRS_1.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 7


 235:Generated_Source\PSoC5/PRS_1.c ****                 #elif (PRS_1_PRS_SIZE <= 24u)        /* 24 bits PRS */
 236:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_B__A1_REG = LO8(HI16(seed));
 237:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_B__A0_REG = HI8(seed);
 238:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_A__A0_REG = LO8(seed);
 239:Generated_Source\PSoC5/PRS_1.c **** 
 240:Generated_Source\PSoC5/PRS_1.c ****                 #else                                           /* 32 bits PRS */
 241:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_B__A1_REG = HI8(HI16(seed));
 242:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_A__A1_REG = LO8(HI16(seed));
 243:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_B__A0_REG = HI8(seed);
 244:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_SEED_COPY_A__A0_REG = LO8(seed);
 245:Generated_Source\PSoC5/PRS_1.c ****                 #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
 246:Generated_Source\PSoC5/PRS_1.c **** 
 247:Generated_Source\PSoC5/PRS_1.c ****             #else
 248:Generated_Source\PSoC5/PRS_1.c ****                 /* Set FIFOs to single register */
 249:Generated_Source\PSoC5/PRS_1.c ****                 #if (PRS_1_PRS_SIZE <= 8u)      /* 8 bits PRS */
 250:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_A_REG |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 251:Generated_Source\PSoC5/PRS_1.c **** 
 252:Generated_Source\PSoC5/PRS_1.c ****                 #elif (PRS_1_PRS_SIZE <= 16u)      /* 16 bits PRS */
 253:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_A_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 254:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_B_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 255:Generated_Source\PSoC5/PRS_1.c **** 
 256:Generated_Source\PSoC5/PRS_1.c ****                 #elif (PRS_1_PRS_SIZE <= 24u)      /* 24-39 bits PRS */
 257:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_A_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 258:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_B_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 259:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_C_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 260:Generated_Source\PSoC5/PRS_1.c **** 
 261:Generated_Source\PSoC5/PRS_1.c ****                 #elif (PRS_1_PRS_SIZE <= 32u)      /* 40-55 bits PRS */
 262:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_A_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 263:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_B_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 264:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_C_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 265:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_AUX_CONTROL_D_REG  |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 266:Generated_Source\PSoC5/PRS_1.c **** 
 267:Generated_Source\PSoC5/PRS_1.c ****                 #endif  /* End (PRS_1_PRS_SIZE <= 8u) */
 268:Generated_Source\PSoC5/PRS_1.c **** 
 269:Generated_Source\PSoC5/PRS_1.c ****                 /* AuxControl reg setting are done */
 270:Generated_Source\PSoC5/PRS_1.c ****                 CyExitCriticalSection(enableInterrupts);
 271:Generated_Source\PSoC5/PRS_1.c **** 
 272:Generated_Source\PSoC5/PRS_1.c ****                 /* Write Seed COPY */
 273:Generated_Source\PSoC5/PRS_1.c ****                 CY_SET_REG16(PRS_1_SEED_COPY_PTR, seed);
 274:Generated_Source\PSoC5/PRS_1.c **** 
 275:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_TIME_MULTIPLEXING_ENABLE) */
 276:Generated_Source\PSoC5/PRS_1.c ****         }
 277:Generated_Source\PSoC5/PRS_1.c **** 
 278:Generated_Source\PSoC5/PRS_1.c ****     #else
 279:Generated_Source\PSoC5/PRS_1.c **** 
 280:Generated_Source\PSoC5/PRS_1.c ****         /*******************************************************************************
 281:Generated_Source\PSoC5/PRS_1.c ****         * FUNCTION NAME: PRS_1_ResetSeedInitUpper
 282:Generated_Source\PSoC5/PRS_1.c ****         ********************************************************************************
 283:Generated_Source\PSoC5/PRS_1.c ****         *
 284:Generated_Source\PSoC5/PRS_1.c ****         * Summary:
 285:Generated_Source\PSoC5/PRS_1.c ****         *  Increments the PRS by one when API single step mode is used.
 286:Generated_Source\PSoC5/PRS_1.c ****         *
 287:Generated_Source\PSoC5/PRS_1.c ****         * Parameters:
 288:Generated_Source\PSoC5/PRS_1.c ****         *  void
 289:Generated_Source\PSoC5/PRS_1.c ****         *
 290:Generated_Source\PSoC5/PRS_1.c ****         * Return:
 291:Generated_Source\PSoC5/PRS_1.c ****         *  void
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 8


 292:Generated_Source\PSoC5/PRS_1.c ****         *
 293:Generated_Source\PSoC5/PRS_1.c ****         *******************************************************************************/
 294:Generated_Source\PSoC5/PRS_1.c ****         void PRS_1_ResetSeedInitUpper(uint32 seed) 
 295:Generated_Source\PSoC5/PRS_1.c ****         {
 296:Generated_Source\PSoC5/PRS_1.c **** 			uint8 enableInterrupts;
 297:Generated_Source\PSoC5/PRS_1.c **** 
 298:Generated_Source\PSoC5/PRS_1.c **** 			/* Mask the Seed Upper half to cut unused bits */
 299:Generated_Source\PSoC5/PRS_1.c ****             seed &= PRS_1_MASK;
 300:Generated_Source\PSoC5/PRS_1.c **** 
 301:Generated_Source\PSoC5/PRS_1.c **** 			/* Change AuxControl reg, need to be safety */
 302:Generated_Source\PSoC5/PRS_1.c ****             enableInterrupts = CyEnterCriticalSection();
 303:Generated_Source\PSoC5/PRS_1.c **** 
 304:Generated_Source\PSoC5/PRS_1.c ****             /* Set FIFOs to single register */
 305:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_AUX_CONTROL_A_REG |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 306:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_AUX_CONTROL_B_REG |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 307:Generated_Source\PSoC5/PRS_1.c ****             PRS_1_AUX_CONTROL_C_REG |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 308:Generated_Source\PSoC5/PRS_1.c **** 
 309:Generated_Source\PSoC5/PRS_1.c **** 			#if (PRS_1_PRS_SIZE > 48u)               /* 49-64 bits PRS */
 310:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_AUX_CONTROL_D_REG |= PRS_1_AUXCTRL_FIFO_SINGLE_REG;
 311:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_PRS_SIZE <= 8u) */
 312:Generated_Source\PSoC5/PRS_1.c **** 
 313:Generated_Source\PSoC5/PRS_1.c ****             /* AuxControl reg settings are done */
 314:Generated_Source\PSoC5/PRS_1.c ****             CyExitCriticalSection(enableInterrupts);
 315:Generated_Source\PSoC5/PRS_1.c **** 
 316:Generated_Source\PSoC5/PRS_1.c ****             /* Write Seed Upper COPY */
 317:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_PRS_SIZE <= 40u)          /* 40 bits PRS */
 318:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_C__A1_REG = LO8(seed);
 319:Generated_Source\PSoC5/PRS_1.c **** 
 320:Generated_Source\PSoC5/PRS_1.c ****             #elif (PRS_1_PRS_SIZE <= 48u)        /* 48 bits PRS */
 321:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 322:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_B__A1_REG = LO8(seed);
 323:Generated_Source\PSoC5/PRS_1.c **** 
 324:Generated_Source\PSoC5/PRS_1.c ****             #elif (PRS_1_PRS_SIZE <= 56u)        /* 56 bits PRS */
 325:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_D__A1_REG = LO8(HI16(seed));
 326:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 327:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 328:Generated_Source\PSoC5/PRS_1.c **** 
 329:Generated_Source\PSoC5/PRS_1.c ****             #else                                           /* 64 bits PRS */
 330:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_D__A1_REG = HI8(HI16(seed));
 331:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_C__A1_REG = LO8(HI16(seed));
 332:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 333:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_UPPER_COPY_A__A1_REG = LO8(seed);
 334:Generated_Source\PSoC5/PRS_1.c **** 
 335:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
 336:Generated_Source\PSoC5/PRS_1.c ****         }
 337:Generated_Source\PSoC5/PRS_1.c **** 
 338:Generated_Source\PSoC5/PRS_1.c **** 
 339:Generated_Source\PSoC5/PRS_1.c ****         /*******************************************************************************
 340:Generated_Source\PSoC5/PRS_1.c ****         * FUNCTION NAME: PRS_1_ResetSeedInitLower
 341:Generated_Source\PSoC5/PRS_1.c ****         ********************************************************************************
 342:Generated_Source\PSoC5/PRS_1.c ****         *
 343:Generated_Source\PSoC5/PRS_1.c ****         * Summary:
 344:Generated_Source\PSoC5/PRS_1.c ****         *  Increments the PRS by one when API single step mode is used.
 345:Generated_Source\PSoC5/PRS_1.c ****         *
 346:Generated_Source\PSoC5/PRS_1.c ****         * Parameters:
 347:Generated_Source\PSoC5/PRS_1.c ****         *  void
 348:Generated_Source\PSoC5/PRS_1.c ****         *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 9


 349:Generated_Source\PSoC5/PRS_1.c ****         * Return:
 350:Generated_Source\PSoC5/PRS_1.c ****         *  void
 351:Generated_Source\PSoC5/PRS_1.c ****         *
 352:Generated_Source\PSoC5/PRS_1.c ****         *******************************************************************************/
 353:Generated_Source\PSoC5/PRS_1.c ****         void PRS_1_ResetSeedInitLower(uint32 seed) 
 354:Generated_Source\PSoC5/PRS_1.c ****         {
 355:Generated_Source\PSoC5/PRS_1.c ****             /* Write Seed Lower COPY */
 356:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_PRS_SIZE <= 40u)          /* 40 bits PRS */
 357:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_B__A1_REG = HI8(HI16(seed));
 358:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 359:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 360:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 361:Generated_Source\PSoC5/PRS_1.c **** 
 362:Generated_Source\PSoC5/PRS_1.c ****             #elif (PRS_1_PRS_SIZE <= 48u)        /* 48 bits PRS */
 363:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_A__A1_REG = HI8(HI16(seed));
 364:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 365:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 366:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 367:Generated_Source\PSoC5/PRS_1.c **** 
 368:Generated_Source\PSoC5/PRS_1.c ****             #else                                           /* 64 bits PRS */
 369:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_D__A0_REG = HI8(HI16(seed));
 370:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 371:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 372:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 373:Generated_Source\PSoC5/PRS_1.c **** 
 374:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
 375:Generated_Source\PSoC5/PRS_1.c ****         }
 376:Generated_Source\PSoC5/PRS_1.c **** 
 377:Generated_Source\PSoC5/PRS_1.c ****     #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
 378:Generated_Source\PSoC5/PRS_1.c **** 
 379:Generated_Source\PSoC5/PRS_1.c **** #endif  /* End (PRS_1_RUN_MODE == PRS_1__CLOCKED) */
 380:Generated_Source\PSoC5/PRS_1.c **** 
 381:Generated_Source\PSoC5/PRS_1.c **** 
 382:Generated_Source\PSoC5/PRS_1.c **** #if(PRS_1_PRS_SIZE <= 32u) /* 8-32 bits PRS */
 383:Generated_Source\PSoC5/PRS_1.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PRS_1.c ****     * Function Name: PRS_1_Read
 385:Generated_Source\PSoC5/PRS_1.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PRS_1.c ****     *
 387:Generated_Source\PSoC5/PRS_1.c ****     * Summary:
 388:Generated_Source\PSoC5/PRS_1.c ****     *  Reads PRS value.
 389:Generated_Source\PSoC5/PRS_1.c ****     *
 390:Generated_Source\PSoC5/PRS_1.c ****     * Parameters:
 391:Generated_Source\PSoC5/PRS_1.c ****     *  void
 392:Generated_Source\PSoC5/PRS_1.c ****     *
 393:Generated_Source\PSoC5/PRS_1.c ****     * Return:
 394:Generated_Source\PSoC5/PRS_1.c ****     *  Returns PRS value.
 395:Generated_Source\PSoC5/PRS_1.c ****     *
 396:Generated_Source\PSoC5/PRS_1.c ****     * Side Effects:
 397:Generated_Source\PSoC5/PRS_1.c ****     *  The seed value is cut according to mask = 2^(Resolution) - 1.
 398:Generated_Source\PSoC5/PRS_1.c ****     *  For example if PRS Resolution is 14 bits the mask value is:
 399:Generated_Source\PSoC5/PRS_1.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 400:Generated_Source\PSoC5/PRS_1.c ****     *  The seed value = 0xFFFFu is cut:
 401:Generated_Source\PSoC5/PRS_1.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 402:Generated_Source\PSoC5/PRS_1.c ****     *
 403:Generated_Source\PSoC5/PRS_1.c ****     *******************************************************************************/
 404:Generated_Source\PSoC5/PRS_1.c ****     uint16 PRS_1_Read(void) 
 405:Generated_Source\PSoC5/PRS_1.c ****     {
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 10


 109              		.loc 1 405 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 406:Generated_Source\PSoC5/PRS_1.c ****         /* Read PRS */
 407:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_TIME_MULTIPLEXING_ENABLE)
 408:Generated_Source\PSoC5/PRS_1.c **** 
 409:Generated_Source\PSoC5/PRS_1.c ****             uint16 seed;
 410:Generated_Source\PSoC5/PRS_1.c **** 
 411:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_PRS_SIZE <= 16u)          /* 16 bits PRS */
 412:Generated_Source\PSoC5/PRS_1.c ****                 seed = ((uint16) PRS_1_SEED_A__A1_REG) << 8u;
 413:Generated_Source\PSoC5/PRS_1.c ****                 seed |= PRS_1_SEED_A__A0_REG;
 414:Generated_Source\PSoC5/PRS_1.c **** 
 415:Generated_Source\PSoC5/PRS_1.c ****             #elif (PRS_1_PRS_SIZE <= 24u)        /* 24 bits PRS */
 416:Generated_Source\PSoC5/PRS_1.c ****                 seed = ((uint32) (PRS_1_SEED_B__A1_REG)) << 16u;
 417:Generated_Source\PSoC5/PRS_1.c ****                 seed |= ((uint32) (PRS_1_SEED_B__A0_REG)) << 8u;
 418:Generated_Source\PSoC5/PRS_1.c ****                 seed |= PRS_1_SEED_A__A0_REG;
 419:Generated_Source\PSoC5/PRS_1.c **** 
 420:Generated_Source\PSoC5/PRS_1.c ****             #else                                           /* 32 bits PRS */
 421:Generated_Source\PSoC5/PRS_1.c ****                 seed = ((uint32) PRS_1_SEED_B__A1_REG) << 24u;
 422:Generated_Source\PSoC5/PRS_1.c ****                 seed |= ((uint32) PRS_1_SEED_A__A1_REG) << 16u;
 423:Generated_Source\PSoC5/PRS_1.c ****                 seed |= ((uint32) PRS_1_SEED_B__A0_REG) << 8u;
 424:Generated_Source\PSoC5/PRS_1.c ****                 seed |= PRS_1_SEED_A__A0_REG;
 425:Generated_Source\PSoC5/PRS_1.c **** 
 426:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_PRS_SIZE <= 8u) */
 427:Generated_Source\PSoC5/PRS_1.c **** 
 428:Generated_Source\PSoC5/PRS_1.c ****             return (seed  & PRS_1_MASK);
 429:Generated_Source\PSoC5/PRS_1.c **** 
 430:Generated_Source\PSoC5/PRS_1.c ****         #else
 431:Generated_Source\PSoC5/PRS_1.c **** 
 432:Generated_Source\PSoC5/PRS_1.c ****             return (CY_GET_REG16(PRS_1_SEED_PTR) & PRS_1_MASK);
 114              		.loc 1 432 0
 115 0000 014B     		ldr	r3, .L11
 116 0002 1888     		ldrh	r0, [r3]
 433:Generated_Source\PSoC5/PRS_1.c **** 
 434:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End (PRS_1_TIME_MULTIPLEXING_ENABLE) */
 435:Generated_Source\PSoC5/PRS_1.c ****     }
 117              		.loc 1 435 0
 118 0004 80B2     		uxth	r0, r0
 119 0006 7047     		bx	lr
 120              	.L12:
 121              		.align	2
 122              	.L11:
 123 0008 0A650040 		.word	1073767690
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	PRS_1_Read, .-PRS_1_Read
 127              		.section	.text.PRS_1_WriteSeed,"ax",%progbits
 128              		.align	2
 129              		.global	PRS_1_WriteSeed
 130              		.thumb
 131              		.thumb_func
 132              		.type	PRS_1_WriteSeed, %function
 133              	PRS_1_WriteSeed:
 134              	.LFB6:
 436:Generated_Source\PSoC5/PRS_1.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 11


 437:Generated_Source\PSoC5/PRS_1.c **** 
 438:Generated_Source\PSoC5/PRS_1.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/PRS_1.c ****     * Function Name: PRS_1_WriteSeed
 440:Generated_Source\PSoC5/PRS_1.c ****     ********************************************************************************
 441:Generated_Source\PSoC5/PRS_1.c ****     *
 442:Generated_Source\PSoC5/PRS_1.c ****     * Summary:
 443:Generated_Source\PSoC5/PRS_1.c ****     *  Writes seed value.
 444:Generated_Source\PSoC5/PRS_1.c ****     *
 445:Generated_Source\PSoC5/PRS_1.c ****     * Parameters:
 446:Generated_Source\PSoC5/PRS_1.c ****     *  seed:  Seed value.
 447:Generated_Source\PSoC5/PRS_1.c ****     *
 448:Generated_Source\PSoC5/PRS_1.c ****     * Return:
 449:Generated_Source\PSoC5/PRS_1.c ****     *  void
 450:Generated_Source\PSoC5/PRS_1.c ****     *
 451:Generated_Source\PSoC5/PRS_1.c ****     * Side Effects:
 452:Generated_Source\PSoC5/PRS_1.c ****     *  The seed value is cut according to mask = 2^(Resolution) - 1.
 453:Generated_Source\PSoC5/PRS_1.c ****     *  For example if PRS Resolution is 14 bits the mask value is:
 454:Generated_Source\PSoC5/PRS_1.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 455:Generated_Source\PSoC5/PRS_1.c ****     *  The seed value = 0xFFFFu is cut:
 456:Generated_Source\PSoC5/PRS_1.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 457:Generated_Source\PSoC5/PRS_1.c ****     *
 458:Generated_Source\PSoC5/PRS_1.c ****     *******************************************************************************/
 459:Generated_Source\PSoC5/PRS_1.c ****     void PRS_1_WriteSeed(uint16 seed) 
 460:Generated_Source\PSoC5/PRS_1.c ****     {
 135              		.loc 1 460 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL0:
 461:Generated_Source\PSoC5/PRS_1.c ****         /* Masks the Seed to cut unused bits */
 462:Generated_Source\PSoC5/PRS_1.c ****         seed &= PRS_1_MASK;
 463:Generated_Source\PSoC5/PRS_1.c **** 
 464:Generated_Source\PSoC5/PRS_1.c ****         /* Writes Seed */
 465:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_TIME_MULTIPLEXING_ENABLE)
 466:Generated_Source\PSoC5/PRS_1.c **** 
 467:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_PRS_SIZE <= 16u)          /* 16 bits PRS */
 468:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_A__A1_REG = HI8(seed);
 469:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_A__A0_REG = LO8(seed);
 470:Generated_Source\PSoC5/PRS_1.c **** 
 471:Generated_Source\PSoC5/PRS_1.c ****             #elif (PRS_1_PRS_SIZE <= 24u)        /* 24 bits PRS */
 472:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_B__A1_REG = LO8(HI16(seed));
 473:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_B__A0_REG = HI8(seed);
 474:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_A__A0_REG = LO8(seed);
 475:Generated_Source\PSoC5/PRS_1.c **** 
 476:Generated_Source\PSoC5/PRS_1.c ****             #else                                           /* 32 bits PRS */
 477:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_B__A1_REG = HI8(HI16(seed));
 478:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_A__A1_REG = LO8(HI16(seed));
 479:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_B__A0_REG = HI8(seed);
 480:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_SEED_A__A0_REG = LO8(seed);
 481:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
 482:Generated_Source\PSoC5/PRS_1.c **** 
 483:Generated_Source\PSoC5/PRS_1.c ****             /* Resets triggers */
 484:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_WAKEUP_BEHAVIOUR == PRS_1__RESUMEWORK)
 485:Generated_Source\PSoC5/PRS_1.c ****                 if((PRS_1_sleepState & PRS_1_NORMAL_SEQUENCE) != 0u)
 486:Generated_Source\PSoC5/PRS_1.c ****                 {
 487:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_EXECUTE_DFF_RESET;
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 12


 488:Generated_Source\PSoC5/PRS_1.c ****                 }
 489:Generated_Source\PSoC5/PRS_1.c ****             #else
 490:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_EXECUTE_DFF_RESET;
 491:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* (PRS_1_WAKEUP_BEHAVIOUR == PRS_1__RESUMEWORK) */
 492:Generated_Source\PSoC5/PRS_1.c **** 
 493:Generated_Source\PSoC5/PRS_1.c ****         #else
 494:Generated_Source\PSoC5/PRS_1.c **** 
 495:Generated_Source\PSoC5/PRS_1.c ****             CY_SET_REG16(PRS_1_SEED_PTR, seed);
 141              		.loc 1 495 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 0A650040 		.word	1073767690
 149              		.cfi_endproc
 150              	.LFE6:
 151              		.size	PRS_1_WriteSeed, .-PRS_1_WriteSeed
 152              		.section	.text.PRS_1_ReadPolynomial,"ax",%progbits
 153              		.align	2
 154              		.global	PRS_1_ReadPolynomial
 155              		.thumb
 156              		.thumb_func
 157              		.type	PRS_1_ReadPolynomial, %function
 158              	PRS_1_ReadPolynomial:
 159              	.LFB7:
 496:Generated_Source\PSoC5/PRS_1.c **** 
 497:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End (PRS_1_TIME_MULTIPLEXING_ENABLE) */
 498:Generated_Source\PSoC5/PRS_1.c ****     }
 499:Generated_Source\PSoC5/PRS_1.c **** 
 500:Generated_Source\PSoC5/PRS_1.c **** 
 501:Generated_Source\PSoC5/PRS_1.c ****     /*******************************************************************************
 502:Generated_Source\PSoC5/PRS_1.c ****     * Function Name: PRS_1_ReadPolynomial
 503:Generated_Source\PSoC5/PRS_1.c ****     ********************************************************************************
 504:Generated_Source\PSoC5/PRS_1.c ****     *
 505:Generated_Source\PSoC5/PRS_1.c ****     * Summary:
 506:Generated_Source\PSoC5/PRS_1.c ****     *  Reads PRS polynomial value.
 507:Generated_Source\PSoC5/PRS_1.c ****     *
 508:Generated_Source\PSoC5/PRS_1.c ****     * Parameters:
 509:Generated_Source\PSoC5/PRS_1.c ****     *  void
 510:Generated_Source\PSoC5/PRS_1.c ****     *
 511:Generated_Source\PSoC5/PRS_1.c ****     * Return:
 512:Generated_Source\PSoC5/PRS_1.c ****     *  Returns PRS polynomial value.
 513:Generated_Source\PSoC5/PRS_1.c ****     *
 514:Generated_Source\PSoC5/PRS_1.c ****     *******************************************************************************/
 515:Generated_Source\PSoC5/PRS_1.c ****     uint16 PRS_1_ReadPolynomial(void)
 516:Generated_Source\PSoC5/PRS_1.c ****                                 
 517:Generated_Source\PSoC5/PRS_1.c ****     {
 160              		.loc 1 517 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 518:Generated_Source\PSoC5/PRS_1.c ****         /* Reads polynomial */
 519:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_TIME_MULTIPLEXING_ENABLE)
 520:Generated_Source\PSoC5/PRS_1.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 13


 521:Generated_Source\PSoC5/PRS_1.c ****             uint16 polynomial;
 522:Generated_Source\PSoC5/PRS_1.c **** 
 523:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_PRS_SIZE <= 16u)          /* 16 bits PRS */
 524:Generated_Source\PSoC5/PRS_1.c ****                 polynomial = ((uint16) PRS_1_POLYNOM_A__D1_REG) << 8u;
 525:Generated_Source\PSoC5/PRS_1.c ****                 polynomial |= (PRS_1_POLYNOM_A__D0_REG);
 526:Generated_Source\PSoC5/PRS_1.c **** 
 527:Generated_Source\PSoC5/PRS_1.c ****             #elif (PRS_1_PRS_SIZE <= 24u)        /* 24 bits PRS */
 528:Generated_Source\PSoC5/PRS_1.c ****                 polynomial = ((uint32) PRS_1_POLYNOM_B__D1_REG) << 16u;
 529:Generated_Source\PSoC5/PRS_1.c ****                 polynomial |= ((uint32) PRS_1_POLYNOM_B__D0_REG) << 8u;
 530:Generated_Source\PSoC5/PRS_1.c ****                 polynomial |= PRS_1_POLYNOM_A__D0_REG;
 531:Generated_Source\PSoC5/PRS_1.c **** 
 532:Generated_Source\PSoC5/PRS_1.c ****             #else                                           /* 32 bits PRS */
 533:Generated_Source\PSoC5/PRS_1.c ****                 polynomial = ((uint32) PRS_1_POLYNOM_B__D1_REG) << 24u;
 534:Generated_Source\PSoC5/PRS_1.c ****                 polynomial |= ((uint32) PRS_1_POLYNOM_A__D1_REG) << 16u;
 535:Generated_Source\PSoC5/PRS_1.c ****                 polynomial |= ((uint32) PRS_1_POLYNOM_B__D0_REG) << 8u;
 536:Generated_Source\PSoC5/PRS_1.c ****                 polynomial |= PRS_1_POLYNOM_A__D0_REG;
 537:Generated_Source\PSoC5/PRS_1.c **** 
 538:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
 539:Generated_Source\PSoC5/PRS_1.c **** 
 540:Generated_Source\PSoC5/PRS_1.c ****             return polynomial;
 541:Generated_Source\PSoC5/PRS_1.c **** 
 542:Generated_Source\PSoC5/PRS_1.c ****         #else
 543:Generated_Source\PSoC5/PRS_1.c **** 
 544:Generated_Source\PSoC5/PRS_1.c ****             return CY_GET_REG16(PRS_1_POLYNOM_PTR);
 165              		.loc 1 544 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1888     		ldrh	r0, [r3]
 545:Generated_Source\PSoC5/PRS_1.c **** 
 546:Generated_Source\PSoC5/PRS_1.c ****         #endif  /* End (PRS_1_TIME_MULTIPLEXING_ENABLE) */
 547:Generated_Source\PSoC5/PRS_1.c ****     }
 168              		.loc 1 547 0
 169 0004 80B2     		uxth	r0, r0
 170 0006 7047     		bx	lr
 171              	.L18:
 172              		.align	2
 173              	.L17:
 174 0008 2A650040 		.word	1073767722
 175              		.cfi_endproc
 176              	.LFE7:
 177              		.size	PRS_1_ReadPolynomial, .-PRS_1_ReadPolynomial
 178              		.section	.text.PRS_1_WritePolynomial,"ax",%progbits
 179              		.align	2
 180              		.global	PRS_1_WritePolynomial
 181              		.thumb
 182              		.thumb_func
 183              		.type	PRS_1_WritePolynomial, %function
 184              	PRS_1_WritePolynomial:
 185              	.LFB8:
 548:Generated_Source\PSoC5/PRS_1.c **** 
 549:Generated_Source\PSoC5/PRS_1.c **** 
 550:Generated_Source\PSoC5/PRS_1.c ****     /*******************************************************************************
 551:Generated_Source\PSoC5/PRS_1.c ****     * Function Name: PRS_1_WritePolynomial
 552:Generated_Source\PSoC5/PRS_1.c ****     ********************************************************************************
 553:Generated_Source\PSoC5/PRS_1.c ****     *
 554:Generated_Source\PSoC5/PRS_1.c ****     * Summary:
 555:Generated_Source\PSoC5/PRS_1.c ****     *  Writes PRS polynomial value.
 556:Generated_Source\PSoC5/PRS_1.c ****     *
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 14


 557:Generated_Source\PSoC5/PRS_1.c ****     * Parameters:
 558:Generated_Source\PSoC5/PRS_1.c ****     *  polynomial:  PRS polynomial.
 559:Generated_Source\PSoC5/PRS_1.c ****     *
 560:Generated_Source\PSoC5/PRS_1.c ****     * Return:
 561:Generated_Source\PSoC5/PRS_1.c ****     *  void
 562:Generated_Source\PSoC5/PRS_1.c ****     *
 563:Generated_Source\PSoC5/PRS_1.c ****     * Side Effects:
 564:Generated_Source\PSoC5/PRS_1.c ****     *  The polynomial value is cut according to mask = 2^(Resolution) - 1.
 565:Generated_Source\PSoC5/PRS_1.c ****     *  For example if PRS Resolution is 14 bits the mask value is:
 566:Generated_Source\PSoC5/PRS_1.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 567:Generated_Source\PSoC5/PRS_1.c ****     *  The polynomial value = 0xFFFFu is cut:
 568:Generated_Source\PSoC5/PRS_1.c ****     *  polynomial & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 569:Generated_Source\PSoC5/PRS_1.c ****     *
 570:Generated_Source\PSoC5/PRS_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC5/PRS_1.c ****     void PRS_1_WritePolynomial(uint16 polynomial)
 572:Generated_Source\PSoC5/PRS_1.c ****                                           
 573:Generated_Source\PSoC5/PRS_1.c ****     {
 186              		.loc 1 573 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL1:
 574:Generated_Source\PSoC5/PRS_1.c ****         /* Mask polynomial to cut unused bits */
 575:Generated_Source\PSoC5/PRS_1.c ****         polynomial &= PRS_1_MASK;
 576:Generated_Source\PSoC5/PRS_1.c **** 
 577:Generated_Source\PSoC5/PRS_1.c ****         /* Write polynomial */
 578:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_TIME_MULTIPLEXING_ENABLE)
 579:Generated_Source\PSoC5/PRS_1.c **** 
 580:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_PRS_SIZE <= 16u)          /* 16 bits PRS */
 581:Generated_Source\PSoC5/PRS_1.c **** 
 582:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_A__D1_REG = HI8(polynomial);
 583:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_A__D0_REG = LO8(polynomial);
 584:Generated_Source\PSoC5/PRS_1.c **** 
 585:Generated_Source\PSoC5/PRS_1.c ****             #elif (PRS_1_PRS_SIZE <= 24u)        /* 24 bits PRS */
 586:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_B__D1_REG = LO8(HI16(polynomial));
 587:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_B__D0_REG = HI8(polynomial);
 588:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_A__D0_REG = LO8(polynomial);
 589:Generated_Source\PSoC5/PRS_1.c **** 
 590:Generated_Source\PSoC5/PRS_1.c ****             #else                                           /* 32 bits PRS */
 591:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_B__D1_REG = HI8(HI16(polynomial));
 592:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_A__D1_REG = LO8(HI16(polynomial));
 593:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_B__D0_REG = HI8(polynomial);
 594:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_POLYNOM_A__D0_REG = LO8(polynomial);
 595:Generated_Source\PSoC5/PRS_1.c **** 
 596:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* End (PRS_1_PRS_SIZE <= 32u) */
 597:Generated_Source\PSoC5/PRS_1.c **** 
 598:Generated_Source\PSoC5/PRS_1.c ****             /* Resets triggers */
 599:Generated_Source\PSoC5/PRS_1.c ****             #if (PRS_1_WAKEUP_BEHAVIOUR == PRS_1__RESUMEWORK)
 600:Generated_Source\PSoC5/PRS_1.c ****                 if((PRS_1_sleepState & PRS_1_NORMAL_SEQUENCE) != 0u)
 601:Generated_Source\PSoC5/PRS_1.c ****                 {
 602:Generated_Source\PSoC5/PRS_1.c ****                     PRS_1_EXECUTE_DFF_RESET;
 603:Generated_Source\PSoC5/PRS_1.c ****                 }
 604:Generated_Source\PSoC5/PRS_1.c ****             #else
 605:Generated_Source\PSoC5/PRS_1.c ****                 PRS_1_EXECUTE_DFF_RESET;
 606:Generated_Source\PSoC5/PRS_1.c ****             #endif  /* (PRS_1_WAKEUP_BEHAVIOUR == PRS_1__RESUMEWORK) */
 607:Generated_Source\PSoC5/PRS_1.c **** 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 15


 608:Generated_Source\PSoC5/PRS_1.c ****         #else
 609:Generated_Source\PSoC5/PRS_1.c **** 
 610:Generated_Source\PSoC5/PRS_1.c ****             CY_SET_REG16(PRS_1_POLYNOM_PTR, polynomial);
 192              		.loc 1 610 0
 193 0000 014B     		ldr	r3, .L20
 194 0002 1880     		strh	r0, [r3]	@ movhi
 195 0004 7047     		bx	lr
 196              	.L21:
 197 0006 00BF     		.align	2
 198              	.L20:
 199 0008 2A650040 		.word	1073767722
 200              		.cfi_endproc
 201              	.LFE8:
 202              		.size	PRS_1_WritePolynomial, .-PRS_1_WritePolynomial
 203              		.section	.text.PRS_1_Init,"ax",%progbits
 204              		.align	2
 205              		.global	PRS_1_Init
 206              		.thumb
 207              		.thumb_func
 208              		.type	PRS_1_Init, %function
 209              	PRS_1_Init:
 210              	.LFB0:
  61:Generated_Source\PSoC5/PRS_1.c ****     /* Writes seed value and ponynom value provided for customizer */
 211              		.loc 1 61 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 08B5     		push	{r3, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 3, -8
 218              		.cfi_offset 14, -4
  64:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_WriteSeed(PRS_1_DEFAULT_SEED);
 219              		.loc 1 64 0
 220 0002 4FF43440 		mov	r0, #46080
 221 0006 FFF7FEFF 		bl	PRS_1_WritePolynomial
 222              	.LVL2:
  65:Generated_Source\PSoC5/PRS_1.c ****         #if (PRS_1_RUN_MODE == PRS_1__CLOCKED)
 223              		.loc 1 65 0
 224 000a 4FF6FF70 		movw	r0, #65535
 225 000e FFF7FEFF 		bl	PRS_1_WriteSeed
 226              	.LVL3:
  69:Generated_Source\PSoC5/PRS_1.c ****     #else
 227              		.loc 1 69 0
 228 0012 FFF7FEFF 		bl	PRS_1_Enable
 229              	.LVL4:
 230 0016 08BD     		pop	{r3, pc}
 231              		.cfi_endproc
 232              	.LFE0:
 233              		.size	PRS_1_Init, .-PRS_1_Init
 234              		.section	.text.PRS_1_Start,"ax",%progbits
 235              		.align	2
 236              		.global	PRS_1_Start
 237              		.thumb
 238              		.thumb_func
 239              		.type	PRS_1_Start, %function
 240              	PRS_1_Start:
 241              	.LFB2:
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 16


 127:Generated_Source\PSoC5/PRS_1.c ****     /* Writes seed value and ponynom value provided from customizer */
 242              		.loc 1 127 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 08B5     		push	{r3, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 3, -8
 249              		.cfi_offset 14, -4
 129:Generated_Source\PSoC5/PRS_1.c ****     {
 250              		.loc 1 129 0
 251 0002 054B     		ldr	r3, .L27
 252 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0006 23B9     		cbnz	r3, .L25
 131:Generated_Source\PSoC5/PRS_1.c ****         PRS_1_initVar = 1u;
 254              		.loc 1 131 0
 255 0008 FFF7FEFF 		bl	PRS_1_Init
 256              	.LVL5:
 132:Generated_Source\PSoC5/PRS_1.c ****     }
 257              		.loc 1 132 0
 258 000c 0122     		movs	r2, #1
 259 000e 024B     		ldr	r3, .L27
 260 0010 1A70     		strb	r2, [r3]
 261              	.L25:
 135:Generated_Source\PSoC5/PRS_1.c **** }
 262              		.loc 1 135 0
 263 0012 FFF7FEFF 		bl	PRS_1_Enable
 264              	.LVL6:
 265 0016 08BD     		pop	{r3, pc}
 266              	.L28:
 267              		.align	2
 268              	.L27:
 269 0018 00000000 		.word	.LANCHOR0
 270              		.cfi_endproc
 271              	.LFE2:
 272              		.size	PRS_1_Start, .-PRS_1_Start
 273              		.global	PRS_1_backup
 274              		.global	PRS_1_initVar
 275              		.data
 276              		.align	2
 277              		.type	PRS_1_backup, %object
 278              		.size	PRS_1_backup, 4
 279              	PRS_1_backup:
 280 0000 00       		.byte	0
 281 0001 00       		.space	1
 282 0002 FFFF     		.short	-1
 283              		.bss
 284              		.set	.LANCHOR0,. + 0
 285              		.type	PRS_1_initVar, %object
 286              		.size	PRS_1_initVar, 1
 287              	PRS_1_initVar:
 288 0000 00       		.space	1
 289              		.text
 290              	.Letext0:
 291              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 292              		.file 3 "Generated_Source\\PSoC5\\PRS_1.h"
 293              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 17


 294              	.Ldebug_info0:
 295 0000 2C020000 		.4byte	0x22c
 296 0004 0400     		.2byte	0x4
 297 0006 00000000 		.4byte	.Ldebug_abbrev0
 298 000a 04       		.byte	0x4
 299 000b 01       		.uleb128 0x1
 300 000c C5000000 		.4byte	.LASF33
 301 0010 0C       		.byte	0xc
 302 0011 70010000 		.4byte	.LASF34
 303 0015 1E000000 		.4byte	.LASF35
 304 0019 00000000 		.4byte	.Ldebug_ranges0+0
 305 001d 00000000 		.4byte	0
 306 0021 00000000 		.4byte	.Ldebug_line0
 307 0025 02       		.uleb128 0x2
 308 0026 01       		.byte	0x1
 309 0027 06       		.byte	0x6
 310 0028 89020000 		.4byte	.LASF0
 311 002c 02       		.uleb128 0x2
 312 002d 01       		.byte	0x1
 313 002e 08       		.byte	0x8
 314 002f B7000000 		.4byte	.LASF1
 315 0033 02       		.uleb128 0x2
 316 0034 02       		.byte	0x2
 317 0035 05       		.byte	0x5
 318 0036 5A020000 		.4byte	.LASF2
 319 003a 02       		.uleb128 0x2
 320 003b 02       		.byte	0x2
 321 003c 07       		.byte	0x7
 322 003d 7E000000 		.4byte	.LASF3
 323 0041 02       		.uleb128 0x2
 324 0042 04       		.byte	0x4
 325 0043 05       		.byte	0x5
 326 0044 69020000 		.4byte	.LASF4
 327 0048 02       		.uleb128 0x2
 328 0049 04       		.byte	0x4
 329 004a 07       		.byte	0x7
 330 004b 58010000 		.4byte	.LASF5
 331 004f 02       		.uleb128 0x2
 332 0050 08       		.byte	0x8
 333 0051 05       		.byte	0x5
 334 0052 33020000 		.4byte	.LASF6
 335 0056 02       		.uleb128 0x2
 336 0057 08       		.byte	0x8
 337 0058 07       		.byte	0x7
 338 0059 EF010000 		.4byte	.LASF7
 339 005d 03       		.uleb128 0x3
 340 005e 04       		.byte	0x4
 341 005f 05       		.byte	0x5
 342 0060 696E7400 		.ascii	"int\000"
 343 0064 02       		.uleb128 0x2
 344 0065 04       		.byte	0x4
 345 0066 07       		.byte	0x7
 346 0067 CD010000 		.4byte	.LASF8
 347 006b 04       		.uleb128 0x4
 348 006c 6A010000 		.4byte	.LASF9
 349 0070 02       		.byte	0x2
 350 0071 E401     		.2byte	0x1e4
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 18


 351 0073 2C000000 		.4byte	0x2c
 352 0077 04       		.uleb128 0x4
 353 0078 AD010000 		.4byte	.LASF10
 354 007c 02       		.byte	0x2
 355 007d E501     		.2byte	0x1e5
 356 007f 3A000000 		.4byte	0x3a
 357 0083 02       		.uleb128 0x2
 358 0084 04       		.byte	0x4
 359 0085 04       		.byte	0x4
 360 0086 78000000 		.4byte	.LASF11
 361 008a 02       		.uleb128 0x2
 362 008b 08       		.byte	0x8
 363 008c 04       		.byte	0x4
 364 008d 9B010000 		.4byte	.LASF12
 365 0091 02       		.uleb128 0x2
 366 0092 01       		.byte	0x1
 367 0093 08       		.byte	0x8
 368 0094 41020000 		.4byte	.LASF13
 369 0098 04       		.uleb128 0x4
 370 0099 53010000 		.4byte	.LASF14
 371 009d 02       		.byte	0x2
 372 009e 8E02     		.2byte	0x28e
 373 00a0 A4000000 		.4byte	0xa4
 374 00a4 05       		.uleb128 0x5
 375 00a5 6B000000 		.4byte	0x6b
 376 00a9 04       		.uleb128 0x4
 377 00aa 00000000 		.4byte	.LASF15
 378 00ae 02       		.byte	0x2
 379 00af 8F02     		.2byte	0x28f
 380 00b1 B5000000 		.4byte	0xb5
 381 00b5 05       		.uleb128 0x5
 382 00b6 77000000 		.4byte	0x77
 383 00ba 02       		.uleb128 0x2
 384 00bb 08       		.byte	0x8
 385 00bc 04       		.byte	0x4
 386 00bd 11020000 		.4byte	.LASF16
 387 00c1 02       		.uleb128 0x2
 388 00c2 04       		.byte	0x4
 389 00c3 07       		.byte	0x7
 390 00c4 1D020000 		.4byte	.LASF17
 391 00c8 06       		.uleb128 0x6
 392 00c9 04       		.byte	0x4
 393 00ca 03       		.byte	0x3
 394 00cb 31       		.byte	0x31
 395 00cc E9000000 		.4byte	0xe9
 396 00d0 07       		.uleb128 0x7
 397 00d1 72020000 		.4byte	.LASF18
 398 00d5 03       		.byte	0x3
 399 00d6 33       		.byte	0x33
 400 00d7 6B000000 		.4byte	0x6b
 401 00db 00       		.byte	0
 402 00dc 07       		.uleb128 0x7
 403 00dd 64020000 		.4byte	.LASF19
 404 00e1 03       		.byte	0x3
 405 00e2 3D       		.byte	0x3d
 406 00e3 77000000 		.4byte	0x77
 407 00e7 02       		.byte	0x2
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 19


 408 00e8 00       		.byte	0
 409 00e9 08       		.uleb128 0x8
 410 00ea 46020000 		.4byte	.LASF20
 411 00ee 03       		.byte	0x3
 412 00ef 47       		.byte	0x47
 413 00f0 C8000000 		.4byte	0xc8
 414 00f4 09       		.uleb128 0x9
 415 00f5 26020000 		.4byte	.LASF21
 416 00f9 01       		.byte	0x1
 417 00fa 62       		.byte	0x62
 418 00fb 00000000 		.4byte	.LFB1
 419 00ff 10000000 		.4byte	.LFE1-.LFB1
 420 0103 01       		.uleb128 0x1
 421 0104 9C       		.byte	0x9c
 422 0105 09       		.uleb128 0x9
 423 0106 7E020000 		.4byte	.LASF22
 424 010a 01       		.byte	0x1
 425 010b 99       		.byte	0x99
 426 010c 00000000 		.4byte	.LFB3
 427 0110 10000000 		.4byte	.LFE3-.LFB3
 428 0114 01       		.uleb128 0x1
 429 0115 9C       		.byte	0x9c
 430 0116 09       		.uleb128 0x9
 431 0117 06020000 		.4byte	.LASF23
 432 011b 01       		.byte	0x1
 433 011c AE       		.byte	0xae
 434 011d 00000000 		.4byte	.LFB4
 435 0121 18000000 		.4byte	.LFE4-.LFB4
 436 0125 01       		.uleb128 0x1
 437 0126 9C       		.byte	0x9c
 438 0127 0A       		.uleb128 0xa
 439 0128 06000000 		.4byte	.LASF24
 440 012c 01       		.byte	0x1
 441 012d 9401     		.2byte	0x194
 442 012f 77000000 		.4byte	0x77
 443 0133 00000000 		.4byte	.LFB5
 444 0137 0C000000 		.4byte	.LFE5-.LFB5
 445 013b 01       		.uleb128 0x1
 446 013c 9C       		.byte	0x9c
 447 013d 0B       		.uleb128 0xb
 448 013e 91000000 		.4byte	.LASF26
 449 0142 01       		.byte	0x1
 450 0143 CB01     		.2byte	0x1cb
 451 0145 00000000 		.4byte	.LFB6
 452 0149 0C000000 		.4byte	.LFE6-.LFB6
 453 014d 01       		.uleb128 0x1
 454 014e 9C       		.byte	0x9c
 455 014f 62010000 		.4byte	0x162
 456 0153 0C       		.uleb128 0xc
 457 0154 64020000 		.4byte	.LASF19
 458 0158 01       		.byte	0x1
 459 0159 CB01     		.2byte	0x1cb
 460 015b 77000000 		.4byte	0x77
 461 015f 01       		.uleb128 0x1
 462 0160 50       		.byte	0x50
 463 0161 00       		.byte	0
 464 0162 0A       		.uleb128 0xa
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 20


 465 0163 DA010000 		.4byte	.LASF25
 466 0167 01       		.byte	0x1
 467 0168 0302     		.2byte	0x203
 468 016a 77000000 		.4byte	0x77
 469 016e 00000000 		.4byte	.LFB7
 470 0172 0C000000 		.4byte	.LFE7-.LFB7
 471 0176 01       		.uleb128 0x1
 472 0177 9C       		.byte	0x9c
 473 0178 0B       		.uleb128 0xb
 474 0179 A1000000 		.4byte	.LASF27
 475 017d 01       		.byte	0x1
 476 017e 3B02     		.2byte	0x23b
 477 0180 00000000 		.4byte	.LFB8
 478 0184 0C000000 		.4byte	.LFE8-.LFB8
 479 0188 01       		.uleb128 0x1
 480 0189 9C       		.byte	0x9c
 481 018a 9D010000 		.4byte	0x19d
 482 018e 0C       		.uleb128 0xc
 483 018f A2010000 		.4byte	.LASF28
 484 0193 01       		.byte	0x1
 485 0194 3B02     		.2byte	0x23b
 486 0196 77000000 		.4byte	0x77
 487 019a 01       		.uleb128 0x1
 488 019b 50       		.byte	0x50
 489 019c 00       		.byte	0
 490 019d 0D       		.uleb128 0xd
 491 019e C2010000 		.4byte	.LASF29
 492 01a2 01       		.byte	0x1
 493 01a3 3C       		.byte	0x3c
 494 01a4 00000000 		.4byte	.LFB0
 495 01a8 18000000 		.4byte	.LFE0-.LFB0
 496 01ac 01       		.uleb128 0x1
 497 01ad 9C       		.byte	0x9c
 498 01ae E5010000 		.4byte	0x1e5
 499 01b2 0E       		.uleb128 0xe
 500 01b3 0A000000 		.4byte	.LVL2
 501 01b7 78010000 		.4byte	0x178
 502 01bb C7010000 		.4byte	0x1c7
 503 01bf 0F       		.uleb128 0xf
 504 01c0 01       		.uleb128 0x1
 505 01c1 50       		.byte	0x50
 506 01c2 03       		.uleb128 0x3
 507 01c3 0B       		.byte	0xb
 508 01c4 00B4     		.2byte	0xb400
 509 01c6 00       		.byte	0
 510 01c7 0E       		.uleb128 0xe
 511 01c8 12000000 		.4byte	.LVL3
 512 01cc 3D010000 		.4byte	0x13d
 513 01d0 DB010000 		.4byte	0x1db
 514 01d4 0F       		.uleb128 0xf
 515 01d5 01       		.uleb128 0x1
 516 01d6 50       		.byte	0x50
 517 01d7 02       		.uleb128 0x2
 518 01d8 09       		.byte	0x9
 519 01d9 FF       		.byte	0xff
 520 01da 00       		.byte	0
 521 01db 10       		.uleb128 0x10
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 21


 522 01dc 16000000 		.4byte	.LVL4
 523 01e0 F4000000 		.4byte	0xf4
 524 01e4 00       		.byte	0
 525 01e5 0D       		.uleb128 0xd
 526 01e6 8F010000 		.4byte	.LASF30
 527 01ea 01       		.byte	0x1
 528 01eb 7E       		.byte	0x7e
 529 01ec 00000000 		.4byte	.LFB2
 530 01f0 1C000000 		.4byte	.LFE2-.LFB2
 531 01f4 01       		.uleb128 0x1
 532 01f5 9C       		.byte	0x9c
 533 01f6 0D020000 		.4byte	0x20d
 534 01fa 10       		.uleb128 0x10
 535 01fb 0C000000 		.4byte	.LVL5
 536 01ff 9D010000 		.4byte	0x19d
 537 0203 10       		.uleb128 0x10
 538 0204 16000000 		.4byte	.LVL6
 539 0208 F4000000 		.4byte	0xf4
 540 020c 00       		.byte	0
 541 020d 11       		.uleb128 0x11
 542 020e B4010000 		.4byte	.LASF31
 543 0212 01       		.byte	0x1
 544 0213 14       		.byte	0x14
 545 0214 6B000000 		.4byte	0x6b
 546 0218 05       		.uleb128 0x5
 547 0219 03       		.byte	0x3
 548 021a 00000000 		.4byte	PRS_1_initVar
 549 021e 11       		.uleb128 0x11
 550 021f 11000000 		.4byte	.LASF32
 551 0223 01       		.byte	0x1
 552 0224 16       		.byte	0x16
 553 0225 E9000000 		.4byte	0xe9
 554 0229 05       		.uleb128 0x5
 555 022a 03       		.byte	0x3
 556 022b 00000000 		.4byte	PRS_1_backup
 557 022f 00       		.byte	0
 558              		.section	.debug_abbrev,"",%progbits
 559              	.Ldebug_abbrev0:
 560 0000 01       		.uleb128 0x1
 561 0001 11       		.uleb128 0x11
 562 0002 01       		.byte	0x1
 563 0003 25       		.uleb128 0x25
 564 0004 0E       		.uleb128 0xe
 565 0005 13       		.uleb128 0x13
 566 0006 0B       		.uleb128 0xb
 567 0007 03       		.uleb128 0x3
 568 0008 0E       		.uleb128 0xe
 569 0009 1B       		.uleb128 0x1b
 570 000a 0E       		.uleb128 0xe
 571 000b 55       		.uleb128 0x55
 572 000c 17       		.uleb128 0x17
 573 000d 11       		.uleb128 0x11
 574 000e 01       		.uleb128 0x1
 575 000f 10       		.uleb128 0x10
 576 0010 17       		.uleb128 0x17
 577 0011 00       		.byte	0
 578 0012 00       		.byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 22


 579 0013 02       		.uleb128 0x2
 580 0014 24       		.uleb128 0x24
 581 0015 00       		.byte	0
 582 0016 0B       		.uleb128 0xb
 583 0017 0B       		.uleb128 0xb
 584 0018 3E       		.uleb128 0x3e
 585 0019 0B       		.uleb128 0xb
 586 001a 03       		.uleb128 0x3
 587 001b 0E       		.uleb128 0xe
 588 001c 00       		.byte	0
 589 001d 00       		.byte	0
 590 001e 03       		.uleb128 0x3
 591 001f 24       		.uleb128 0x24
 592 0020 00       		.byte	0
 593 0021 0B       		.uleb128 0xb
 594 0022 0B       		.uleb128 0xb
 595 0023 3E       		.uleb128 0x3e
 596 0024 0B       		.uleb128 0xb
 597 0025 03       		.uleb128 0x3
 598 0026 08       		.uleb128 0x8
 599 0027 00       		.byte	0
 600 0028 00       		.byte	0
 601 0029 04       		.uleb128 0x4
 602 002a 16       		.uleb128 0x16
 603 002b 00       		.byte	0
 604 002c 03       		.uleb128 0x3
 605 002d 0E       		.uleb128 0xe
 606 002e 3A       		.uleb128 0x3a
 607 002f 0B       		.uleb128 0xb
 608 0030 3B       		.uleb128 0x3b
 609 0031 05       		.uleb128 0x5
 610 0032 49       		.uleb128 0x49
 611 0033 13       		.uleb128 0x13
 612 0034 00       		.byte	0
 613 0035 00       		.byte	0
 614 0036 05       		.uleb128 0x5
 615 0037 35       		.uleb128 0x35
 616 0038 00       		.byte	0
 617 0039 49       		.uleb128 0x49
 618 003a 13       		.uleb128 0x13
 619 003b 00       		.byte	0
 620 003c 00       		.byte	0
 621 003d 06       		.uleb128 0x6
 622 003e 13       		.uleb128 0x13
 623 003f 01       		.byte	0x1
 624 0040 0B       		.uleb128 0xb
 625 0041 0B       		.uleb128 0xb
 626 0042 3A       		.uleb128 0x3a
 627 0043 0B       		.uleb128 0xb
 628 0044 3B       		.uleb128 0x3b
 629 0045 0B       		.uleb128 0xb
 630 0046 01       		.uleb128 0x1
 631 0047 13       		.uleb128 0x13
 632 0048 00       		.byte	0
 633 0049 00       		.byte	0
 634 004a 07       		.uleb128 0x7
 635 004b 0D       		.uleb128 0xd
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 23


 636 004c 00       		.byte	0
 637 004d 03       		.uleb128 0x3
 638 004e 0E       		.uleb128 0xe
 639 004f 3A       		.uleb128 0x3a
 640 0050 0B       		.uleb128 0xb
 641 0051 3B       		.uleb128 0x3b
 642 0052 0B       		.uleb128 0xb
 643 0053 49       		.uleb128 0x49
 644 0054 13       		.uleb128 0x13
 645 0055 38       		.uleb128 0x38
 646 0056 0B       		.uleb128 0xb
 647 0057 00       		.byte	0
 648 0058 00       		.byte	0
 649 0059 08       		.uleb128 0x8
 650 005a 16       		.uleb128 0x16
 651 005b 00       		.byte	0
 652 005c 03       		.uleb128 0x3
 653 005d 0E       		.uleb128 0xe
 654 005e 3A       		.uleb128 0x3a
 655 005f 0B       		.uleb128 0xb
 656 0060 3B       		.uleb128 0x3b
 657 0061 0B       		.uleb128 0xb
 658 0062 49       		.uleb128 0x49
 659 0063 13       		.uleb128 0x13
 660 0064 00       		.byte	0
 661 0065 00       		.byte	0
 662 0066 09       		.uleb128 0x9
 663 0067 2E       		.uleb128 0x2e
 664 0068 00       		.byte	0
 665 0069 3F       		.uleb128 0x3f
 666 006a 19       		.uleb128 0x19
 667 006b 03       		.uleb128 0x3
 668 006c 0E       		.uleb128 0xe
 669 006d 3A       		.uleb128 0x3a
 670 006e 0B       		.uleb128 0xb
 671 006f 3B       		.uleb128 0x3b
 672 0070 0B       		.uleb128 0xb
 673 0071 27       		.uleb128 0x27
 674 0072 19       		.uleb128 0x19
 675 0073 11       		.uleb128 0x11
 676 0074 01       		.uleb128 0x1
 677 0075 12       		.uleb128 0x12
 678 0076 06       		.uleb128 0x6
 679 0077 40       		.uleb128 0x40
 680 0078 18       		.uleb128 0x18
 681 0079 9742     		.uleb128 0x2117
 682 007b 19       		.uleb128 0x19
 683 007c 00       		.byte	0
 684 007d 00       		.byte	0
 685 007e 0A       		.uleb128 0xa
 686 007f 2E       		.uleb128 0x2e
 687 0080 00       		.byte	0
 688 0081 3F       		.uleb128 0x3f
 689 0082 19       		.uleb128 0x19
 690 0083 03       		.uleb128 0x3
 691 0084 0E       		.uleb128 0xe
 692 0085 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 24


 693 0086 0B       		.uleb128 0xb
 694 0087 3B       		.uleb128 0x3b
 695 0088 05       		.uleb128 0x5
 696 0089 27       		.uleb128 0x27
 697 008a 19       		.uleb128 0x19
 698 008b 49       		.uleb128 0x49
 699 008c 13       		.uleb128 0x13
 700 008d 11       		.uleb128 0x11
 701 008e 01       		.uleb128 0x1
 702 008f 12       		.uleb128 0x12
 703 0090 06       		.uleb128 0x6
 704 0091 40       		.uleb128 0x40
 705 0092 18       		.uleb128 0x18
 706 0093 9742     		.uleb128 0x2117
 707 0095 19       		.uleb128 0x19
 708 0096 00       		.byte	0
 709 0097 00       		.byte	0
 710 0098 0B       		.uleb128 0xb
 711 0099 2E       		.uleb128 0x2e
 712 009a 01       		.byte	0x1
 713 009b 3F       		.uleb128 0x3f
 714 009c 19       		.uleb128 0x19
 715 009d 03       		.uleb128 0x3
 716 009e 0E       		.uleb128 0xe
 717 009f 3A       		.uleb128 0x3a
 718 00a0 0B       		.uleb128 0xb
 719 00a1 3B       		.uleb128 0x3b
 720 00a2 05       		.uleb128 0x5
 721 00a3 27       		.uleb128 0x27
 722 00a4 19       		.uleb128 0x19
 723 00a5 11       		.uleb128 0x11
 724 00a6 01       		.uleb128 0x1
 725 00a7 12       		.uleb128 0x12
 726 00a8 06       		.uleb128 0x6
 727 00a9 40       		.uleb128 0x40
 728 00aa 18       		.uleb128 0x18
 729 00ab 9742     		.uleb128 0x2117
 730 00ad 19       		.uleb128 0x19
 731 00ae 01       		.uleb128 0x1
 732 00af 13       		.uleb128 0x13
 733 00b0 00       		.byte	0
 734 00b1 00       		.byte	0
 735 00b2 0C       		.uleb128 0xc
 736 00b3 05       		.uleb128 0x5
 737 00b4 00       		.byte	0
 738 00b5 03       		.uleb128 0x3
 739 00b6 0E       		.uleb128 0xe
 740 00b7 3A       		.uleb128 0x3a
 741 00b8 0B       		.uleb128 0xb
 742 00b9 3B       		.uleb128 0x3b
 743 00ba 05       		.uleb128 0x5
 744 00bb 49       		.uleb128 0x49
 745 00bc 13       		.uleb128 0x13
 746 00bd 02       		.uleb128 0x2
 747 00be 18       		.uleb128 0x18
 748 00bf 00       		.byte	0
 749 00c0 00       		.byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 25


 750 00c1 0D       		.uleb128 0xd
 751 00c2 2E       		.uleb128 0x2e
 752 00c3 01       		.byte	0x1
 753 00c4 3F       		.uleb128 0x3f
 754 00c5 19       		.uleb128 0x19
 755 00c6 03       		.uleb128 0x3
 756 00c7 0E       		.uleb128 0xe
 757 00c8 3A       		.uleb128 0x3a
 758 00c9 0B       		.uleb128 0xb
 759 00ca 3B       		.uleb128 0x3b
 760 00cb 0B       		.uleb128 0xb
 761 00cc 27       		.uleb128 0x27
 762 00cd 19       		.uleb128 0x19
 763 00ce 11       		.uleb128 0x11
 764 00cf 01       		.uleb128 0x1
 765 00d0 12       		.uleb128 0x12
 766 00d1 06       		.uleb128 0x6
 767 00d2 40       		.uleb128 0x40
 768 00d3 18       		.uleb128 0x18
 769 00d4 9742     		.uleb128 0x2117
 770 00d6 19       		.uleb128 0x19
 771 00d7 01       		.uleb128 0x1
 772 00d8 13       		.uleb128 0x13
 773 00d9 00       		.byte	0
 774 00da 00       		.byte	0
 775 00db 0E       		.uleb128 0xe
 776 00dc 898201   		.uleb128 0x4109
 777 00df 01       		.byte	0x1
 778 00e0 11       		.uleb128 0x11
 779 00e1 01       		.uleb128 0x1
 780 00e2 31       		.uleb128 0x31
 781 00e3 13       		.uleb128 0x13
 782 00e4 01       		.uleb128 0x1
 783 00e5 13       		.uleb128 0x13
 784 00e6 00       		.byte	0
 785 00e7 00       		.byte	0
 786 00e8 0F       		.uleb128 0xf
 787 00e9 8A8201   		.uleb128 0x410a
 788 00ec 00       		.byte	0
 789 00ed 02       		.uleb128 0x2
 790 00ee 18       		.uleb128 0x18
 791 00ef 9142     		.uleb128 0x2111
 792 00f1 18       		.uleb128 0x18
 793 00f2 00       		.byte	0
 794 00f3 00       		.byte	0
 795 00f4 10       		.uleb128 0x10
 796 00f5 898201   		.uleb128 0x4109
 797 00f8 00       		.byte	0
 798 00f9 11       		.uleb128 0x11
 799 00fa 01       		.uleb128 0x1
 800 00fb 31       		.uleb128 0x31
 801 00fc 13       		.uleb128 0x13
 802 00fd 00       		.byte	0
 803 00fe 00       		.byte	0
 804 00ff 11       		.uleb128 0x11
 805 0100 34       		.uleb128 0x34
 806 0101 00       		.byte	0
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 26


 807 0102 03       		.uleb128 0x3
 808 0103 0E       		.uleb128 0xe
 809 0104 3A       		.uleb128 0x3a
 810 0105 0B       		.uleb128 0xb
 811 0106 3B       		.uleb128 0x3b
 812 0107 0B       		.uleb128 0xb
 813 0108 49       		.uleb128 0x49
 814 0109 13       		.uleb128 0x13
 815 010a 3F       		.uleb128 0x3f
 816 010b 19       		.uleb128 0x19
 817 010c 02       		.uleb128 0x2
 818 010d 18       		.uleb128 0x18
 819 010e 00       		.byte	0
 820 010f 00       		.byte	0
 821 0110 00       		.byte	0
 822              		.section	.debug_aranges,"",%progbits
 823 0000 5C000000 		.4byte	0x5c
 824 0004 0200     		.2byte	0x2
 825 0006 00000000 		.4byte	.Ldebug_info0
 826 000a 04       		.byte	0x4
 827 000b 00       		.byte	0
 828 000c 0000     		.2byte	0
 829 000e 0000     		.2byte	0
 830 0010 00000000 		.4byte	.LFB1
 831 0014 10000000 		.4byte	.LFE1-.LFB1
 832 0018 00000000 		.4byte	.LFB3
 833 001c 10000000 		.4byte	.LFE3-.LFB3
 834 0020 00000000 		.4byte	.LFB4
 835 0024 18000000 		.4byte	.LFE4-.LFB4
 836 0028 00000000 		.4byte	.LFB5
 837 002c 0C000000 		.4byte	.LFE5-.LFB5
 838 0030 00000000 		.4byte	.LFB6
 839 0034 0C000000 		.4byte	.LFE6-.LFB6
 840 0038 00000000 		.4byte	.LFB7
 841 003c 0C000000 		.4byte	.LFE7-.LFB7
 842 0040 00000000 		.4byte	.LFB8
 843 0044 0C000000 		.4byte	.LFE8-.LFB8
 844 0048 00000000 		.4byte	.LFB0
 845 004c 18000000 		.4byte	.LFE0-.LFB0
 846 0050 00000000 		.4byte	.LFB2
 847 0054 1C000000 		.4byte	.LFE2-.LFB2
 848 0058 00000000 		.4byte	0
 849 005c 00000000 		.4byte	0
 850              		.section	.debug_ranges,"",%progbits
 851              	.Ldebug_ranges0:
 852 0000 00000000 		.4byte	.LFB1
 853 0004 10000000 		.4byte	.LFE1
 854 0008 00000000 		.4byte	.LFB3
 855 000c 10000000 		.4byte	.LFE3
 856 0010 00000000 		.4byte	.LFB4
 857 0014 18000000 		.4byte	.LFE4
 858 0018 00000000 		.4byte	.LFB5
 859 001c 0C000000 		.4byte	.LFE5
 860 0020 00000000 		.4byte	.LFB6
 861 0024 0C000000 		.4byte	.LFE6
 862 0028 00000000 		.4byte	.LFB7
 863 002c 0C000000 		.4byte	.LFE7
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 27


 864 0030 00000000 		.4byte	.LFB8
 865 0034 0C000000 		.4byte	.LFE8
 866 0038 00000000 		.4byte	.LFB0
 867 003c 18000000 		.4byte	.LFE0
 868 0040 00000000 		.4byte	.LFB2
 869 0044 1C000000 		.4byte	.LFE2
 870 0048 00000000 		.4byte	0
 871 004c 00000000 		.4byte	0
 872              		.section	.debug_line,"",%progbits
 873              	.Ldebug_line0:
 874 0000 FC000000 		.section	.debug_str,"MS",%progbits,1
 874      02004D00 
 874      00000201 
 874      FB0E0D00 
 874      01010101 
 875              	.LASF15:
 876 0000 72656731 		.ascii	"reg16\000"
 876      3600
 877              	.LASF24:
 878 0006 5052535F 		.ascii	"PRS_1_Read\000"
 878      315F5265 
 878      616400
 879              	.LASF32:
 880 0011 5052535F 		.ascii	"PRS_1_backup\000"
 880      315F6261 
 880      636B7570 
 880      00
 881              	.LASF35:
 882 001e 433A5C55 		.ascii	"C:\\Users\\bkettle\\OneDrive\\School\\6.115\\projec"
 882      73657273 
 882      5C626B65 
 882      74746C65 
 882      5C4F6E65 
 883 004b 745C7073 		.ascii	"t\\psoc\\Password Keeper\\Serial USB Test.cydsn\000"
 883      6F635C50 
 883      61737377 
 883      6F726420 
 883      4B656570 
 884              	.LASF11:
 885 0078 666C6F61 		.ascii	"float\000"
 885      7400
 886              	.LASF3:
 887 007e 73686F72 		.ascii	"short unsigned int\000"
 887      7420756E 
 887      7369676E 
 887      65642069 
 887      6E7400
 888              	.LASF26:
 889 0091 5052535F 		.ascii	"PRS_1_WriteSeed\000"
 889      315F5772 
 889      69746553 
 889      65656400 
 890              	.LASF27:
 891 00a1 5052535F 		.ascii	"PRS_1_WritePolynomial\000"
 891      315F5772 
 891      69746550 
 891      6F6C796E 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 28


 891      6F6D6961 
 892              	.LASF1:
 893 00b7 756E7369 		.ascii	"unsigned char\000"
 893      676E6564 
 893      20636861 
 893      7200
 894              	.LASF33:
 895 00c5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 895      43313120 
 895      352E342E 
 895      31203230 
 895      31363036 
 896 00f8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 896      20726576 
 896      6973696F 
 896      6E203233 
 896      37373135 
 897 012b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 897      66756E63 
 897      74696F6E 
 897      2D736563 
 897      74696F6E 
 898              	.LASF14:
 899 0153 72656738 		.ascii	"reg8\000"
 899      00
 900              	.LASF5:
 901 0158 6C6F6E67 		.ascii	"long unsigned int\000"
 901      20756E73 
 901      69676E65 
 901      6420696E 
 901      7400
 902              	.LASF9:
 903 016a 75696E74 		.ascii	"uint8\000"
 903      3800
 904              	.LASF34:
 905 0170 47656E65 		.ascii	"Generated_Source\\PSoC5\\PRS_1.c\000"
 905      72617465 
 905      645F536F 
 905      75726365 
 905      5C50536F 
 906              	.LASF30:
 907 018f 5052535F 		.ascii	"PRS_1_Start\000"
 907      315F5374 
 907      61727400 
 908              	.LASF12:
 909 019b 646F7562 		.ascii	"double\000"
 909      6C6500
 910              	.LASF28:
 911 01a2 706F6C79 		.ascii	"polynomial\000"
 911      6E6F6D69 
 911      616C00
 912              	.LASF10:
 913 01ad 75696E74 		.ascii	"uint16\000"
 913      313600
 914              	.LASF31:
 915 01b4 5052535F 		.ascii	"PRS_1_initVar\000"
 915      315F696E 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 29


 915      69745661 
 915      7200
 916              	.LASF29:
 917 01c2 5052535F 		.ascii	"PRS_1_Init\000"
 917      315F496E 
 917      697400
 918              	.LASF8:
 919 01cd 756E7369 		.ascii	"unsigned int\000"
 919      676E6564 
 919      20696E74 
 919      00
 920              	.LASF25:
 921 01da 5052535F 		.ascii	"PRS_1_ReadPolynomial\000"
 921      315F5265 
 921      6164506F 
 921      6C796E6F 
 921      6D69616C 
 922              	.LASF7:
 923 01ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 923      206C6F6E 
 923      6720756E 
 923      7369676E 
 923      65642069 
 924              	.LASF23:
 925 0206 5052535F 		.ascii	"PRS_1_Step\000"
 925      315F5374 
 925      657000
 926              	.LASF16:
 927 0211 6C6F6E67 		.ascii	"long double\000"
 927      20646F75 
 927      626C6500 
 928              	.LASF17:
 929 021d 73697A65 		.ascii	"sizetype\000"
 929      74797065 
 929      00
 930              	.LASF21:
 931 0226 5052535F 		.ascii	"PRS_1_Enable\000"
 931      315F456E 
 931      61626C65 
 931      00
 932              	.LASF6:
 933 0233 6C6F6E67 		.ascii	"long long int\000"
 933      206C6F6E 
 933      6720696E 
 933      7400
 934              	.LASF13:
 935 0241 63686172 		.ascii	"char\000"
 935      00
 936              	.LASF20:
 937 0246 5052535F 		.ascii	"PRS_1_BACKUP_STRUCT\000"
 937      315F4241 
 937      434B5550 
 937      5F535452 
 937      55435400 
 938              	.LASF2:
 939 025a 73686F72 		.ascii	"short int\000"
 939      7420696E 
ARM GAS  C:\Users\bkettle\AppData\Local\Temp\ccckpLAR.s 			page 30


 939      7400
 940              	.LASF19:
 941 0264 73656564 		.ascii	"seed\000"
 941      00
 942              	.LASF4:
 943 0269 6C6F6E67 		.ascii	"long int\000"
 943      20696E74 
 943      00
 944              	.LASF18:
 945 0272 656E6162 		.ascii	"enableState\000"
 945      6C655374 
 945      61746500 
 946              	.LASF22:
 947 027e 5052535F 		.ascii	"PRS_1_Stop\000"
 947      315F5374 
 947      6F7000
 948              	.LASF0:
 949 0289 7369676E 		.ascii	"signed char\000"
 949      65642063 
 949      68617200 
 950              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
